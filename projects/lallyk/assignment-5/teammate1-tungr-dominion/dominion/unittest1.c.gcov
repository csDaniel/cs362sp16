        -:    0:Source:unittest1.c
        -:    0:Graph:unittest1.gcno
        -:    0:Data:unittest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/********************************************************************
        -:    2: * Kara Franco
        -:    3: * unittest1: compare() function
        -:    4: * Due Date: April 24, 2016
        -:    5: * ****************************************************************/
        -:    6:
        -:    7:#include "dominion.h"
        -:    8:#include <stdio.h>
        -:    9:
function main called 1 returned 100% blocks executed 85%
        1:   10:int main(){
        -:   11:
        1:   12:	printf("\n------------------------Unit Test 1-----------------------------\n\n");
call    0 returned 100%
        1:   13:	printf("---Test compare()---\n");
call    0 returned 100%
        -:   14:
        -:   15:	// compare() looks at two values for inequality
        -:   16:	// in this test we will look at each sign: < > =
        1:   17:	int less = 1;
        1:   18:	int greater = 2;
        1:   19:	int* lessThan = &less;
        1:   20:	int* greaterThan = &greater;
        -:   21:
        1:   22:	printf("Testing value1 is less than value2...\n");
call    0 returned 100%
        1:   23:	if(compare(lessThan, greaterThan) == -1){
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   24:		printf("PASS\n");
call    0 returned 100%
        -:   25:	} else {
    #####:   26:		printf("FAIL\n");
call    0 never executed
        -:   27:	}
        1:   28:	printf("Testing value1 is greater than value2...\n");
call    0 returned 100%
        1:   29:	if(compare(greaterThan, lessThan) == 1){
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   30:		printf("PASS\n");
call    0 returned 100%
        -:   31:	} else {
    #####:   32:		printf("FAIL\n");
call    0 never executed
        -:   33:	}
        1:   34:	printf("Testing for equality...\n");
call    0 returned 100%
        1:   35:	if(compare(greaterThan, greaterThan) == 0){
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   36:		printf("PASS\n");
call    0 returned 100%
        -:   37:	} else {
    #####:   38:		printf("FAIL\n");
call    0 never executed
        -:   39:	}
        -:   40:
        1:   41:	printf("---compare() Test Complete---\n\n");
call    0 returned 100%
        1:   42:	return 0;
        -:   43:}
