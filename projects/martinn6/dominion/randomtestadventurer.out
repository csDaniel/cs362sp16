randomtestadventurer.c: testing adventure:
----------------- Testing Card: adventurer ----------------
TEST: +2 treasure cards
Add Adventure Cards to user decks; 
Start: Player Turn: 2; handcount: 1; before_deckTreasureCount=3; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 0; handcount: 8; before_deckTreasureCount=1; handpos: 9; 
Before:card=4; card=4; card=1; card=4; card=4; card=7; card=4; card=4; 
After:card=4; card=4; card=1; card=4; card=4; card=7; card=4; card=4; card=4; newCards=1
hand count before=8; hand count after=9; expected=9 PASSED
treaure card count before =6; treaure card count after=7; expected=7 PASSED

Start: Player Turn: 3; handcount: 1; before_deckTreasureCount=3; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 1; handcount: 1; before_deckTreasureCount=8; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 0; handcount: 9; before_deckTreasureCount=0; handpos: 10; 
Before:card=4; card=4; card=1; card=4; card=4; card=7; card=4; card=4; card=4; 
After:card=4; card=4; card=1; card=4; card=4; card=7; card=4; card=4; card=4; newCards=0
hand count before=9; hand count after=9; expected=9 PASSED
treaure card count before =7; treaure card count after=7; expected=7 PASSED

Start: Player Turn: 1; handcount: 1; before_deckTreasureCount=8; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 1; handcount: 1; before_deckTreasureCount=8; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 3; handcount: 1; before_deckTreasureCount=3; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 2; handcount: 1; before_deckTreasureCount=3; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 2; handcount: 1; before_deckTreasureCount=3; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 3; handcount: 1; before_deckTreasureCount=3; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 2; handcount: 1; before_deckTreasureCount=3; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 1; handcount: 1; before_deckTreasureCount=8; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 2; handcount: 1; before_deckTreasureCount=3; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 3; handcount: 1; before_deckTreasureCount=3; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 1; handcount: 1; before_deckTreasureCount=8; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 2; handcount: 1; before_deckTreasureCount=3; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 3; handcount: 1; before_deckTreasureCount=3; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 3; handcount: 1; before_deckTreasureCount=3; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 0; handcount: 9; before_deckTreasureCount=0; handpos: 10; 
Before:card=4; card=4; card=1; card=4; card=4; card=7; card=4; card=4; card=4; 
After:card=4; card=4; card=1; card=4; card=4; card=7; card=4; card=4; card=4; newCards=0
hand count before=9; hand count after=9; expected=9 PASSED
treaure card count before =7; treaure card count after=7; expected=7 PASSED

Start: Player Turn: 0; handcount: 9; before_deckTreasureCount=0; handpos: 10; 
Before:card=4; card=4; card=1; card=4; card=4; card=7; card=4; card=4; card=4; 
After:card=4; card=4; card=1; card=4; card=4; card=7; card=4; card=4; card=4; newCards=0
hand count before=9; hand count after=9; expected=9 PASSED
treaure card count before =7; treaure card count after=7; expected=7 PASSED

Start: Player Turn: 0; handcount: 9; before_deckTreasureCount=0; handpos: 10; 
Before:card=4; card=4; card=1; card=4; card=4; card=7; card=4; card=4; card=4; 
After:card=4; card=4; card=1; card=4; card=4; card=7; card=4; card=4; card=4; newCards=0
hand count before=9; hand count after=9; expected=9 PASSED
treaure card count before =7; treaure card count after=7; expected=7 PASSED

Start: Player Turn: 3; handcount: 1; before_deckTreasureCount=3; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 1; handcount: 1; before_deckTreasureCount=8; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED

Start: Player Turn: 1; handcount: 1; before_deckTreasureCount=8; handpos: 2; 
Before:card=7; 
After:card=7; newCards=2
hand count before=1; hand count after=1; expected=3 FAILED
treaure card count before =0; treaure card count after=0; expected=2 FAILED
Function 'updateCoins'
Lines executed:81.82% of 11

Function 'gainCard'
Lines executed:0.00% of 13

Function 'discardCard'
Lines executed:100.00% of 13

Function 'cardEffect'
Lines executed:5.51% of 236

Function 'getCost'
Lines executed:0.00% of 30

Function 'drawCard'
Lines executed:100.00% of 22

Function 'getWinners'
Lines executed:0.00% of 24

Function 'scoreFor'
Lines executed:0.00% of 24

Function 'isGameOver'
Lines executed:0.00% of 10

Function 'endTurn'
Lines executed:0.00% of 20

Function 'whoseTurn'
Lines executed:100.00% of 2

Function 'fullDeckCount'
Lines executed:0.00% of 9

Function 'supplyCount'
Lines executed:0.00% of 2

Function 'handCard'
Lines executed:0.00% of 3

Function 'numHandCards'
Lines executed:0.00% of 2

Function 'buyCard'
Lines executed:0.00% of 13

Function 'playCard'
Lines executed:0.00% of 14

Function 'shuffle'
Lines executed:100.00% of 16

Function 'initializeGame'
Lines executed:88.71% of 62

Function 'kingdomCards'
Lines executed:0.00% of 13

Function 'newGame'
Lines executed:0.00% of 3

Function 'compare'
Lines executed:83.33% of 6

Function 'playFeast'
Lines executed:0.00% of 17

Function 'playVillage'
Lines executed:100.00% of 5

Function 'playSmithy'
Lines executed:100.00% of 6

Function 'playAdventurer'
Lines executed:100.00% of 18

File 'dominion.c'
Lines executed:27.61% of 594
Creating 'dominion.c.gcov'

