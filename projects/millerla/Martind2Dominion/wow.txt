Current hand count: 0
Current hand count: 1
Current hand count: 2
Current hand count: 3
Current hand count: 4
--------------- UNIT TEST 1 ---------------
------------- BUY CARD TESTS --------------

TEST 1: Player 0 has no buys, buyCard returns -1
Entering buyCard...
You do not have any buys left
buyCard returned -1

TEST 2: Player 0 tries to draw card where none left
Entering buyCard...
There are not any of that type of card left
buyCard returned -1

TEST 3: Player 0 doesn't have enough coin to purchaseEntering buyCard...
You do not have enough money to buy that. You have 0 coins.
buyCard returned -1

TEST 4: Player 0 purchases adventurer card, +1 discardCountEntering buyCard...
You bought card number 7 for 6 coins. You now have 0 buys and 0 coins.
buyCard returned 0, discardCount: 1, expected: 1

TEST 5: Supply count for card 0 decremented by 1
Supply count for adventurer: 9, expected 9

TEST 6: Number of buys decremented by 1
Num of buys left: 0, expected 0

TEST 7: Amt. of coin has decremented.
Coin: 0, expected 0

--------------- ALL TESTS PASSED ---------------
Current hand count: 0
Current hand count: 1
Current hand count: 2
Current hand count: 3
Current hand count: 4
--------------- UNIT TEST 1 ---------------
------------- BUY CARD TESTS --------------

TEST 1: Player 0 has no buys, buyCard returns -1
Entering buyCard...
You do not have any buys left
buyCard returned -1

TEST 2: Player 0 tries to draw card where none left
Entering buyCard...
There are not any of that type of card left
buyCard returned -1

TEST 3: Player 0 doesn't have enough coin to purchaseEntering buyCard...
You do not have enough money to buy that. You have 0 coins.
buyCard returned -1

TEST 4: Player 0 purchases adventurer card, +1 discardCountEntering buyCard...
You bought card number 7 for 6 coins. You now have 0 buys and 0 coins.
buyCard returned 0, discardCount: 1, expected: 1

TEST 5: Supply count for card 0 decremented by 1
Supply count for adventurer: 9, expected 9

TEST 6: Number of buys decremented by 1
Num of buys left: 0, expected 0

TEST 7: Amt. of coin has decremented.
Coin: 0, expected 0

--------------- ALL TESTS PASSED ---------------
        -:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
       40:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
       40:  280:  who = state->whoseTurn;
        -:  281:
       40:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
       10:  284:      printf("You do not have any buys left\n");
       10:  285:    return -1;
       30:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
       10:  288:      printf("There are not any of that type of card left\n");
       10:  289:    return -1;
       20:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG) 
       10:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
       10:  293:    return -1;
        -:  294:  } else {
       10:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
       10:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:  
       10:  299:    state->coins = (state->coins) - (getCost(supplyPos));
       10:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
       10:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:    
       10:  308:  return 0;
       40:  309:}
