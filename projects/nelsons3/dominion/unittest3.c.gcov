        -:    0:Source:unittest3.c
        -:    0:Graph:unittest3.gcno
        -:    0:Data:unittest3.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3:#include <assert.h>
        -:    4:#include "dominion.h"
        -:    5:#include "dominion_helpers.h"
        -:    6:
        -:    7://Test case for getCost(int)
function main called 1 returned 100% blocks executed 99%
        1:    8:int main() 
        -:    9:{
        1:   10:	printf("\n\ntesting getCost() method.\n\n");
call    0 returned 100%
        1:   11:    printf("test estate points first");
call    0 returned 100%
        1:   12:    printf("Test Estate points first\n");   
call    0 returned 100%
        1:   13:    if(getCost(curse)==0)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   14:        printf("Curse value passed");
call    0 returned 100%
        1:   15:    if(getCost(estate)==2)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   16:        printf("estate value passed");
call    0 returned 100%
        1:   17:    if(getCost(duchy)==5)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   18:        printf("duchy value passed");
call    0 returned 100%
        1:   19:    if(getCost(province)==8)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   20:        printf("province value passed");   
call    0 returned 100%
        1:   21:    printf("\ntest monies next\n");
call    0 returned 100%
        1:   22:    if(getCost(copper)==0)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   23:        printf("copper value passed");
call    0 returned 100%
        1:   24:    if(getCost(silver)==3)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   25:        printf("silver value passed");
call    0 returned 100%
        1:   26:    if(getCost(gold)==6)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   27:        printf("gold value passed");
call    0 returned 100%
        1:   28:    printf("\ntest playcards last\n");
call    0 returned 100%
        1:   29:    if(getCost(adventurer)==6)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   30:        printf("adventurer value passed"); 
call    0 returned 100%
        1:   31:    if(getCost(council_room)==5)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   32:        printf("council_room value passed");
call    0 returned 100%
        1:   33:    if(getCost(feast)==4)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   34:        printf("feast value passed");
call    0 returned 100%
        1:   35:    if(getCost(gardens)==4)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   36:        printf("gardens value passed");
call    0 returned 100%
        1:   37:    if(getCost(mine)==5)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   38:        printf("mine value passed");   
call    0 returned 100%
        1:   39:    if(getCost(remodel)==4)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   40:        printf("remodel value passed");
call    0 returned 100%
        1:   41:    if(getCost(smithy)==4)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   42:        printf("smithy value passed");
call    0 returned 100%
        1:   43:    if(getCost(village)==3)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   44:        printf("village value passed");
call    0 returned 100%
        1:   45:    if(getCost(baron)==4)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   46:        printf("baron value passed");    
call    0 returned 100%
        1:   47:    if(getCost(great_hall)==3)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   48:        printf("great_hall value passed");
call    0 returned 100%
        1:   49:    if(getCost(minion)==5)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   50:        printf("minion value passed"); 
call    0 returned 100%
        1:   51:    if(getCost(steward)==3)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   52:        printf("steward value passed");
call    0 returned 100%
        1:   53:    if(getCost(tribute)==5)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   54:        printf("tribute value passed");
call    0 returned 100%
        1:   55:    if(getCost(ambassador)==3)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   56:        printf("ambassador value passed");
call    0 returned 100%
        1:   57:    if(getCost(cutpurse)==4)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   58:        printf("cutpurse value passed");   
call    0 returned 100%
        1:   59:    if(getCost(embargo)==2)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   60:        printf("embargo value passed");
call    0 returned 100%
        1:   61:    if(getCost(outpost)==2)
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:   62:        printf("outpost value passed");
call    0 never executed
        1:   63:    if(getCost(salvager)==4)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   64:        printf("salvager value passed");
call    0 returned 100%
        1:   65:    if(getCost(sea_hag)==4)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   66:        printf("sea_hag value passed");        
call    0 returned 100%
        1:   67:    if(getCost(treasure_map)==4)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   68:        printf("treasure_map value passed"); 
call    0 returned 100%
        -:   69:
        1:   70:    printf("\nUnit test 3 passed. \n");
call    0 returned 100%
        1:   71:return 0;
        -:   72:}
