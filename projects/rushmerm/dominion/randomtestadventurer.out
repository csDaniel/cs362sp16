----------------- Random Testing Card: adventurer ----------------
Iteration 0
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 1
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 2
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 3
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 4
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 5
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 6
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 7
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 8
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 9
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 10
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 11
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 12
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 13
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 14
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 15
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 16
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 17
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 18
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 19
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 20
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 21
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 22
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 23
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 24
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 25
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 26
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 27
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 28
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 29
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 30
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 31
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 32
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 33
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 34
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 35
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 36
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 37
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 38
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 39
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 40
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 41
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 42
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 43
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 44
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 45
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 46
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 47
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 48
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 49
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 50
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 51
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 52
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 53
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 54
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 55
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 56
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 57
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 58
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 59
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 60
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 61
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 62
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 63
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 64
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 65
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 66
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 67
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 68
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 69
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 70
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 71
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 72
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 73
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 74
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 75
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 76
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 77
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 78
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 79
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 80
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 81
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 82
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 83
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 84
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 85
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 86
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 87
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 88
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 89
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 90
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 91
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 92
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 93
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 94
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 95
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 96
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 97
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 98
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 99
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 100
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 101
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 102
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 103
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 104
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 105
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 106
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 107
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 108
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 109
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 110
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 111
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 112
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 113
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 114
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 115
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 116
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 117
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 118
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 119
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 120
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 121
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 122
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 123
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 124
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 125
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 126
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 127
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 128
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 129
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 130
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 131
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 132
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 133
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 134
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 135
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 136
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 137
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 138
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 139
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 140
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 141
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 142
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 143
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 144
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 145
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 146
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 147
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 148
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 149
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 150
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 151
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 152
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 153
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 154
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 155
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 156
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 157
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 158
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 159
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 160
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 161
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 162
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 163
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 164
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 165
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 166
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 167
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 168
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 169
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 170
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 171
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 172
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 173
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 174
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 175
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 176
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 177
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 178
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 179
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 180
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 181
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 182
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 183
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 184
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 185
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 186
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 187
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 188
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 189
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 190
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 191
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 192
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 193
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 194
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 195
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 196
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 197
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 198
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 199
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 200
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 201
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 202
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 203
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 204
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 205
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 206
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 207
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 208
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 209
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 210
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 211
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 212
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 213
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 214
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 215
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 216
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 217
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 218
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 219
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 220
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 221
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 222
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 223
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 224
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 225
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 226
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 227
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 228
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 229
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 230
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 231
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 232
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 233
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 234
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 235
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 236
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 237
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 238
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 239
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 240
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 241
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 242
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 243
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 244
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 245
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 246
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 247
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 248
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 249
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 250
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 251
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 252
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 253
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 254
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 255
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 256
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 257
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 258
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 259
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 260
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 261
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 262
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 263
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 264
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 265
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 266
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 267
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 268
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 269
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 270
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 271
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 272
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 273
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 274
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 275
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 276
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 277
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 278
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 279
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 280
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 281
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 282
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 283
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 284
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 285
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 286
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 287
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 288
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 289
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 290
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 291
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 292
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 293
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 294
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 295
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 296
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 297
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 298
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 299
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 300
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 301
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 302
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 303
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 304
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 305
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 306
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 307
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 308
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 309
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 310
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 311
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 312
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 313
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 314
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 315
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 316
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 317
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 318
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 319
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 320
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 321
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 322
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 323
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 324
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 325
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 326
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 327
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 328
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 329
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 330
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 331
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 332
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 333
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 334
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 335
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 336
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 337
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 338
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 339
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 340
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 341
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 342
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 343
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 344
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 345
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 346
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 347
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 348
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 349
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 350
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 351
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 352
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 353
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 354
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 355
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 356
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 357
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 358
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 359
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 360
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 361
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 362
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 363
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 364
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 365
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 366
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 367
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 368
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 369
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 370
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 371
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 372
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 373
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 374
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 375
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 376
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 377
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 378
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 379
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 380
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 381
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 382
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 383
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 384
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 385
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 386
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 387
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 388
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 389
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 390
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 391
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 392
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 393
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 394
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 395
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 396
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 397
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 398
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 399
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 400
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 401
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 402
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 403
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 404
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 405
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 406
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 407
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 408
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 409
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 410
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 411
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 412
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 413
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 414
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 415
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 416
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 417
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 418
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 419
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 420
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 421
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 422
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 423
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 424
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 425
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 426
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 427
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 428
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 429
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 430
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 431
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 432
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 433
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 434
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 435
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 436
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 437
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 438
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 439
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 440
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 441
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 442
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 443
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 444
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 445
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 446
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 447
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 448
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 449
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 450
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 451
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 452
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 453
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 454
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 455
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 456
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 457
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 458
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 459
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 460
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 461
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 462
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 463
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 464
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 465
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 466
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 467
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 468
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 469
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 470
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 471
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 472
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 473
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 474
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 475
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 476
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 477
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 478
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 479
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 480
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 481
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 482
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 483
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 484
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 485
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 486
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 487
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 488
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 489
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 490
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 491
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 492
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 493
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 494
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 495
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 496
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 497
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 498
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 499
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 500
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 501
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 502
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 503
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 504
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 505
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 506
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 507
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 508
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 509
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 510
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 511
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 512
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 513
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 514
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 515
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 516
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 517
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 518
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 519
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 520
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 521
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 522
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 523
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 524
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 525
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 526
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 527
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 528
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 529
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 530
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 531
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 532
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 533
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 534
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 535
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 536
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 537
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 538
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 539
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 540
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 541
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 542
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 543
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 544
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 545
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 546
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 547
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 548
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 549
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 550
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 551
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 552
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 553
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 554
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 555
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 556
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 557
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 558
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 559
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 560
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 561
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 562
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 563
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 564
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 565
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 566
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 567
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 568
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 569
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 570
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 571
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 572
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 573
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 574
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 575
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 576
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 577
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 578
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 579
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 580
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 581
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 582
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 583
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 584
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 585
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 586
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 587
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 588
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 589
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 590
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 591
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 592
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 593
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 594
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 595
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 596
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 597
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 598
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 599
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 600
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 601
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 602
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 603
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 604
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 605
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 606
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 607
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 608
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 609
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 610
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 611
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 612
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 613
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 614
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 615
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 616
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 617
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 618
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 619
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 620
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 621
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 622
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 623
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 624
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 625
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 626
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 627
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 628
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 629
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 630
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 631
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 632
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 633
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 634
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 635
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 636
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 637
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 638
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 639
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 640
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 641
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 642
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 643
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 644
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 645
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 646
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 647
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 648
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 649
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 650
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 651
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 652
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 653
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 654
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 655
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 656
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 657
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 658
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 659
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 660
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 661
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 662
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 663
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 664
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 665
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 666
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 667
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 668
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 669
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 670
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 671
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 672
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 673
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 674
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 675
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 676
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 677
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 678
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 679
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 680
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 681
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 682
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 683
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 684
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 685
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 686
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 687
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 688
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 689
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 690
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 691
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 692
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 693
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 694
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 695
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 696
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 697
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 698
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 699
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 700
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 701
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 702
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 703
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 704
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 705
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 706
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 707
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 708
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 709
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 710
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 711
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 712
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 713
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 714
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 715
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 716
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 717
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 718
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 719
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 720
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 721
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 722
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 723
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 724
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 725
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 726
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 727
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 728
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 729
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 730
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 731
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 732
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 733
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 734
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 735
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 736
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 737
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 738
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 739
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 740
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 741
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 742
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 743
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 744
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 745
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 746
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 747
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 748
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 749
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 750
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 751
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 752
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 753
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 754
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 755
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 756
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 757
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 758
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 759
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 760
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 761
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 762
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 763
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 764
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 765
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 766
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 767
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 768
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 769
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 770
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 771
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 772
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 773
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 774
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 775
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 776
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 777
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 778
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 779
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 780
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 781
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 782
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 783
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 784
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 785
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 786
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 787
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 788
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 789
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 790
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 791
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 792
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 793
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 794
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 795
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 796
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 797
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 798
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 799
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 800
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 801
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 802
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 803
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 804
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 805
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 806
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 807
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 808
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 809
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 810
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 811
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 812
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 813
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 814
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 815
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 816
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 817
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 818
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 819
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 820
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 821
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 822
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 823
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 824
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 825
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 826
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 827
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 828
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 829
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 830
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 831
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 832
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 833
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 834
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 835
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 836
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 837
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 838
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 839
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 840
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 841
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 842
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 843
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 844
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 845
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 846
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 847
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 848
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 849
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 850
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 851
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 852
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 853
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 854
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 855
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 856
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 857
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 858
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 859
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 860
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 861
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 862
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 863
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 864
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 865
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 866
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 867
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 868
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 869
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 870
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 871
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 872
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 873
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 874
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 875
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 876
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 877
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 878
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 879
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 880
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 881
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 882
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 883
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 884
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 885
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 886
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 887
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 888
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 889
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 890
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 891
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 892
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 893
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 894
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 895
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 896
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 897
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 898
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 899
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 900
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 901
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 902
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 903
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 904
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 905
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 906
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 907
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 908
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 909
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 910
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 911
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 912
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 913
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 914
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 915
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 916
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 917
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 918
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 919
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 920
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 921
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 922
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 923
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 924
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 925
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 926
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 927
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 928
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 929
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 930
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 931
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 932
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 933
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 934
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 935
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 936
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 937
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 938
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 939
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 940
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 941
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 942
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 943
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 944
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 945
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 946
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 947
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 948
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 949
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 950
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 951
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 952
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 953
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 954
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 955
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 956
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 957
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 958
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 959
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 960
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 961
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 962
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 963
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 964
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 965
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 966
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 967
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 968
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 969
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 970
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 971
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 972
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 973
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 974
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 975
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 976
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 977
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 978
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 979
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 980
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 981
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 982
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 983
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 984
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 985
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 986
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 987
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 988
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 989
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 990
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 991
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 992
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 993
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 994
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 995
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 996
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 997
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 998
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 999
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
File 'dominion.c'
Lines executed:38.80% of 567
Branches executed:37.17% of 417
Taken at least once:29.98% of 417
Calls executed:33.00% of 100
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:43
        -:    0:Programs:10
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
function compare called 6319169 returned 100% blocks executed 100%
  6319169:    8:int compare(const void* a, const void* b) {
  6319169:    8-block  0
  6319169:    9:  if (*(int*)a > *(int*)b)
  6319169:    9-block  0
branch  0 taken 13% (fallthrough)
branch  1 taken 87%
   850264:   10:    return 1;
   850264:   10-block  0
  5468905:   11:  if (*(int*)a < *(int*)b)
  5468905:   11-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
    41933:   12:    return -1;
    41933:   12-block  0
  5426972:   13:  return 0;
  5426972:   13-block  0
        -:   14:}
        -:   15:
function newGame called 0 returned 0% blocks executed 0%
    #####:   16:struct gameState* newGame() {
    $$$$$:   16-block  0
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
    $$$$$:   18-block  0
        -:   19:}
        -:   20:
function kingdomCards called 0 returned 0% blocks executed 0%
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
    $$$$$:   21-block  0
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
    $$$$$:   34-block  0
        -:   35:}
        -:   36:
function initializeGame called 3125 returned 100% blocks executed 94%
     3125:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
     3125:   37-block  0
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;			
        -:   43:  //set up random number generator
     3125:   44:  SelectStream(1);
     3125:   44-block  0
call    0 returned 100%
     3125:   45:  PutSeed((long)randomSeed);
call    0 returned 100%
        -:   46:  
        -:   47:  //check number of players
     3125:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
     3125:   48-block  0
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:   49:    {
    #####:   50:      return -1;
    $$$$$:   50-block  0
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
     3125:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    34375:   57:  for (i = 0; i < 10; i++)
     3125:   57-block  0
    31250:   57-block  1
    34375:   57-block  2
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
        -:   58:    {
   343750:   59:      for (j = 0; j < 10; j++)
    31250:   59-block  0
   312500:   59-block  1
   343750:   59-block  2
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
        -:   60:        {
   312500:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
   312500:   61-block  0
branch  0 taken 90% (fallthrough)
branch  1 taken 10%
   281250:   61-block  1
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:   62:	    {
    #####:   63:	      return -1;
    $$$$$:   63-block  0
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
     3125:   73:  if (numPlayers == 2)
     3125:   73-block  0
branch  0 taken 36% (fallthrough)
branch  1 taken 64%
        -:   74:    {
     1131:   75:      state->supplyCount[curse] = 10;
     1131:   75-block  0
        -:   76:    }
     1994:   77:  else if (numPlayers == 3)
     1994:   77-block  0
branch  0 taken 49% (fallthrough)
branch  1 taken 51%
        -:   78:    {
      986:   79:      state->supplyCount[curse] = 20;
      986:   79-block  0
        -:   80:    }
        -:   81:  else
        -:   82:    {
     1008:   83:      state->supplyCount[curse] = 30;
     1008:   83-block  0
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
     3125:   87:  if (numPlayers == 2)
     3125:   87-block  0
branch  0 taken 36% (fallthrough)
branch  1 taken 64%
        -:   88:    {
     1131:   89:      state->supplyCount[estate] = 8;
     1131:   90:      state->supplyCount[duchy] = 8;
     1131:   91:      state->supplyCount[province] = 8;
     1131:   91-block  0
        -:   92:    }
        -:   93:  else
        -:   94:    {
     1994:   95:      state->supplyCount[estate] = 12;
     1994:   96:      state->supplyCount[duchy] = 12;
     1994:   97:      state->supplyCount[province] = 12;
     1994:   97-block  0
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
     3125:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
     3125:  102:  state->supplyCount[silver] = 40;
     3125:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    65625:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
     3125:  106-block  0
    62500:  106-block  1
    65625:  106-block  2
branch  0 taken 95%
branch  1 taken 5% (fallthrough)
        -:  107:    {
   515625:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
    62500:  108-block  0
   453125:  108-block  1
   515625:  108-block  2
branch  0 taken 94%
branch  1 taken 6% (fallthrough)
        -:  109:	{
   484375:  110:	  if (kingdomCards[j] == i)
   484375:  110-block  0
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    31250:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
    31250:  113-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
    31165:  113-block  1
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
        -:  114:		{
      340:  115:		  if (numPlayers == 2){ 
      170:  115-block  0
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
      170:  115-block  1
      170:  116:		    state->supplyCount[i] = 8; 
      170:  116-block  0
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
    $$$$$:  118-block  0
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    31080:  122:		  state->supplyCount[i] = 10;
    31080:  122-block  0
        -:  123:		}
    31250:  124:	      break;
    31250:  124-block  0
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
   453125:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    12377:  138:  for (i = 0; i < numPlayers; i++)
     3125:  138-block  0
     9252:  138-block  1
    12377:  138-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  139:    {
     9252:  140:      state->deckCount[i] = 0;
    37008:  141:      for (j = 0; j < 3; j++)
     9252:  141-block  0
    27756:  141-block  1
    37008:  141-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  142:	{
    27756:  143:	  state->deck[i][j] = estate;
    27756:  144:	  state->deckCount[i]++;
        -:  145:	}
    74016:  146:      for (j = 3; j < 10; j++)
     9252:  146-block  0
    64764:  146-block  1
    74016:  146-block  2
branch  0 taken 88%
branch  1 taken 13% (fallthrough)
        -:  147:	{
    64764:  148:	  state->deck[i][j] = copper;	  state->deckCount[i]++;		
        -:  149:	}
        -:  150:    }
        -:  151:
        -:  152:  //shuffle player decks
    12377:  153:  for (i = 0; i < numPlayers; i++)
     3125:  153-block  0
     9252:  153-block  1
    12377:  153-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  154:    {
     9252:  155:      if ( shuffle(i, state) < 0 )
     9252:  155-block  0
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
        -:  156:	{
    #####:  157:	  return -1;
    $$$$$:  157-block  0
        -:  158:	}
        -:  159:    }
        -:  160:
        -:  161:  //draw player hands
    12377:  162:  for (i = 0; i < numPlayers; i++)
     3125:  162-block  0
     9252:  162-block  1
    12377:  162-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  163:    {  
        -:  164:      //initialize hand size to zero
     9252:  165:      state->handCount[i] = 0;
     9252:  166:      state->discardCount[i] = 0;
        -:  167:      //draw 5 cards
        -:  168:      // for (j = 0; j < 5; j++)
        -:  169:      //	{
        -:  170:      //	  drawCard(i, state);
        -:  171:      //	}
        -:  172:    }
        -:  173:  
        -:  174:  //set embargo tokens to 0 for all supply piles
    87500:  175:  for (i = 0; i <= treasure_map; i++)
     3125:  175-block  0
    84375:  175-block  1
    87500:  175-block  2
branch  0 taken 96%
branch  1 taken 4% (fallthrough)
        -:  176:    {
    84375:  177:      state->embargoTokens[i] = 0;
        -:  178:    }
        -:  179:
        -:  180:  //initialize first player's turn
     3125:  181:  state->outpostPlayed = 0;
     3125:  182:  state->phase = 0;
     3125:  183:  state->numActions = 1;
     3125:  184:  state->numBuys = 1;
     3125:  185:  state->playedCardCount = 0;
     3125:  186:  state->whoseTurn = 0;
     3125:  187:  state->handCount[state->whoseTurn] = 0;
        -:  188:  //int it; move to top
        -:  189:
        -:  190:  //Moved draw cards to here, only drawing at the start of a turn
    18750:  191:  for (it = 0; it < 5; it++){
     3125:  191-block  0
    18750:  191-block  1
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
    15625:  192:    drawCard(state->whoseTurn, state);
    15625:  192-block  0
call    0 returned 100%
        -:  193:  }
        -:  194:
     3125:  195:  updateCoins(state->whoseTurn, state, 0);
     3125:  195-block  0
call    0 returned 100%
        -:  196:
     3125:  197:  return 0;
        -:  198:}
        -:  199:
function shuffle called 1193872 returned 100% blocks executed 100%
  1193872:  200:int shuffle(int player, struct gameState *state) {
  1193872:  200-block  0
        -:  201: 
        -:  202:
        -:  203:  int newDeck[MAX_DECK];
  1193872:  204:  int newDeckPos = 0;
        -:  205:  int card;
        -:  206:  int i;
        -:  207:
  1193872:  208:  if (state->deckCount[player] < 1)
  1193872:  208-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
  1179343:  209:    return -1;
  1179343:  209-block  0
    14529:  210:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare); 
    14529:  210-block  0
call    0 returned 100%
        -:  211:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  212:
  1451318:  213:  while (state->deckCount[player] > 0) {
  1451318:  213-block  0
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
  1436789:  214:    card = floor(Random() * state->deckCount[player]);
  1436789:  214-block  0
call    0 returned 100%
  1436789:  215:    newDeck[newDeckPos] = state->deck[player][card];
  1436789:  216:    newDeckPos++;
114769703:  217:    for (i = card; i < state->deckCount[player]-1; i++) {
113332914:  217-block  0
114769703:  217-block  1
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
113332914:  218:      state->deck[player][i] = state->deck[player][i+1];
        -:  219:    }
  1436789:  220:    state->deckCount[player]--;
  1436789:  220-block  0
        -:  221:  }
  1451318:  222:  for (i = 0; i < newDeckPos; i++) {
    14529:  222-block  0
  1436789:  222-block  1
  1451318:  222-block  2
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
  1436789:  223:    state->deck[player][i] = newDeck[i];
  1436789:  224:    state->deckCount[player]++;
        -:  225:  }
        -:  226:
  1193872:  227:  return 0;
    14529:  227-block  0
  1193872:  227-block  1
        -:  228:}
        -:  229:
function playCard called 0 returned 0% blocks executed 0%
    #####:  230:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state) 
    $$$$$:  230-block  0
        -:  231:{	
        -:  232:  int card;
    #####:  233:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  234:
        -:  235:  //check if it is the right phase
    #####:  236:  if (state->phase != 0)
    $$$$$:  236-block  0
branch  0 never executed
branch  1 never executed
        -:  237:    {
    #####:  238:      return -1;
    $$$$$:  238-block  0
        -:  239:    }
        -:  240:	
        -:  241:  //check if player has enough actions
    #####:  242:  if ( state->numActions < 1 )
    $$$$$:  242-block  0
branch  0 never executed
branch  1 never executed
        -:  243:    {
    #####:  244:      return -1;
    $$$$$:  244-block  0
        -:  245:    }
        -:  246:	
        -:  247:  //get card played
    #####:  248:  card = handCard(handPos, state);
    $$$$$:  248-block  0
call    0 never executed
        -:  249:	
        -:  250:  //check if selected card is an action
    #####:  251:  if ( card < adventurer || card > treasure_map )
branch  0 never executed
branch  1 never executed
    $$$$$:  251-block  0
branch  2 never executed
branch  3 never executed
        -:  252:    {
    #####:  253:      return -1;
    $$$$$:  253-block  0
        -:  254:    }
        -:  255:	
        -:  256:  //play card
    #####:  257:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
    $$$$$:  257-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  258:    {
    #####:  259:      return -1;
    $$$$$:  259-block  0
        -:  260:    }
        -:  261:	
        -:  262:  //reduce number of actions
    #####:  263:  state->numActions--;
        -:  264:
        -:  265:  //update coins (Treasure cards may be added with card draws)
    #####:  266:  updateCoins(state->whoseTurn, state, coin_bonus);
    $$$$$:  266-block  0
call    0 never executed
        -:  267:	
    #####:  268:  return 0;
    $$$$$:  268-block  0
        -:  269:}
        -:  270:
function buyCard called 0 returned 0% blocks executed 0%
    #####:  271:int buyCard(int supplyPos, struct gameState *state) {
    $$$$$:  271-block  0
    $$$$$:  271-block  1
        -:  272:  int who;
        -:  273:  if (DEBUG){
        -:  274:    printf("Entering buyCard...\n");
        -:  275:  }
        -:  276:
        -:  277:  // I don't know what to do about the phase thing.
        -:  278:
    #####:  279:  who = state->whoseTurn;
        -:  280:
    #####:  281:  if (state->numBuys < 1){
    $$$$$:  281-block  0
branch  0 never executed
branch  1 never executed
        -:  282:    if (DEBUG)
        -:  283:      printf("You do not have any buys left\n");
    #####:  284:    return -1;
    $$$$$:  284-block  0
    #####:  285:  } else if (supplyCount(supplyPos, state) <1){
    $$$$$:  285-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  286:    if (DEBUG)
        -:  287:      printf("There are not any of that type of card left\n");
    #####:  288:    return -1;
    $$$$$:  288-block  0
    #####:  289:  } else if (state->coins < getCost(supplyPos)){
    $$$$$:  289-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  290:    if (DEBUG) 
        -:  291:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  292:    return -1;
    $$$$$:  292-block  0
        -:  293:  } else {
    #####:  294:    state->phase=1;
        -:  295:    //state->supplyCount[supplyPos]--;
    #####:  296:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
    $$$$$:  296-block  0
call    0 never executed
        -:  297:  
    #####:  298:    state->coins = (state->coins) - (getCost(supplyPos));
call    0 never executed
    #####:  299:    state->numBuys--;
        -:  300:    if (DEBUG)
        -:  301:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  302:  }
        -:  303:
        -:  304:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  305:  //state->discardCount[who]++;
        -:  306:    
    #####:  307:  return 0;
    $$$$$:  307-block  0
        -:  308:}
        -:  309:
function numHandCards called 0 returned 0% blocks executed 0%
    #####:  310:int numHandCards(struct gameState *state) {
    $$$$$:  310-block  0
    #####:  311:  return state->handCount[ whoseTurn(state) ];
    $$$$$:  311-block  0
call    0 never executed
        -:  312:}
        -:  313:
function handCard called 0 returned 0% blocks executed 0%
    #####:  314:int handCard(int handPos, struct gameState *state) {
    $$$$$:  314-block  0
    #####:  315:  int currentPlayer = whoseTurn(state);
    $$$$$:  315-block  0
call    0 never executed
    #####:  316:  return state->hand[currentPlayer][handPos];
        -:  317:}
        -:  318:
function supplyCount called 3050 returned 100% blocks executed 100%
     3050:  319:int supplyCount(int card, struct gameState *state) {
     3050:  319-block  0
     3050:  320:  return state->supplyCount[card];
     3050:  320-block  0
        -:  321:}
        -:  322:
function fullDeckCount called 0 returned 0% blocks executed 0%
    #####:  323:int fullDeckCount(int player, int card, struct gameState *state) {
    $$$$$:  323-block  0
        -:  324:  int i;
    #####:  325:  int count = 0;
        -:  326:
    #####:  327:  for (i = 0; i < state->deckCount[player]; i++)
    $$$$$:  327-block  0
    $$$$$:  327-block  1
    $$$$$:  327-block  2
branch  0 never executed
branch  1 never executed
        -:  328:    {
    #####:  329:      if (state->deck[player][i] == card) count++;
    $$$$$:  329-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  329-block  1
        -:  330:    }
        -:  331:
    #####:  332:  for (i = 0; i < state->handCount[player]; i++)
    $$$$$:  332-block  0
    $$$$$:  332-block  1
    $$$$$:  332-block  2
branch  0 never executed
branch  1 never executed
        -:  333:    {
    #####:  334:      if (state->hand[player][i] == card) count++;
    $$$$$:  334-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  334-block  1
        -:  335:    }
        -:  336:
    #####:  337:  for (i = 0; i < state->discardCount[player]; i++)
    $$$$$:  337-block  0
    $$$$$:  337-block  1
    $$$$$:  337-block  2
branch  0 never executed
branch  1 never executed
        -:  338:    {
    #####:  339:      if (state->discard[player][i] == card) count++;
    $$$$$:  339-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  339-block  1
        -:  340:    }
        -:  341:
    #####:  342:  return count;
    $$$$$:  342-block  0
        -:  343:}
        -:  344:
function whoseTurn called 6070 returned 100% blocks executed 100%
     6070:  345:int whoseTurn(struct gameState *state) {
     6070:  345-block  0
     6070:  346:  return state->whoseTurn;
     6070:  346-block  0
        -:  347:}
        -:  348:
function endTurn called 0 returned 0% blocks executed 0%
    #####:  349:int endTurn(struct gameState *state) {
    $$$$$:  349-block  0
        -:  350:  int k;
        -:  351:  int i;
    #####:  352:  int currentPlayer = whoseTurn(state);
    $$$$$:  352-block  0
call    0 never executed
        -:  353:  
        -:  354:  //Discard hand
    #####:  355:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    $$$$$:  355-block  0
    $$$$$:  355-block  1
branch  0 never executed
branch  1 never executed
    #####:  356:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  357:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  358:  }
    #####:  359:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  360:    
        -:  361:  //Code for determining the player
    #####:  362:  if (currentPlayer < (state->numPlayers - 1)){ 
    $$$$$:  362-block  0
branch  0 never executed
branch  1 never executed
    #####:  363:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
    $$$$$:  363-block  0
        -:  364:  }
        -:  365:  else{
    #####:  366:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
    $$$$$:  366-block  0
        -:  367:  }
        -:  368:
    #####:  369:  state->outpostPlayed = 0;
    #####:  370:  state->phase = 0;
    #####:  371:  state->numActions = 1;
    #####:  372:  state->coins = 0;
    #####:  373:  state->numBuys = 1;
    #####:  374:  state->playedCardCount = 0;
    #####:  375:  state->handCount[state->whoseTurn] = 0;
        -:  376:
        -:  377:  //int k; move to top
        -:  378:  //Next player draws hand
    #####:  379:  for (k = 0; k < 5; k++){
    $$$$$:  379-block  0
    $$$$$:  379-block  1
branch  0 never executed
branch  1 never executed
    #####:  380:    drawCard(state->whoseTurn, state);//Draw a card
    $$$$$:  380-block  0
call    0 never executed
        -:  381:  }
        -:  382:
        -:  383:  //Update money
    #####:  384:  updateCoins(state->whoseTurn, state , 0);
    $$$$$:  384-block  0
call    0 never executed
        -:  385:
    #####:  386:  return 0;
        -:  387:}
        -:  388:
function isGameOver called 0 returned 0% blocks executed 0%
    #####:  389:int isGameOver(struct gameState *state) {
    $$$$$:  389-block  0
        -:  390:  int i;
        -:  391:  int j;
        -:  392:	
        -:  393:  //if stack of Province cards is empty, the game ends
    #####:  394:  if (state->supplyCount[province] == 0)
    $$$$$:  394-block  0
branch  0 never executed
branch  1 never executed
        -:  395:    {
    #####:  396:      return 1;
    $$$$$:  396-block  0
        -:  397:    }
        -:  398:
        -:  399:  //if three supply pile are at 0, the game ends
    #####:  400:  j = 0;
    #####:  401:  for (i = 0; i < 25; i++)
    $$$$$:  401-block  0
    $$$$$:  401-block  1
    $$$$$:  401-block  2
branch  0 never executed
branch  1 never executed
        -:  402:    {
    #####:  403:      if (state->supplyCount[i] == 0)
    $$$$$:  403-block  0
branch  0 never executed
branch  1 never executed
        -:  404:	{
    #####:  405:	  j++;
    $$$$$:  405-block  0
        -:  406:	}
        -:  407:    }
    #####:  408:  if ( j >= 3)
    $$$$$:  408-block  0
branch  0 never executed
branch  1 never executed
        -:  409:    {
    #####:  410:      return 1;
    $$$$$:  410-block  0
        -:  411:    }
        -:  412:
    #####:  413:  return 0;
    $$$$$:  413-block  0
        -:  414:}
        -:  415:
function scoreFor called 25 returned 100% blocks executed 38%
       25:  416:int scoreFor (int player, struct gameState *state) {
       25:  416-block  0
        -:  417:
        -:  418:  int i;
       25:  419:  int score = 0;
        -:  420:  //score from hand
      150:  421:  for (i = 0; i < state->handCount[player]; i++)
       25:  421-block  0
      125:  421-block  1
      150:  421-block  2
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        -:  422:    {
      125:  423:      if (state->hand[player][i] == curse) { score = score - 1; };
      125:  423-block  0
branch  0 taken 20% (fallthrough)
branch  1 taken 80%
       25:  423-block  1
      125:  424:      if (state->hand[player][i] == estate) { score = score + 1; };
      125:  424-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        5:  424-block  1
      125:  425:      if (state->hand[player][i] == duchy) { score = score + 3; };
      125:  425-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        5:  425-block  1
      125:  426:      if (state->hand[player][i] == province) { score = score + 6; };
      125:  426-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        5:  426-block  1
      125:  427:      if (state->hand[player][i] == great_hall) { score = score + 1; };
      125:  427-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    $$$$$:  427-block  1
      125:  428:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
      125:  428-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    $$$$$:  428-block  1
call    2 never executed
        -:  429:    }
        -:  430:
        -:  431:  //score from discard
       25:  432:  for (i = 0; i < state->discardCount[player]; i++)
       25:  432-block  0
    $$$$$:  432-block  1
       25:  432-block  2
branch  0 taken 0%
branch  1 taken 100% (fallthrough)
        -:  433:    {
    #####:  434:      if (state->discard[player][i] == curse) { score = score - 1; };
    $$$$$:  434-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  434-block  1
    #####:  435:      if (state->discard[player][i] == estate) { score = score + 1; };
    $$$$$:  435-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  435-block  1
    #####:  436:      if (state->discard[player][i] == duchy) { score = score + 3; };
    $$$$$:  436-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  436-block  1
    #####:  437:      if (state->discard[player][i] == province) { score = score + 6; };
    $$$$$:  437-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  437-block  1
    #####:  438:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    $$$$$:  438-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  438-block  1
    #####:  439:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
    $$$$$:  439-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  439-block  1
call    2 never executed
        -:  440:    }
        -:  441:
        -:  442:  //score from deck
       25:  443:  for (i = 0; i < state->discardCount[player]; i++)
       25:  443-block  0
    $$$$$:  443-block  1
       25:  443-block  2
branch  0 taken 0%
branch  1 taken 100% (fallthrough)
        -:  444:    {
    #####:  445:      if (state->deck[player][i] == curse) { score = score - 1; };
    $$$$$:  445-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  445-block  1
    #####:  446:      if (state->deck[player][i] == estate) { score = score + 1; };
    $$$$$:  446-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  446-block  1
    #####:  447:      if (state->deck[player][i] == duchy) { score = score + 3; };
    $$$$$:  447-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  447-block  1
    #####:  448:      if (state->deck[player][i] == province) { score = score + 6; };
    $$$$$:  448-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  448-block  1
    #####:  449:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    $$$$$:  449-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  449-block  1
    #####:  450:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
    $$$$$:  450-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  450-block  1
call    2 never executed
        -:  451:    }
        -:  452:
       25:  453:  return score;
       25:  453-block  0
        -:  454:}
        -:  455:
function getWinners called 0 returned 0% blocks executed 0%
    #####:  456:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
    $$$$$:  456-block  0
        -:  457:  int i;	
        -:  458:  int j;
        -:  459:  int highScore;
        -:  460:  int currentPlayer;
        -:  461:
        -:  462:  //get score for each player
    #####:  463:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  463-block  0
    $$$$$:  463-block  1
    $$$$$:  463-block  2
branch  0 never executed
branch  1 never executed
        -:  464:    {
        -:  465:      //set unused player scores to -9999
    #####:  466:      if (i >= state->numPlayers)
    $$$$$:  466-block  0
branch  0 never executed
branch  1 never executed
        -:  467:	{
    #####:  468:	  players[i] = -9999;
    $$$$$:  468-block  0
        -:  469:	}
        -:  470:      else
        -:  471:	{
    #####:  472:	  players[i] = scoreFor (i, state);
    $$$$$:  472-block  0
call    0 never executed
        -:  473:	}
        -:  474:    }
        -:  475:
        -:  476:  //find highest score
    #####:  477:  j = 0;
    #####:  478:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  478-block  0
    $$$$$:  478-block  1
    $$$$$:  478-block  2
branch  0 never executed
branch  1 never executed
        -:  479:    {
    #####:  480:      if (players[i] > players[j])
    $$$$$:  480-block  0
branch  0 never executed
branch  1 never executed
        -:  481:	{
    #####:  482:	  j = i;
    $$$$$:  482-block  0
        -:  483:	}
        -:  484:    }
    #####:  485:  highScore = players[j];
        -:  486:
        -:  487:  //add 1 to players who had less turns
    #####:  488:  currentPlayer = whoseTurn(state);
    $$$$$:  488-block  0
call    0 never executed
    #####:  489:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  489-block  0
    $$$$$:  489-block  1
branch  0 never executed
branch  1 never executed
        -:  490:    {
    #####:  491:      if ( players[i] == highScore && i > currentPlayer )
    $$$$$:  491-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  491-block  1
branch  2 never executed
branch  3 never executed
        -:  492:	{
    #####:  493:	  players[i]++;
    $$$$$:  493-block  0
        -:  494:	}
        -:  495:    }
        -:  496:
        -:  497:  //find new highest score
    #####:  498:  j = 0;
    #####:  499:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  499-block  0
    $$$$$:  499-block  1
    $$$$$:  499-block  2
branch  0 never executed
branch  1 never executed
        -:  500:    {
    #####:  501:      if ( players[i] > players[j] )
    $$$$$:  501-block  0
branch  0 never executed
branch  1 never executed
        -:  502:	{
    #####:  503:	  j = i;
    $$$$$:  503-block  0
        -:  504:	}
        -:  505:    }
    #####:  506:  highScore = players[j];
        -:  507:
        -:  508:  //set winners in array to 1 and rest to 0
    #####:  509:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  509-block  0
    $$$$$:  509-block  1
    $$$$$:  509-block  2
branch  0 never executed
branch  1 never executed
        -:  510:    {
    #####:  511:      if ( players[i] == highScore )
    $$$$$:  511-block  0
branch  0 never executed
branch  1 never executed
        -:  512:	{
    #####:  513:	  players[i] = 1;
    $$$$$:  513-block  0
        -:  514:	}
        -:  515:      else
        -:  516:	{
    #####:  517:	  players[i] = 0;
    $$$$$:  517-block  0
        -:  518:	}
        -:  519:    }
        -:  520:
    #####:  521:  return 0;
    $$$$$:  521-block  0
        -:  522:}
        -:  523:
function drawCard called 2137355 returned 100% blocks executed 100%
  2137355:  524:int drawCard(int player, struct gameState *state)
  2137355:  524-block  0
        -:  525:{	int count;
        -:  526:  int deckCounter;
  2137355:  527:  if (state->deckCount[player] <= 0){//Deck is empty
  2137355:  527-block  0
branch  0 taken 28% (fallthrough)
branch  1 taken 72%
        -:  528:    
        -:  529:    //Step 1 Shuffle the discard pile back into a deck
        -:  530:    int i;
        -:  531:    //Move discard to deck
  1938860:  532:    for (i = 0; i < state->discardCount[player];i++){
   594591:  532-block  0
  1344269:  532-block  1
  1938860:  532-block  2
branch  0 taken 69%
branch  1 taken 31% (fallthrough)
  1344269:  533:      state->deck[player][i] = state->discard[player][i];
  1344269:  534:      state->discard[player][i] = -1;
        -:  535:    }
        -:  536:
   594591:  537:    state->deckCount[player] = state->discardCount[player];
   594591:  538:    state->discardCount[player] = 0;//Reset discard
        -:  539:
        -:  540:    //Shufffle the deck
   594591:  541:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
   594591:  541-block  0
call    0 returned 100%
        -:  542:   
        -:  543:    if (DEBUG){//Debug statements
        -:  544:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  545:    }
        -:  546:    
   594591:  547:    state->discardCount[player] = 0;
        -:  548:
        -:  549:    //Step 2 Draw Card
   594591:  550:    count = state->handCount[player];//Get current player's hand count
        -:  551:    
        -:  552:    if (DEBUG){//Debug statements
        -:  553:      printf("Current hand count: %d\n", count);
        -:  554:    }
        -:  555:    
   594591:  556:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  557:
   594591:  558:    if (deckCounter == 0)
   594591:  558-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
   589314:  559:      return -1;
   589314:  559-block  0
        -:  560:
     5277:  561:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
     5277:  562:    state->deckCount[player]--;
     5277:  563:    state->handCount[player]++;//Increment hand count
     5277:  563-block  0
        -:  564:  }
        -:  565:
        -:  566:  else{
  1542764:  567:    int count = state->handCount[player];//Get current hand count for player
  1542764:  567-block  0
        -:  568:    int deckCounter;
        -:  569:    if (DEBUG){//Debug statements
        -:  570:      printf("Current hand count: %d\n", count);
        -:  571:    }
        -:  572:
  1542764:  573:    deckCounter = state->deckCount[player];//Create holder for the deck count
  1542764:  574:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
  1542764:  575:    state->deckCount[player]--;
  1542764:  576:    state->handCount[player]++;//Increment hand count
  1542764:  576-block  0
        -:  577:  }
        -:  578:
  1548041:  579:  return 0;
  1548041:  579-block  0
        -:  580:}
        -:  581:
function getCost called 0 returned 0% blocks executed 0%
    #####:  582:int getCost(int cardNumber)
    $$$$$:  582-block  0
        -:  583:{
    #####:  584:  switch( cardNumber ) 
    $$$$$:  584-block  0
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
branch 18 never executed
branch 19 never executed
branch 20 never executed
branch 21 never executed
branch 22 never executed
branch 23 never executed
branch 24 never executed
branch 25 never executed
branch 26 never executed
branch 27 never executed
        -:  585:    {
        -:  586:    case curse:
    #####:  587:      return 0;
    $$$$$:  587-block  0
        -:  588:    case estate:
    #####:  589:      return 2;
    $$$$$:  589-block  0
        -:  590:    case duchy:
    #####:  591:      return 5;
    $$$$$:  591-block  0
        -:  592:    case province:
    #####:  593:      return 8;
    $$$$$:  593-block  0
        -:  594:    case copper:
    #####:  595:      return 0;
    $$$$$:  595-block  0
        -:  596:    case silver:
    #####:  597:      return 3;
    $$$$$:  597-block  0
        -:  598:    case gold:
    #####:  599:      return 6;
    $$$$$:  599-block  0
        -:  600:    case adventurer:
    #####:  601:      return 6;
    $$$$$:  601-block  0
        -:  602:    case council_room:
    #####:  603:      return 5;
    $$$$$:  603-block  0
        -:  604:    case feast:
    #####:  605:      return 4;
    $$$$$:  605-block  0
        -:  606:    case gardens:
    #####:  607:      return 4;
    $$$$$:  607-block  0
        -:  608:    case mine:
    #####:  609:      return 5;
    $$$$$:  609-block  0
        -:  610:    case remodel:
    #####:  611:      return 4;
    $$$$$:  611-block  0
        -:  612:    case smithy:
    #####:  613:      return 4;
    $$$$$:  613-block  0
        -:  614:    case village:
    #####:  615:      return 3;
    $$$$$:  615-block  0
        -:  616:    case baron:
    #####:  617:      return 4;
    $$$$$:  617-block  0
        -:  618:    case great_hall:
    #####:  619:      return 3;
    $$$$$:  619-block  0
        -:  620:    case minion:
    #####:  621:      return 5;
    $$$$$:  621-block  0
        -:  622:    case steward:
    #####:  623:      return 3;
    $$$$$:  623-block  0
        -:  624:    case tribute:
    #####:  625:      return 5;
    $$$$$:  625-block  0
        -:  626:    case ambassador:
    #####:  627:      return 3;
    $$$$$:  627-block  0
        -:  628:    case cutpurse:
    #####:  629:      return 4;
    $$$$$:  629-block  0
        -:  630:    case embargo: 
    #####:  631:      return 2;
    $$$$$:  631-block  0
        -:  632:    case outpost:
    #####:  633:      return 5;
    $$$$$:  633-block  0
        -:  634:    case salvager:
    #####:  635:      return 4;
    $$$$$:  635-block  0
        -:  636:    case sea_hag:
    #####:  637:      return 4;
    $$$$$:  637-block  0
        -:  638:    case treasure_map:
    #####:  639:      return 4;
    $$$$$:  639-block  0
        -:  640:    }
        -:  641:	
    #####:  642:  return -1;
    $$$$$:  642-block  0
        -:  643:}
        -:  644:
        -:  645:/****************************************************************************************************
        -:  646:* Start of card functions
        -:  647:*****************************************************************************************************/
        -:  648:
function playSmithy called 5 returned 100% blocks executed 100%
        5:  649:int playSmithy(struct gameState *state, int handPos) {
        5:  649-block  0
        -:  650:	//+3 Cards
        5:  651:	int currentPlayer = whoseTurn(state);
        5:  651-block  0
call    0 returned 100%
        -:  652:	int i;
       25:  653:    for (i = 0; i <= 3; i++)
       25:  653-block  0
branch  0 taken 80%
branch  1 taken 20% (fallthrough)
        -:  654:	{
       20:  655:		drawCard(currentPlayer, state);
       20:  655-block  0
call    0 returned 100%
        -:  656:	}
        -:  657:			
        -:  658:	//discard card from hand
        5:  659:	discardCard(handPos, currentPlayer, state, 1);
        5:  659-block  0
call    0 returned 100%
        5:  660:	return 0;
        -:  661:}
        -:  662:
function playAdventurer called 2015 returned 100% blocks executed 100%
     2015:  663:int playAdventurer(struct gameState *state) {
     2015:  663-block  0
     2015:  664:	int currentPlayer = whoseTurn(state);
     2015:  664-block  0
call    0 returned 100%
     2015:  665:	int drawntreasure =0;
        -:  666:	int cardDrawn;
        -:  667:	int temphand[MAX_HAND]; 
     2015:  668:	int z = 0;
        -:  669:
  2110611:  670:	while(drawntreasure<2){
  2110611:  670-block  0
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
  2108596:  671:		if (state->deckCount[currentPlayer] <1){//if the deck is empty we need to shuffle discard and add to deck
  2108596:  671-block  0
branch  0 taken 28% (fallthrough)
branch  1 taken 72%
   590029:  672:		  shuffle(currentPlayer, state);
   590029:  672-block  0
call    0 returned 100%
        -:  673:		}
  2108596:  674:		drawCard(currentPlayer, state);
  2108596:  674-block  0
call    0 returned 100%
  2108596:  675:		cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-2];//top card of hand is most recently drawn card.
  2108596:  676:		if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold) {
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
  2104640:  676-block  0
branch  2 taken 99% (fallthrough)
branch  3 taken 1%
  2104596:  676-block  1
branch  4 taken 1% (fallthrough)
branch  5 taken 99%
     4030:  677:		  drawntreasure++;
     4030:  677-block  0
        -:  678:    }
        -:  679:		else{
  2104566:  680:      z++;
  2104566:  681:		  temphand[z]=cardDrawn;
  2104566:  682:		  state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
  2104566:  682-block  0
        -:  683:    }
        -:  684:  }
   519828:  685:  while(z>=0){
     2015:  685-block  0
   519828:  685-block  1
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
   517813:  686:    state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
   517813:  687:    z=z-1;
   517813:  687-block  0
        -:  688:  }
     2015:  689:  return 0;
     2015:  689-block  0
        -:  690:}
        -:  691:
function playMine called 0 returned 0% blocks executed 0%
    #####:  692:int playMine(struct gameState *state, int choice1, int choice2, int handPos) {
    $$$$$:  692-block  0
    #####:  693:	int currentPlayer = whoseTurn(state);
    $$$$$:  693-block  0
call    0 never executed
        -:  694:	int i, j;
    #####:  695:	int z = 0;
    #####:  696:	j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  697:
    #####:  698:	if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold)
branch  0 never executed
branch  1 never executed
    $$$$$:  698-block  0
branch  2 never executed
branch  3 never executed
        -:  699:	{
    #####:  700:	  return -1;
    $$$$$:  700-block  0
        -:  701:	}
        -:  702:
    #####:  703:	if (choice2 > z || choice2 < curse)
    $$$$$:  703-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  703-block  1
branch  2 never executed
branch  3 never executed
        -:  704:	{
    #####:  705:		return -1;
    $$$$$:  705-block  0
        -:  706:	}
        -:  707:
    #####:  708:	if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) )
    $$$$$:  708-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  709:	{
    #####:  710:		return -1;
    $$$$$:  710-block  0
        -:  711:	}
        -:  712:
    #####:  713:	gainCard(choice1, state, 2, currentPlayer);
    $$$$$:  713-block  0
call    0 never executed
        -:  714:
        -:  715:	//discard card from hand
    #####:  716:	discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  717:
        -:  718:	//discard trashed card
    #####:  719:	for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$:  719-block  0
    $$$$$:  719-block  1
branch  0 never executed
branch  1 never executed
        -:  720:	{
    #####:  721:		if (state->hand[currentPlayer][i] == j)
    $$$$$:  721-block  0
branch  0 never executed
branch  1 never executed
        -:  722:		{
    #####:  723:			discardCard(i, currentPlayer, state, 0);			
    $$$$$:  723-block  0
call    0 never executed
    #####:  724:			break;
        -:  725:		}
        -:  726:	}
        -:  727:		
    #####:  728:	return 0;
    $$$$$:  728-block  0
        -:  729:}
        -:  730:
function playVillage called 1010 returned 100% blocks executed 100%
     1010:  731:int playVillage(struct gameState *state, int handPos) {
     1010:  731-block  0
     1010:  732:	int currentPlayer = whoseTurn(state);
     1010:  732-block  0
call    0 returned 100%
        -:  733:
        -:  734:	//+1 Card
     1010:  735:	drawCard(currentPlayer, state);
call    0 returned 100%
        -:  736:
        -:  737:	//+2 Actions
     1010:  738:	state->numActions = state->numActions + 2;
        -:  739:
        -:  740:	//discard played card from hand
     1010:  741:	discardCard(handPos, currentPlayer, state, 0);
call    0 returned 100%
     1010:  742:	return 0;
        -:  743:}
        -:  744:
function playRemodel called 0 returned 0% blocks executed 0%
    #####:  745:int playRemodel(struct gameState *state, int choice1, int choice2, int handPos) {
    $$$$$:  745-block  0
        -:  746:	int i, j;
    #####:  747:	int currentPlayer = whoseTurn(state);
    $$$$$:  747-block  0
call    0 never executed
        -:  748: 
        -:  749:
    #####:  750:	j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  751:
    #####:  752:	if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  753:	{
    #####:  754:		return -1;
    $$$$$:  754-block  0
        -:  755:	}
        -:  756:
    #####:  757:	gainCard(choice2, state, 0, currentPlayer);
    $$$$$:  757-block  0
call    0 never executed
        -:  758:
        -:  759:	//discard card from hand
    #####:  760:	discardCard(handPos+1, currentPlayer, state, 0);
call    0 never executed
        -:  761:
        -:  762:	//discard trashed card
    #####:  763:	for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$:  763-block  0
    $$$$$:  763-block  1
branch  0 never executed
branch  1 never executed
        -:  764:		{
    #####:  765:		if (state->hand[currentPlayer][i] == j)
    $$$$$:  765-block  0
branch  0 never executed
branch  1 never executed
        -:  766:		{
    #####:  767:			discardCard(i+1, currentPlayer, state, 0);			
    $$$$$:  767-block  0
call    0 never executed
    #####:  768:			break;
        -:  769:		}
        -:  770:	}
        -:  771:
    #####:  772:	return 0;
    $$$$$:  772-block  0
        -:  773:}
        -:  774:
function cardEffect called 3040 returned 100% blocks executed 17%
     3040:  775:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
     3040:  775-block  0
        -:  776:{
        -:  777:  int i;
        -:  778:  int j;
        -:  779:  int k;
        -:  780:  int x;
        -:  781:  int index;
     3040:  782:  int currentPlayer = whoseTurn(state);
     3040:  782-block  0
call    0 returned 100%
     3040:  783:  int nextPlayer = currentPlayer + 1;
        -:  784:
     3040:  785:  int tributeRevealedCards[2] = {-1, -1};
        -:  786:  int temphand[MAX_HAND];// moved above the if statement
     3040:  787:  int drawntreasure=0;
        -:  788:  int cardDrawn;
     3040:  789:  int z = 0;// this is the counter for the temp hand
     3040:  790:  if (nextPlayer > (state->numPlayers - 1)){
branch  0 taken 35% (fallthrough)
branch  1 taken 65%
     1064:  791:    nextPlayer = 0;
     1064:  791-block  0
        -:  792:  }
        -:  793:  
        -:  794:	
        -:  795:  //uses switch to select card and perform actions
     3040:  796:  switch( card ) 
     3040:  796-block  0
branch  0 taken 66%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
branch  5 taken 0%
branch  6 taken 1%
branch  7 taken 33%
branch  8 taken 0%
branch  9 taken 0%
branch 10 taken 0%
branch 11 taken 1%
branch 12 taken 0%
branch 13 taken 0%
branch 14 taken 0%
branch 15 taken 0%
branch 16 taken 0%
branch 17 taken 0%
branch 18 taken 0%
branch 19 taken 0%
branch 20 taken 0%
        -:  797:    {
        -:  798:    case adventurer:
     2015:  799:      playAdventurer(state);
     2015:  799-block  0
call    0 returned 100%
        -:  800:			
        -:  801:    case council_room:
        -:  802:      //+4 Cards
    10075:  803:      for (i = 0; i < 4; i++)
     2015:  803-block  0
    10075:  803-block  1
branch  0 taken 80%
branch  1 taken 20% (fallthrough)
        -:  804:	{
     8060:  805:	  drawCard(currentPlayer, state);
     8060:  805-block  0
call    0 returned 100%
        -:  806:	}
        -:  807:			
        -:  808:      //+1 Buy
     2015:  809:      state->numBuys++;
        -:  810:			
        -:  811:      //Each other player draws a card
     8064:  812:      for (i = 0; i < state->numPlayers; i++)
     2015:  812-block  0
     6049:  812-block  1
     8064:  812-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  813:	{
     6049:  814:	  if ( i != currentPlayer )
     6049:  814-block  0
branch  0 taken 67% (fallthrough)
branch  1 taken 33%
        -:  815:	    {
     4034:  816:	      drawCard(i, state);
     4034:  816-block  0
call    0 returned 100%
        -:  817:	    }
        -:  818:	}
        -:  819:			
        -:  820:      //put played card in played card pile
     2015:  821:      discardCard(handPos, currentPlayer, state, 0);
     2015:  821-block  0
call    0 returned 100%
        -:  822:			
     2015:  823:      return 0;
        -:  824:			
        -:  825:    case feast:
        -:  826:      //gain card with cost up to 5
        -:  827:      //Backup hand
    #####:  828:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    $$$$$:  828-block  0
    $$$$$:  828-block  1
    $$$$$:  828-block  2
branch  0 never executed
branch  1 never executed
    #####:  829:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  830:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  831:      }
        -:  832:      //Backup hand
        -:  833:
        -:  834:      //Update Coins for Buy
    #####:  835:      updateCoins(currentPlayer, state, 5);
    $$$$$:  835-block  0
call    0 never executed
    #####:  836:      x = 1;//Condition to loop on
    #####:  837:      while( x == 1) {//Buy one card
    $$$$$:  837-block  0
branch  0 never executed
branch  1 never executed
    #####:  838:	if (supplyCount(choice1, state) <= 0){
    $$$$$:  838-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  839:	  if (DEBUG)
        -:  840:	    printf("None of that card left, sorry!\n");
        -:  841:
        -:  842:	  if (DEBUG){
        -:  843:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  844:	  }
        -:  845:	}
    #####:  846:	else if (state->coins < getCost(choice1)){
    $$$$$:  846-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  847:	  printf("That card is too expensive!\n");
    $$$$$:  847-block  0
call    0 never executed
        -:  848:
        -:  849:	  if (DEBUG){
        -:  850:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  851:	  }
        -:  852:	}
        -:  853:	else{
        -:  854:
        -:  855:	  if (DEBUG){
        -:  856:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  857:	  }
        -:  858:
    #####:  859:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    $$$$$:  859-block  0
call    0 never executed
    #####:  860:	  x = 0;//No more buying cards
        -:  861:
        -:  862:	  if (DEBUG){
        -:  863:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  864:	  }
        -:  865:
        -:  866:	}
        -:  867:      }     
        -:  868:
        -:  869:      //Reset Hand
    #####:  870:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    $$$$$:  870-block  0
    $$$$$:  870-block  1
    $$$$$:  870-block  2
branch  0 never executed
branch  1 never executed
    #####:  871:	state->hand[currentPlayer][i] = temphand[i];
    #####:  872:	temphand[i] = -1;
        -:  873:      }
        -:  874:      //Reset Hand
        -:  875:      			
    #####:  876:      return 0;
    $$$$$:  876-block  0
        -:  877:			
        -:  878:    case gardens:
    #####:  879:      return -1;
    $$$$$:  879-block  0
        -:  880:			
        -:  881:    case mine:
    #####:  882:   	  playMine(state, choice1, choice2, handPos);
    $$$$$:  882-block  0
call    0 never executed
        -:  883:			
        -:  884:    case remodel:
    #####:  885:      playRemodel(state, choice1, choice2, handPos);
    $$$$$:  885-block  0
call    0 never executed
        -:  886:		
        -:  887:    case smithy:
        5:  888:      playSmithy(state, handPos);
        5:  888-block  0
call    0 returned 100%
        -:  889:		
        -:  890:    case village:
     1010:  891:      playVillage(state, handPos);
     1010:  891-block  0
call    0 returned 100%
        -:  892:		
        -:  893:    case baron:
     1010:  894:      state->numBuys++;//Increase buys by 1!
     1010:  895:      if (choice1 > 0){//Boolean true or going to discard an estate
     1010:  895-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  896:	int p = 0;//Iterator for hand!
    #####:  897:	int card_not_discarded = 1;//Flag for discard set!
    #####:  898:	while(card_not_discarded){
    $$$$$:  898-block  0
    $$$$$:  898-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:  898-block  2
    #####:  899:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    $$$$$:  899-block  0
branch  0 never executed
branch  1 never executed
    #####:  900:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  901:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  902:	    state->discardCount[currentPlayer]++;
    #####:  903:	    for (;p < state->handCount[currentPlayer]; p++){
    $$$$$:  903-block  0
    $$$$$:  903-block  1
    $$$$$:  903-block  2
branch  0 never executed
branch  1 never executed
    #####:  904:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  905:	    }
    #####:  906:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  907:	    state->handCount[currentPlayer]--;
    #####:  908:	    card_not_discarded = 0;//Exit the loop
    $$$$$:  908-block  0
        -:  909:	  }
    #####:  910:	  else if (p > state->handCount[currentPlayer]){
    $$$$$:  910-block  0
branch  0 never executed
branch  1 never executed
        -:  911:	    if(DEBUG) {
        -:  912:	      printf("No estate cards in your hand, invalid choice\n");
        -:  913:	      printf("Must gain an estate if there are any\n");
        -:  914:	    }
    #####:  915:	    if (supplyCount(estate, state) > 0){
    $$$$$:  915-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  916:	      gainCard(estate, state, 0, currentPlayer);
    $$$$$:  916-block  0
call    0 never executed
    #####:  917:	      state->supplyCount[estate]--;//Decrement estates
    #####:  918:	      if (supplyCount(estate, state) == 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  919:		isGameOver(state);
    $$$$$:  919-block  0
call    0 never executed
        -:  920:	      }
        -:  921:	    }
    #####:  922:	    card_not_discarded = 0;//Exit the loop
    $$$$$:  922-block  0
        -:  923:	  }
        -:  924:			    
        -:  925:	  else{
    #####:  926:	    p++;//Next card
    $$$$$:  926-block  0
        -:  927:	  }
        -:  928:	}
        -:  929:      }
        -:  930:			    
        -:  931:      else{
     1010:  932:	if (supplyCount(estate, state) > 0){
     1010:  932-block  0
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
     1010:  933:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
     1010:  933-block  0
call    0 returned 100%
     1010:  934:	  state->supplyCount[estate]--;//Decrement Estates
     1010:  935:	  if (supplyCount(estate, state) == 0){
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:  936:	    isGameOver(state);
    $$$$$:  936-block  0
call    0 never executed
        -:  937:	  }
        -:  938:	}
        -:  939:      }
        -:  940:	    
        -:  941:      
     1010:  942:      return 0;
     1010:  942-block  0
        -:  943:		
        -:  944:    case great_hall:
        -:  945:      //+1 Card
    #####:  946:      drawCard(currentPlayer, state);
    $$$$$:  946-block  0
call    0 never executed
        -:  947:			
        -:  948:      //+1 Actions
    #####:  949:      state->numActions++;
        -:  950:			
        -:  951:      //discard card from hand
    #####:  952:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####:  953:      return 0;
        -:  954:		
        -:  955:    case minion:
        -:  956:      //+1 action
    #####:  957:      state->numActions++;
        -:  958:			
        -:  959:      //discard card from hand
    #####:  960:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$:  960-block  0
call    0 never executed
        -:  961:			
    #####:  962:      if (choice1)		//+2 coins
branch  0 never executed
branch  1 never executed
        -:  963:	{
    #####:  964:	  state->coins = state->coins + 2;
    $$$$$:  964-block  0
        -:  965:	}
        -:  966:			
    #####:  967:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
    $$$$$:  967-block  0
branch  0 never executed
branch  1 never executed
        -:  968:	{
        -:  969:	  //discard hand
    #####:  970:	  while(numHandCards(state) > 0)
    $$$$$:  970-block  0
    $$$$$:  970-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  971:	    {
    #####:  972:	      discardCard(handPos, currentPlayer, state, 0);
    $$$$$:  972-block  0
call    0 never executed
        -:  973:	    }
        -:  974:				
        -:  975:	  //draw 4
    #####:  976:	  for (i = 0; i < 4; i++)
    $$$$$:  976-block  0
    $$$$$:  976-block  1
branch  0 never executed
branch  1 never executed
        -:  977:	    {
    #####:  978:	      drawCard(currentPlayer, state);
    $$$$$:  978-block  0
call    0 never executed
        -:  979:	    }
        -:  980:				
        -:  981:	  //other players discard hand and redraw if hand size > 4
    #####:  982:	  for (i = 0; i < state->numPlayers; i++)
    $$$$$:  982-block  0
    $$$$$:  982-block  1
    $$$$$:  982-block  2
branch  0 never executed
branch  1 never executed
        -:  983:	    {
    #####:  984:	      if (i != currentPlayer)
    $$$$$:  984-block  0
branch  0 never executed
branch  1 never executed
        -:  985:		{
    #####:  986:		  if ( state->handCount[i] > 4 )
    $$$$$:  986-block  0
branch  0 never executed
branch  1 never executed
        -:  987:		    {
        -:  988:		      //discard hand
    #####:  989:		      while( state->handCount[i] > 0 )
    $$$$$:  989-block  0
    $$$$$:  989-block  1
branch  0 never executed
branch  1 never executed
        -:  990:			{
    #####:  991:			  discardCard(handPos, i, state, 0);
    $$$$$:  991-block  0
call    0 never executed
        -:  992:			}
        -:  993:							
        -:  994:		      //draw 4
    #####:  995:		      for (j = 0; j < 4; j++)
    $$$$$:  995-block  0
    $$$$$:  995-block  1
branch  0 never executed
branch  1 never executed
        -:  996:			{
    #####:  997:			  drawCard(i, state);
    $$$$$:  997-block  0
call    0 never executed
        -:  998:			}
        -:  999:		    }
        -: 1000:		}
        -: 1001:	    }
        -: 1002:				
        -: 1003:	}
    #####: 1004:      return 0;
    $$$$$: 1004-block  0
        -: 1005:		
        -: 1006:    case steward:
       15: 1007:      if (choice1 == 1)
       15: 1007-block  0
branch  0 taken 33% (fallthrough)
branch  1 taken 67%
        -: 1008:	{
        -: 1009:	  //+2 cards
        5: 1010:	  drawCard(currentPlayer, state);
        5: 1010-block  0
call    0 returned 100%
        5: 1011:	  drawCard(currentPlayer, state);
call    0 returned 100%
        -: 1012:	}
       10: 1013:      else if (choice1 == 2)
       10: 1013-block  0
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
        -: 1014:	{
        -: 1015:	  //+2 coins
        5: 1016:	  state->coins = state->coins + 2;
        5: 1016-block  0
        -: 1017:	}
        -: 1018:      else
        -: 1019:	{
        -: 1020:	  //trash 2 cards in hand
        5: 1021:	  discardCard(choice2, currentPlayer, state, 1);
        5: 1021-block  0
call    0 returned 100%
        5: 1022:	  discardCard(choice3, currentPlayer, state, 1);
call    0 returned 100%
        -: 1023:	}
        -: 1024:			
        -: 1025:      //discard card from hand
       15: 1026:      discardCard(handPos, currentPlayer, state, 0);
       15: 1026-block  0
call    0 returned 100%
       15: 1027:      return 0;
        -: 1028:		
        -: 1029:    case tribute:
    #####: 1030:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    $$$$$: 1030-block  0
branch  0 never executed
branch  1 never executed
    #####: 1031:	if (state->deckCount[nextPlayer] > 0){
    $$$$$: 1031-block  0
branch  0 never executed
branch  1 never executed
    #####: 1032:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1033:	  state->deckCount[nextPlayer]--;
    $$$$$: 1033-block  0
        -: 1034:	}
    #####: 1035:	else if (state->discardCount[nextPlayer] > 0){
    $$$$$: 1035-block  0
branch  0 never executed
branch  1 never executed
    #####: 1036:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1037:	  state->discardCount[nextPlayer]--;
    $$$$$: 1037-block  0
        -: 1038:	}
        -: 1039:	else{
        -: 1040:	  //No Card to Reveal
        -: 1041:	  if (DEBUG){
        -: 1042:	    printf("No cards to reveal\n");
        -: 1043:	  }
        -: 1044:	}
        -: 1045:      }
        -: 1046:	    
        -: 1047:      else{
    #####: 1048:	if (state->deckCount[nextPlayer] == 0){
    $$$$$: 1048-block  0
branch  0 never executed
branch  1 never executed
    #####: 1049:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    $$$$$: 1049-block  0
    $$$$$: 1049-block  1
    $$$$$: 1049-block  2
branch  0 never executed
branch  1 never executed
    #####: 1050:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1051:	    state->deckCount[nextPlayer]++;
    #####: 1052:	    state->discard[nextPlayer][i] = -1;
    #####: 1053:	    state->discardCount[nextPlayer]--;
        -: 1054:	  }
        -: 1055:			    
    #####: 1056:	  shuffle(nextPlayer,state);//Shuffle the deck
    $$$$$: 1056-block  0
call    0 never executed
        -: 1057:	} 
    #####: 1058:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1059:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1060:	state->deckCount[nextPlayer]--;
    #####: 1061:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1062:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1063:	state->deckCount[nextPlayer]--;
    $$$$$: 1063-block  0
        -: 1064:      }    
        -: 1065:		       
    #####: 1066:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one 
    $$$$$: 1066-block  0
branch  0 never executed
branch  1 never executed
    #####: 1067:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1068:	state->playedCardCount++;
    #####: 1069:	tributeRevealedCards[1] = -1;
    $$$$$: 1069-block  0
        -: 1070:      }
        -: 1071:
    #####: 1072:      for (i = 0; i <= 2; i ++){
    $$$$$: 1072-block  0
    $$$$$: 1072-block  1
    $$$$$: 1072-block  2
branch  0 never executed
branch  1 never executed
    #####: 1073:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    $$$$$: 1073-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1073-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1073-block  2
branch  4 never executed
branch  5 never executed
    #####: 1074:	  state->coins += 2;
    $$$$$: 1074-block  0
        -: 1075:	}
        -: 1076:		    
    #####: 1077:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    $$$$$: 1077-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1077-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1077-block  2
branch  4 never executed
branch  5 never executed
    $$$$$: 1077-block  3
branch  6 never executed
branch  7 never executed
    $$$$$: 1077-block  4
branch  8 never executed
branch  9 never executed
    #####: 1078:	  drawCard(currentPlayer, state);
    $$$$$: 1078-block  0
call    0 never executed
    #####: 1079:	  drawCard(currentPlayer, state);
call    0 never executed
        -: 1080:	}
        -: 1081:	else{//Action Card
    #####: 1082:	  state->numActions = state->numActions + 2;
    $$$$$: 1082-block  0
        -: 1083:	}
        -: 1084:      }
        -: 1085:	    
    #####: 1086:      return 0;
    $$$$$: 1086-block  0
        -: 1087:		
        -: 1088:    case ambassador:
    #####: 1089:      j = 0;		//used to check if player has enough cards to discard
        -: 1090:
    #####: 1091:      if (choice2 > 2 || choice2 < 0)
    $$$$$: 1091-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1091-block  1
branch  2 never executed
branch  3 never executed
        -: 1092:	{
    #####: 1093:	  return -1;				
    $$$$$: 1093-block  0
        -: 1094:	}
        -: 1095:
    #####: 1096:      if (choice1 == handPos)
    $$$$$: 1096-block  0
branch  0 never executed
branch  1 never executed
        -: 1097:	{
    #####: 1098:	  return -1;
    $$$$$: 1098-block  0
        -: 1099:	}
        -: 1100:
    #####: 1101:      for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1101-block  0
    $$$$$: 1101-block  1
    $$$$$: 1101-block  2
branch  0 never executed
branch  1 never executed
        -: 1102:	{
    #####: 1103:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
    $$$$$: 1103-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1103-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1103-block  2
branch  4 never executed
branch  5 never executed
        -: 1104:	    {
    #####: 1105:	      j++;
    $$$$$: 1105-block  0
        -: 1106:	    }
        -: 1107:	}
    #####: 1108:      if (j < choice2)
    $$$$$: 1108-block  0
branch  0 never executed
branch  1 never executed
        -: 1109:	{
    #####: 1110:	  return -1;				
    $$$$$: 1110-block  0
        -: 1111:	}
        -: 1112:
        -: 1113:      if (DEBUG) 
        -: 1114:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1115:
        -: 1116:      //increase supply count for choosen card by amount being discarded
    #####: 1117:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1118:			
        -: 1119:      //each other player gains a copy of revealed card
    #####: 1120:      for (i = 0; i < state->numPlayers; i++)
    $$$$$: 1120-block  0
    $$$$$: 1120-block  1
    $$$$$: 1120-block  2
branch  0 never executed
branch  1 never executed
        -: 1121:	{
    #####: 1122:	  if (i != currentPlayer)
    $$$$$: 1122-block  0
branch  0 never executed
branch  1 never executed
        -: 1123:	    {
    #####: 1124:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
    $$$$$: 1124-block  0
call    0 never executed
        -: 1125:	    }
        -: 1126:	}
        -: 1127:
        -: 1128:      //discard played card from hand
    #####: 1129:      discardCard(handPos, currentPlayer, state, 0);			
    $$$$$: 1129-block  0
call    0 never executed
        -: 1130:
        -: 1131:      //trash copies of cards returned to supply
    #####: 1132:      for (j = 0; j < choice2; j++)
    $$$$$: 1132-block  0
    $$$$$: 1132-block  1
branch  0 never executed
branch  1 never executed
        -: 1133:	{
    #####: 1134:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1134-block  0
    $$$$$: 1134-block  1
    $$$$$: 1134-block  2
branch  0 never executed
branch  1 never executed
        -: 1135:	    {
    #####: 1136:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
    $$$$$: 1136-block  0
branch  0 never executed
branch  1 never executed
        -: 1137:		{
    #####: 1138:		  discardCard(i, currentPlayer, state, 1);
    $$$$$: 1138-block  0
call    0 never executed
    #####: 1139:		  break;
        -: 1140:		}
        -: 1141:	    }
        -: 1142:	}			
        -: 1143:
    #####: 1144:      return 0;
    $$$$$: 1144-block  0
        -: 1145:		
        -: 1146:    case cutpurse:
        -: 1147:
    #####: 1148:      updateCoins(currentPlayer, state, 2);
    $$$$$: 1148-block  0
call    0 never executed
    #####: 1149:      for (i = 0; i < state->numPlayers; i++)
    $$$$$: 1149-block  0
    $$$$$: 1149-block  1
branch  0 never executed
branch  1 never executed
        -: 1150:	{
    #####: 1151:	  if (i != currentPlayer)
    $$$$$: 1151-block  0
branch  0 never executed
branch  1 never executed
        -: 1152:	    {
    #####: 1153:	      for (j = 0; j < state->handCount[i]; j++)
    $$$$$: 1153-block  0
    $$$$$: 1153-block  1
    $$$$$: 1153-block  2
branch  0 never executed
branch  1 never executed
        -: 1154:		{
    #####: 1155:		  if (state->hand[i][j] == copper)
    $$$$$: 1155-block  0
branch  0 never executed
branch  1 never executed
        -: 1156:		    {
    #####: 1157:		      discardCard(j, i, state, 0);
    $$$$$: 1157-block  0
call    0 never executed
    #####: 1158:		      break;
        -: 1159:		    }
    #####: 1160:		  if (j == state->handCount[i])
    $$$$$: 1160-block  0
branch  0 never executed
branch  1 never executed
        -: 1161:		    {
    #####: 1162:		      for (k = 0; k < state->handCount[i]; k++)
    $$$$$: 1162-block  0
    $$$$$: 1162-block  1
    $$$$$: 1162-block  2
branch  0 never executed
branch  1 never executed
        -: 1163:			{
        -: 1164:			  if (DEBUG)
        -: 1165:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1166:			}	
    #####: 1167:		      break;
    $$$$$: 1167-block  0
        -: 1168:		    }		
        -: 1169:		}
        -: 1170:					
        -: 1171:	    }
        -: 1172:				
        -: 1173:	}				
        -: 1174:
        -: 1175:      //discard played card from hand
    #####: 1176:      discardCard(handPos, currentPlayer, state, 0);			
    $$$$$: 1176-block  0
call    0 never executed
        -: 1177:
    #####: 1178:      return 0;
        -: 1179:
        -: 1180:		
        -: 1181:    case embargo: 
        -: 1182:      //+2 Coins
    #####: 1183:      state->coins = state->coins + 2;
        -: 1184:			
        -: 1185:      //see if selected pile is in play
    #####: 1186:      if ( state->supplyCount[choice1] == -1 )
    $$$$$: 1186-block  0
branch  0 never executed
branch  1 never executed
        -: 1187:	{
    #####: 1188:	  return -1;
    $$$$$: 1188-block  0
        -: 1189:	}
        -: 1190:			
        -: 1191:      //add embargo token to selected supply pile
    #####: 1192:      state->embargoTokens[choice1]++;
        -: 1193:			
        -: 1194:      //trash card
    #####: 1195:      discardCard(handPos, currentPlayer, state, 1);		
    $$$$$: 1195-block  0
call    0 never executed
    #####: 1196:      return 0;
        -: 1197:		
        -: 1198:    case outpost:
        -: 1199:      //set outpost flag
    #####: 1200:      state->outpostPlayed++;
        -: 1201:			
        -: 1202:      //discard card
    #####: 1203:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$: 1203-block  0
call    0 never executed
    #####: 1204:      return 0;
        -: 1205:		
        -: 1206:    case salvager:
        -: 1207:      //+1 buy
    #####: 1208:      state->numBuys++;
        -: 1209:			
    #####: 1210:      if (choice1)
    $$$$$: 1210-block  0
branch  0 never executed
branch  1 never executed
        -: 1211:	{
        -: 1212:	  //gain coins equal to trashed card
    #####: 1213:	  state->coins = state->coins + getCost( handCard(choice1, state) );
    $$$$$: 1213-block  0
call    0 never executed
call    1 never executed
        -: 1214:	  //trash card
    #####: 1215:	  discardCard(choice1, currentPlayer, state, 1);	
call    0 never executed
        -: 1216:	}
        -: 1217:			
        -: 1218:      //discard card
    #####: 1219:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$: 1219-block  0
call    0 never executed
    #####: 1220:      return 0;
        -: 1221:		
        -: 1222:    case sea_hag:
    #####: 1223:      for (i = 0; i < state->numPlayers; i++){
    $$$$$: 1223-block  0
    $$$$$: 1223-block  1
    $$$$$: 1223-block  2
branch  0 never executed
branch  1 never executed
    #####: 1224:	if (i != currentPlayer){
    $$$$$: 1224-block  0
branch  0 never executed
branch  1 never executed
    #####: 1225:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1226:	  state->discardCount[i]++;
    #####: 1227:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
    $$$$$: 1227-block  0
        -: 1228:	}
        -: 1229:      }
    #####: 1230:      return 0;
    $$$$$: 1230-block  0
        -: 1231:		
        -: 1232:    case treasure_map:
        -: 1233:      //search hand for another treasure_map
    #####: 1234:      index = -1;
    #####: 1235:      for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1235-block  0
    $$$$$: 1235-block  1
    $$$$$: 1235-block  2
branch  0 never executed
branch  1 never executed
        -: 1236:	{
    #####: 1237:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
    $$$$$: 1237-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1237-block  1
branch  2 never executed
branch  3 never executed
        -: 1238:	    {
    #####: 1239:	      index = i;
    #####: 1240:	      break;
    $$$$$: 1240-block  0
        -: 1241:	    }
        -: 1242:	}
    #####: 1243:      if (index > -1)
    $$$$$: 1243-block  0
branch  0 never executed
branch  1 never executed
        -: 1244:	{
        -: 1245:	  //trash both treasure cards
    #####: 1246:	  discardCard(handPos, currentPlayer, state, 1);
    $$$$$: 1246-block  0
call    0 never executed
    #####: 1247:	  discardCard(index, currentPlayer, state, 1);
call    0 never executed
        -: 1248:
        -: 1249:	  //gain 4 Gold cards
    #####: 1250:	  for (i = 0; i < 4; i++)
    $$$$$: 1250-block  0
branch  0 never executed
branch  1 never executed
        -: 1251:	    {
    #####: 1252:	      gainCard(gold, state, 1, currentPlayer);
    $$$$$: 1252-block  0
call    0 never executed
        -: 1253:	    }
        -: 1254:				
        -: 1255:	  //return success
    #####: 1256:	  return 1;
    $$$$$: 1256-block  0
        -: 1257:	}
        -: 1258:			
        -: 1259:      //no second treasure_map found in hand
    #####: 1260:      return -1;
    $$$$$: 1260-block  0
        -: 1261:    }
        -: 1262:	
     3040: 1263:  return -1;
    $$$$$: 1263-block  0
     3040: 1263-block  1
        -: 1264:}
        -: 1265:
function discardCard called 3095 returned 100% blocks executed 89%
     3095: 1266:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
     3095: 1266-block  0
        -: 1267:{
        -: 1268:	
        -: 1269:  //if card is not trashed, added to Played pile 
     3095: 1270:  if (trashFlag < 1)
     3095: 1270-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
        -: 1271:    {
        -: 1272:      //add card to played pile
     3075: 1273:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos]; 
     3075: 1274:      state->playedCardCount++;
     3075: 1274-block  0
        -: 1275:    }
        -: 1276:	
        -: 1277:  //set played card to -1
     3095: 1278:  state->hand[currentPlayer][handPos] = -1;
        -: 1279:	
        -: 1280:  //remove card from player's hand
     3095: 1281:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
     3095: 1281-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1282:    {
        -: 1283:      //reduce number of cards in hand
       11: 1284:      state->handCount[currentPlayer]--;
       11: 1284-block  0
        -: 1285:    }
     3084: 1286:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
     3084: 1286-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -: 1287:    {
        -: 1288:      //reduce number of cards in hand
    #####: 1289:      state->handCount[currentPlayer]--;
    $$$$$: 1289-block  0
        -: 1290:    }
        -: 1291:  else 	
        -: 1292:    {
        -: 1293:      //replace discarded card with last card in hand
     3084: 1294:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1295:      //set last card to -1
     3084: 1296:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1297:      //reduce number of cards in hand
     3084: 1298:      state->handCount[currentPlayer]--;
     3084: 1298-block  0
        -: 1299:    }
        -: 1300:	
     3095: 1301:  return 0;
     3095: 1301-block  0
        -: 1302:}
        -: 1303:
function gainCard called 1030 returned 100% blocks executed 100%
     1030: 1304:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
     1030: 1304-block  0
        -: 1305:{
        -: 1306:  //Note: supplyPos is enum of choosen card
        -: 1307:	
        -: 1308:  //check if supply pile is empty (0) or card is not used in game (-1)
     1030: 1309:  if ( supplyCount(supplyPos, state) < 1 )
     1030: 1309-block  0
call    0 returned 100%
branch  1 taken 1% (fallthrough)
branch  2 taken 99%
        -: 1310:    {
        5: 1311:      return -1;
        5: 1311-block  0
        -: 1312:    }
        -: 1313:	
        -: 1314:  //added card for [whoseTurn] current player:
        -: 1315:  // toFlag = 0 : add to discard
        -: 1316:  // toFlag = 1 : add to deck
        -: 1317:  // toFlag = 2 : add to hand
        -: 1318:
     1025: 1319:  if (toFlag == 1)
     1025: 1319-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1320:    {
        5: 1321:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
        5: 1322:      state->deckCount[player]++;
        5: 1322-block  0
        -: 1323:    }
     1020: 1324:  else if (toFlag == 2)
     1020: 1324-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1325:    {
        5: 1326:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
        5: 1327:      state->handCount[player]++;
        5: 1327-block  0
        -: 1328:    }
        -: 1329:  else
        -: 1330:    {
     1015: 1331:      state->discard[player][ state->discardCount[player] ] = supplyPos;
     1015: 1332:      state->discardCount[player]++;
     1015: 1332-block  0
        -: 1333:    }
        -: 1334:	
        -: 1335:  //decrease number in supply pile
     1025: 1336:  state->supplyCount[supplyPos]--;
        -: 1337:	 
     1025: 1338:  return 0;
     1025: 1338-block  0
        -: 1339:}
        -: 1340:
function updateCoins called 3145 returned 100% blocks executed 100%
     3145: 1341:int updateCoins(int player, struct gameState *state, int bonus)
     3145: 1341-block  0
        -: 1342:{
        -: 1343:  int i;
        -: 1344:	
        -: 1345:  //reset coin count
     3145: 1346:  state->coins = 0;
        -: 1347:
        -: 1348:  //add coins for each Treasure card in player's hand
    18870: 1349:  for (i = 0; i < state->handCount[player]; i++)
     3145: 1349-block  0
    15725: 1349-block  1
    18870: 1349-block  2
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        -: 1350:    {
    15725: 1351:      if (state->hand[player][i] == copper)
    15725: 1351-block  0
branch  0 taken 70% (fallthrough)
branch  1 taken 30%
        -: 1352:	{
    11074: 1353:	  state->coins += 1;
    11074: 1353-block  0
        -: 1354:	}
     4651: 1355:      else if (state->hand[player][i] == silver)
     4651: 1355-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1356:	{
       25: 1357:	  state->coins += 2;
       25: 1357-block  0
        -: 1358:	}
     4626: 1359:      else if (state->hand[player][i] == gold)
     4626: 1359-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1360:	{
       25: 1361:	  state->coins += 3;
       25: 1361-block  0
        -: 1362:	}	
        -: 1363:    }	
        -: 1364:
        -: 1365:  //add bonus
     3145: 1366:  state->coins += bonus;
        -: 1367:
     3145: 1368:  return 0;
     3145: 1368-block  0
        -: 1369:}
        -: 1370:
        -: 1371:
        -: 1372:/************************************************
        -: 1373:Start of function unit tests
        -: 1374:*************************************************/
        -: 1375:
function testUpdateCoins called 0 returned 0% blocks executed 0%
    #####: 1376:int testUpdateCoins(int player, struct gameState *state, int bonus) {
    $$$$$: 1376-block  0
        -: 1377:  
    #####: 1378:}
        -: 1379:
        -: 1380:
        -: 1381://end of dominion.c
        -: 1382:
----------------- Random Testing Card: adventurer ----------------
Iteration 0
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 1
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 2
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 3
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 4
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 5
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 6
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 7
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 8
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 9
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 10
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 11
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 12
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 13
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 14
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 15
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 16
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 17
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 18
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 19
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 20
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 21
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 22
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 23
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 24
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 25
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 26
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 27
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 28
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 29
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 30
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 31
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 32
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 33
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 34
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 35
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 36
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 37
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 38
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 39
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 40
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 41
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 42
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 43
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 44
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 45
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 46
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 47
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 48
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 49
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 50
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 51
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 52
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 53
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 54
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 55
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 56
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 57
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 58
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 59
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 60
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 61
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 62
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 63
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 64
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 65
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 66
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 67
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 68
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 69
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 70
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 71
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 72
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 73
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 74
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 75
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 76
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 77
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 78
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 79
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 80
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 81
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 82
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 83
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 84
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 85
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 86
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 87
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 88
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 89
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 90
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 91
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 92
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 93
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 94
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 95
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 96
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 97
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 98
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 99
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 100
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 101
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 102
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 103
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 104
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 105
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 106
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 107
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 108
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 109
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 110
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 111
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 112
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 113
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 114
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 115
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 116
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 117
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 118
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 119
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 120
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 121
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 122
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 123
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 124
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 125
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 126
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 127
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 128
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 129
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 130
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 131
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 132
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 133
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 134
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 135
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 136
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 137
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 138
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 139
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 140
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 141
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 142
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 143
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 144
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 145
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 146
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 147
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 148
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 149
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 150
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 151
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 152
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 153
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 154
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 155
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 156
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 157
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 158
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 159
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 160
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 161
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 162
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 163
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 164
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 165
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 166
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 167
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 168
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 169
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 170
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 171
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 172
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 173
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 174
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 175
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 176
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 177
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 178
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 179
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 180
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 181
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 182
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 183
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 184
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 185
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 186
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 187
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 188
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 189
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 190
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 191
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 192
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 193
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 194
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 195
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 196
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 197
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 198
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 199
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 200
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 201
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 202
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 203
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 204
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 205
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 206
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 207
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 208
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 209
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 210
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 211
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 212
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 213
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 214
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 215
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 216
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 217
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 218
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 219
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 220
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 221
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 222
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 223
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 224
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 225
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 226
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 227
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 228
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 229
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 230
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 231
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 232
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 233
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 234
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 235
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 236
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 237
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 238
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 239
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 240
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 241
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 242
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 243
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 244
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 245
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 246
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 247
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 248
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 249
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 250
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 251
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 252
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 253
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 254
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 255
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 256
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 257
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 258
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 259
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 260
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 261
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 262
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 263
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 264
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 265
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 266
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 267
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 268
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 269
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 270
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 271
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 272
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 273
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 274
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 275
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 276
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 277
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 278
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 279
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 280
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 281
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 282
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 283
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 284
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 285
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 286
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 287
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 288
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 289
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 290
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 291
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 292
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 293
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 294
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 295
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 296
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 297
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 298
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 299
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 300
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 301
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 302
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 303
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 304
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 305
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 306
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 307
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 308
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 309
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 310
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 311
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 312
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 313
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 314
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 315
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 316
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 317
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 318
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 319
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 320
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 321
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 322
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 323
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 324
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 325
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 326
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 327
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 328
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 329
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 330
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 331
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 332
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 333
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 334
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 335
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 336
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 337
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 338
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 339
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 340
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 341
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 342
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 343
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 344
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 345
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 346
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 347
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 348
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 349
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 350
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 351
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 352
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 353
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 354
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 355
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 356
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 357
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 358
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 359
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 360
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 361
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 362
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 363
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 364
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 365
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 366
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 367
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 368
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 369
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 370
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 371
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 372
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 373
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 374
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 375
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 376
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 377
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 378
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 379
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 380
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 381
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 382
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 383
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 384
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 385
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 386
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 387
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 388
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 389
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 390
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 391
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 392
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 393
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 394
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 395
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 396
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 397
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 398
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 399
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 400
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 401
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 402
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 403
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 404
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 405
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 406
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 407
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 408
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 409
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 410
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 411
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 412
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 413
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 414
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 415
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 416
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 417
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 418
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 419
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 420
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 421
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 422
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 423
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 424
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 425
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 426
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 427
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 428
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 429
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 430
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 431
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 432
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 433
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 434
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 435
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 436
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 437
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 438
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 439
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 440
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 441
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 442
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 443
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 444
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 445
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 446
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 447
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 448
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 449
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 450
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 451
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 452
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 453
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 454
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 455
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 456
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 457
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 458
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 459
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 460
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 461
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 462
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 463
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 464
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 465
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 466
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 467
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 468
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 469
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 470
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 471
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 472
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 473
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 474
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 475
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 476
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 477
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 478
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 479
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 480
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 481
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 482
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 483
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 484
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 485
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 486
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 487
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 488
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 489
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 490
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 491
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 492
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 493
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 494
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 495
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 496
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 497
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 498
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 499
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 500
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 501
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 502
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 503
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 504
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 505
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 506
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 507
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 508
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 509
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 510
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 511
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 512
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 513
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 514
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 515
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 516
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 517
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 518
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 519
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 520
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 521
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 522
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 523
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 524
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 525
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 526
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 527
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 528
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 529
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 530
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 531
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 532
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 533
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 534
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 535
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 536
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 537
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 538
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 539
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 540
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 541
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 542
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 543
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 544
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 545
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 546
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 547
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 548
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 549
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 550
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 551
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 552
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 553
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 554
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 555
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 556
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 557
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 558
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 559
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 560
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 561
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 562
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 563
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 564
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 565
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 566
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 567
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 568
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 569
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 570
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 571
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 572
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 573
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 574
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 575
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 576
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 577
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 578
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 579
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 580
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 581
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 582
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 583
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 584
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 585
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 586
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 587
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 588
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 589
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 590
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 591
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 592
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 593
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 594
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 595
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 596
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 597
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 598
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 599
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 600
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 601
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 602
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 603
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 604
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 605
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 606
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 607
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 608
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 609
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 610
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 611
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 612
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 613
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 614
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 615
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 616
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 617
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 618
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 619
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 620
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 621
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 622
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 623
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 624
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 625
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 626
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 627
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 628
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 629
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 630
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 631
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 632
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 633
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 634
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 635
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 636
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 637
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 638
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 639
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 640
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 641
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 642
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 643
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 644
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 645
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 646
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 647
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 648
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 649
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 650
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 651
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 652
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 653
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 654
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 655
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 656
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 657
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 658
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 659
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 660
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 661
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 662
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 663
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 664
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 665
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 666
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 667
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 668
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 669
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 670
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 671
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 672
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 673
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 674
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 675
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 676
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 677
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 678
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 679
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 680
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 681
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 682
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 683
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 684
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 685
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 686
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 687
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 688
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 689
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 690
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 691
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 692
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 693
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 694
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 695
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 696
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 697
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 698
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 699
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 700
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 701
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 702
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 703
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 704
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 705
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 706
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 707
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 708
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 709
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 710
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 711
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 712
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 713
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 714
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 715
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 716
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 717
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 718
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 719
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 720
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 721
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 722
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 723
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 724
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 725
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 726
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 727
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 728
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 729
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 730
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 731
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 732
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 733
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 734
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 735
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 736
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 737
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 738
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 739
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 740
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 741
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 742
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 743
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 744
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 745
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 746
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 747
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 748
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 749
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 750
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 751
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 752
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 753
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 754
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 755
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 756
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 757
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 758
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 759
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 760
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 761
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 762
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 763
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 764
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 765
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 766
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 767
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 768
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 769
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 770
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 771
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 772
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 773
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 774
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 775
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 776
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 777
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 778
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 779
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 780
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 781
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 782
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 783
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 784
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 785
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 786
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 787
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 788
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 789
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 790
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 791
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 792
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 793
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 794
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 795
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 796
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 797
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 798
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 799
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 800
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 801
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 802
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 803
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 804
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 805
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 806
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 807
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 808
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 809
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 810
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 811
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 812
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 813
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 814
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 815
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 816
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 817
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 818
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 819
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 820
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 821
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 822
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 823
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 824
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 825
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 826
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 827
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 828
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 829
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 830
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 831
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 832
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 833
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 834
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 835
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 836
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 837
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 838
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 839
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 840
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 841
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 842
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 843
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 844
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 845
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 846
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 847
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 848
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 849
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 850
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 851
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 852
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 853
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 854
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 855
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 856
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 857
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 858
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 859
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 860
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 861
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 862
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 863
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 864
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 865
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 866
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 867
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 868
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 869
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 870
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 871
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 872
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 873
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 874
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 875
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 876
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 877
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 878
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 879
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 880
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 881
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 882
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 883
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 884
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 885
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 886
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 887
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 888
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 889
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 890
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 891
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 892
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 893
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 894
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 895
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 896
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 897
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 898
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 899
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 900
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 901
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 902
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 903
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 904
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 905
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 906
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 907
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 908
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 909
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 910
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 911
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 912
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 913
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 914
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 915
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 916
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 917
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 918
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 919
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 920
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 921
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 922
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 923
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 924
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 925
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 926
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 927
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 928
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 929
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 930
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 931
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 932
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 933
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 934
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 935
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 936
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 937
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 938
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 939
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 940
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 941
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 942
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 943
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 944
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 945
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 946
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 947
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 948
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 949
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 950
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 951
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 952
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 953
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 954
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 955
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 956
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 957
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 958
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 959
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 960
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 961
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 962
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 963
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 964
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 965
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 966
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 967
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 968
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 969
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 970
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 971
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 972
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 973
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 974
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 975
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 976
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 977
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 978
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 979
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 980
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 981
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 982
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 983
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 984
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 985
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 986
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 987
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 988
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 989
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 990
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 991
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 992
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 993
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 994
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 995
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 996
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 997
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 998
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 999
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
File 'dominion.c'
Lines executed:38.80% of 567
Branches executed:37.17% of 417
Taken at least once:29.98% of 417
Calls executed:33.00% of 100
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:53
        -:    0:Programs:12
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
function compare called 9410506 returned 100% blocks executed 100%
  9410506:    8:int compare(const void* a, const void* b) {
  9410506:    8-block  0
  9410506:    9:  if (*(int*)a > *(int*)b)
  9410506:    9-block  0
branch  0 taken 13% (fallthrough)
branch  1 taken 87%
  1259844:   10:    return 1;
  1259844:   10-block  0
  8150662:   11:  if (*(int*)a < *(int*)b)
  8150662:   11-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
    68438:   12:    return -1;
    68438:   12-block  0
  8082224:   13:  return 0;
  8082224:   13-block  0
        -:   14:}
        -:   15:
function newGame called 0 returned 0% blocks executed 0%
    #####:   16:struct gameState* newGame() {
    $$$$$:   16-block  0
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
    $$$$$:   18-block  0
        -:   19:}
        -:   20:
function kingdomCards called 0 returned 0% blocks executed 0%
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
    $$$$$:   21-block  0
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
    $$$$$:   34-block  0
        -:   35:}
        -:   36:
function initializeGame called 5150 returned 100% blocks executed 94%
     5150:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
     5150:   37-block  0
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;			
        -:   43:  //set up random number generator
     5150:   44:  SelectStream(1);
     5150:   44-block  0
call    0 returned 100%
     5150:   45:  PutSeed((long)randomSeed);
call    0 returned 100%
        -:   46:  
        -:   47:  //check number of players
     5150:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
     5150:   48-block  0
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:   49:    {
    #####:   50:      return -1;
    $$$$$:   50-block  0
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
     5150:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    56650:   57:  for (i = 0; i < 10; i++)
     5150:   57-block  0
    51500:   57-block  1
    56650:   57-block  2
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
        -:   58:    {
   566500:   59:      for (j = 0; j < 10; j++)
    51500:   59-block  0
   515000:   59-block  1
   566500:   59-block  2
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
        -:   60:        {
   515000:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
   515000:   61-block  0
branch  0 taken 90% (fallthrough)
branch  1 taken 10%
   463500:   61-block  1
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:   62:	    {
    #####:   63:	      return -1;
    $$$$$:   63-block  0
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
     5150:   73:  if (numPlayers == 2)
     5150:   73-block  0
branch  0 taken 35% (fallthrough)
branch  1 taken 65%
        -:   74:    {
     1804:   75:      state->supplyCount[curse] = 10;
     1804:   75-block  0
        -:   76:    }
     3346:   77:  else if (numPlayers == 3)
     3346:   77-block  0
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
        -:   78:    {
     1660:   79:      state->supplyCount[curse] = 20;
     1660:   79-block  0
        -:   80:    }
        -:   81:  else
        -:   82:    {
     1686:   83:      state->supplyCount[curse] = 30;
     1686:   83-block  0
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
     5150:   87:  if (numPlayers == 2)
     5150:   87-block  0
branch  0 taken 35% (fallthrough)
branch  1 taken 65%
        -:   88:    {
     1804:   89:      state->supplyCount[estate] = 8;
     1804:   90:      state->supplyCount[duchy] = 8;
     1804:   91:      state->supplyCount[province] = 8;
     1804:   91-block  0
        -:   92:    }
        -:   93:  else
        -:   94:    {
     3346:   95:      state->supplyCount[estate] = 12;
     3346:   96:      state->supplyCount[duchy] = 12;
     3346:   97:      state->supplyCount[province] = 12;
     3346:   97-block  0
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
     5150:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
     5150:  102:  state->supplyCount[silver] = 40;
     5150:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
   108150:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
     5150:  106-block  0
   103000:  106-block  1
   108150:  106-block  2
branch  0 taken 95%
branch  1 taken 5% (fallthrough)
        -:  107:    {
   849750:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
   103000:  108-block  0
   746750:  108-block  1
   849750:  108-block  2
branch  0 taken 94%
branch  1 taken 6% (fallthrough)
        -:  109:	{
   798250:  110:	  if (kingdomCards[j] == i)
   798250:  110-block  0
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    51500:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
    51500:  113-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
    51398:  113-block  1
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
        -:  114:		{
      408:  115:		  if (numPlayers == 2){ 
      204:  115-block  0
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
      204:  115-block  1
      204:  116:		    state->supplyCount[i] = 8; 
      204:  116-block  0
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
    $$$$$:  118-block  0
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    51296:  122:		  state->supplyCount[i] = 10;
    51296:  122-block  0
        -:  123:		}
    51500:  124:	      break;
    51500:  124-block  0
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
   746750:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    20482:  138:  for (i = 0; i < numPlayers; i++)
     5150:  138-block  0
    15332:  138-block  1
    20482:  138-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  139:    {
    15332:  140:      state->deckCount[i] = 0;
    61328:  141:      for (j = 0; j < 3; j++)
    15332:  141-block  0
    45996:  141-block  1
    61328:  141-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  142:	{
    45996:  143:	  state->deck[i][j] = estate;
    45996:  144:	  state->deckCount[i]++;
        -:  145:	}
   122656:  146:      for (j = 3; j < 10; j++)
    15332:  146-block  0
   107324:  146-block  1
   122656:  146-block  2
branch  0 taken 88%
branch  1 taken 13% (fallthrough)
        -:  147:	{
   107324:  148:	  state->deck[i][j] = copper;	  state->deckCount[i]++;		
        -:  149:	}
        -:  150:    }
        -:  151:
        -:  152:  //shuffle player decks
    20482:  153:  for (i = 0; i < numPlayers; i++)
     5150:  153-block  0
    15332:  153-block  1
    20482:  153-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  154:    {
    15332:  155:      if ( shuffle(i, state) < 0 )
    15332:  155-block  0
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
        -:  156:	{
    #####:  157:	  return -1;
    $$$$$:  157-block  0
        -:  158:	}
        -:  159:    }
        -:  160:
        -:  161:  //draw player hands
    20482:  162:  for (i = 0; i < numPlayers; i++)
     5150:  162-block  0
    15332:  162-block  1
    20482:  162-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  163:    {  
        -:  164:      //initialize hand size to zero
    15332:  165:      state->handCount[i] = 0;
    15332:  166:      state->discardCount[i] = 0;
        -:  167:      //draw 5 cards
        -:  168:      // for (j = 0; j < 5; j++)
        -:  169:      //	{
        -:  170:      //	  drawCard(i, state);
        -:  171:      //	}
        -:  172:    }
        -:  173:  
        -:  174:  //set embargo tokens to 0 for all supply piles
   144200:  175:  for (i = 0; i <= treasure_map; i++)
     5150:  175-block  0
   139050:  175-block  1
   144200:  175-block  2
branch  0 taken 96%
branch  1 taken 4% (fallthrough)
        -:  176:    {
   139050:  177:      state->embargoTokens[i] = 0;
        -:  178:    }
        -:  179:
        -:  180:  //initialize first player's turn
     5150:  181:  state->outpostPlayed = 0;
     5150:  182:  state->phase = 0;
     5150:  183:  state->numActions = 1;
     5150:  184:  state->numBuys = 1;
     5150:  185:  state->playedCardCount = 0;
     5150:  186:  state->whoseTurn = 0;
     5150:  187:  state->handCount[state->whoseTurn] = 0;
        -:  188:  //int it; move to top
        -:  189:
        -:  190:  //Moved draw cards to here, only drawing at the start of a turn
    30900:  191:  for (it = 0; it < 5; it++){
     5150:  191-block  0
    30900:  191-block  1
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
    25750:  192:    drawCard(state->whoseTurn, state);
    25750:  192-block  0
call    0 returned 100%
        -:  193:  }
        -:  194:
     5150:  195:  updateCoins(state->whoseTurn, state, 0);
     5150:  195-block  0
call    0 returned 100%
        -:  196:
     5150:  197:  return 0;
        -:  198:}
        -:  199:
function shuffle called 1808398 returned 100% blocks executed 100%
  1808398:  200:int shuffle(int player, struct gameState *state) {
  1808398:  200-block  0
        -:  201: 
        -:  202:
        -:  203:  int newDeck[MAX_DECK];
  1808398:  204:  int newDeckPos = 0;
        -:  205:  int card;
        -:  206:  int i;
        -:  207:
  1808398:  208:  if (state->deckCount[player] < 1)
  1808398:  208-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
  1785172:  209:    return -1;
  1785172:  209-block  0
    23226:  210:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare); 
    23226:  210-block  0
call    0 returned 100%
        -:  211:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  212:
  2175736:  213:  while (state->deckCount[player] > 0) {
  2175736:  213-block  0
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
  2152510:  214:    card = floor(Random() * state->deckCount[player]);
  2152510:  214-block  0
call    0 returned 100%
  2152510:  215:    newDeck[newDeckPos] = state->deck[player][card];
  2152510:  216:    newDeckPos++;
170123041:  217:    for (i = card; i < state->deckCount[player]-1; i++) {
167970531:  217-block  0
170123041:  217-block  1
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
167970531:  218:      state->deck[player][i] = state->deck[player][i+1];
        -:  219:    }
  2152510:  220:    state->deckCount[player]--;
  2152510:  220-block  0
        -:  221:  }
  2175736:  222:  for (i = 0; i < newDeckPos; i++) {
    23226:  222-block  0
  2152510:  222-block  1
  2175736:  222-block  2
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
  2152510:  223:    state->deck[player][i] = newDeck[i];
  2152510:  224:    state->deckCount[player]++;
        -:  225:  }
        -:  226:
  1808398:  227:  return 0;
    23226:  227-block  0
  1808398:  227-block  1
        -:  228:}
        -:  229:
function playCard called 0 returned 0% blocks executed 0%
    #####:  230:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state) 
    $$$$$:  230-block  0
        -:  231:{	
        -:  232:  int card;
    #####:  233:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  234:
        -:  235:  //check if it is the right phase
    #####:  236:  if (state->phase != 0)
    $$$$$:  236-block  0
branch  0 never executed
branch  1 never executed
        -:  237:    {
    #####:  238:      return -1;
    $$$$$:  238-block  0
        -:  239:    }
        -:  240:	
        -:  241:  //check if player has enough actions
    #####:  242:  if ( state->numActions < 1 )
    $$$$$:  242-block  0
branch  0 never executed
branch  1 never executed
        -:  243:    {
    #####:  244:      return -1;
    $$$$$:  244-block  0
        -:  245:    }
        -:  246:	
        -:  247:  //get card played
    #####:  248:  card = handCard(handPos, state);
    $$$$$:  248-block  0
call    0 never executed
        -:  249:	
        -:  250:  //check if selected card is an action
    #####:  251:  if ( card < adventurer || card > treasure_map )
branch  0 never executed
branch  1 never executed
    $$$$$:  251-block  0
branch  2 never executed
branch  3 never executed
        -:  252:    {
    #####:  253:      return -1;
    $$$$$:  253-block  0
        -:  254:    }
        -:  255:	
        -:  256:  //play card
    #####:  257:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
    $$$$$:  257-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  258:    {
    #####:  259:      return -1;
    $$$$$:  259-block  0
        -:  260:    }
        -:  261:	
        -:  262:  //reduce number of actions
    #####:  263:  state->numActions--;
        -:  264:
        -:  265:  //update coins (Treasure cards may be added with card draws)
    #####:  266:  updateCoins(state->whoseTurn, state, coin_bonus);
    $$$$$:  266-block  0
call    0 never executed
        -:  267:	
    #####:  268:  return 0;
    $$$$$:  268-block  0
        -:  269:}
        -:  270:
function buyCard called 0 returned 0% blocks executed 0%
    #####:  271:int buyCard(int supplyPos, struct gameState *state) {
    $$$$$:  271-block  0
    $$$$$:  271-block  1
        -:  272:  int who;
        -:  273:  if (DEBUG){
        -:  274:    printf("Entering buyCard...\n");
        -:  275:  }
        -:  276:
        -:  277:  // I don't know what to do about the phase thing.
        -:  278:
    #####:  279:  who = state->whoseTurn;
        -:  280:
    #####:  281:  if (state->numBuys < 1){
    $$$$$:  281-block  0
branch  0 never executed
branch  1 never executed
        -:  282:    if (DEBUG)
        -:  283:      printf("You do not have any buys left\n");
    #####:  284:    return -1;
    $$$$$:  284-block  0
    #####:  285:  } else if (supplyCount(supplyPos, state) <1){
    $$$$$:  285-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  286:    if (DEBUG)
        -:  287:      printf("There are not any of that type of card left\n");
    #####:  288:    return -1;
    $$$$$:  288-block  0
    #####:  289:  } else if (state->coins < getCost(supplyPos)){
    $$$$$:  289-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  290:    if (DEBUG) 
        -:  291:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  292:    return -1;
    $$$$$:  292-block  0
        -:  293:  } else {
    #####:  294:    state->phase=1;
        -:  295:    //state->supplyCount[supplyPos]--;
    #####:  296:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
    $$$$$:  296-block  0
call    0 never executed
        -:  297:  
    #####:  298:    state->coins = (state->coins) - (getCost(supplyPos));
call    0 never executed
    #####:  299:    state->numBuys--;
        -:  300:    if (DEBUG)
        -:  301:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  302:  }
        -:  303:
        -:  304:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  305:  //state->discardCount[who]++;
        -:  306:    
    #####:  307:  return 0;
    $$$$$:  307-block  0
        -:  308:}
        -:  309:
function numHandCards called 0 returned 0% blocks executed 0%
    #####:  310:int numHandCards(struct gameState *state) {
    $$$$$:  310-block  0
    #####:  311:  return state->handCount[ whoseTurn(state) ];
    $$$$$:  311-block  0
call    0 never executed
        -:  312:}
        -:  313:
function handCard called 0 returned 0% blocks executed 0%
    #####:  314:int handCard(int handPos, struct gameState *state) {
    $$$$$:  314-block  0
    #####:  315:  int currentPlayer = whoseTurn(state);
    $$$$$:  315-block  0
call    0 never executed
    #####:  316:  return state->hand[currentPlayer][handPos];
        -:  317:}
        -:  318:
function supplyCount called 6060 returned 100% blocks executed 100%
     6060:  319:int supplyCount(int card, struct gameState *state) {
     6060:  319-block  0
     6060:  320:  return state->supplyCount[card];
     6060:  320-block  0
        -:  321:}
        -:  322:
function fullDeckCount called 0 returned 0% blocks executed 0%
    #####:  323:int fullDeckCount(int player, int card, struct gameState *state) {
    $$$$$:  323-block  0
        -:  324:  int i;
    #####:  325:  int count = 0;
        -:  326:
    #####:  327:  for (i = 0; i < state->deckCount[player]; i++)
    $$$$$:  327-block  0
    $$$$$:  327-block  1
    $$$$$:  327-block  2
branch  0 never executed
branch  1 never executed
        -:  328:    {
    #####:  329:      if (state->deck[player][i] == card) count++;
    $$$$$:  329-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  329-block  1
        -:  330:    }
        -:  331:
    #####:  332:  for (i = 0; i < state->handCount[player]; i++)
    $$$$$:  332-block  0
    $$$$$:  332-block  1
    $$$$$:  332-block  2
branch  0 never executed
branch  1 never executed
        -:  333:    {
    #####:  334:      if (state->hand[player][i] == card) count++;
    $$$$$:  334-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  334-block  1
        -:  335:    }
        -:  336:
    #####:  337:  for (i = 0; i < state->discardCount[player]; i++)
    $$$$$:  337-block  0
    $$$$$:  337-block  1
    $$$$$:  337-block  2
branch  0 never executed
branch  1 never executed
        -:  338:    {
    #####:  339:      if (state->discard[player][i] == card) count++;
    $$$$$:  339-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  339-block  1
        -:  340:    }
        -:  341:
    #####:  342:  return count;
    $$$$$:  342-block  0
        -:  343:}
        -:  344:
function whoseTurn called 10084 returned 100% blocks executed 100%
    10084:  345:int whoseTurn(struct gameState *state) {
    10084:  345-block  0
    10084:  346:  return state->whoseTurn;
    10084:  346-block  0
        -:  347:}
        -:  348:
function endTurn called 0 returned 0% blocks executed 0%
    #####:  349:int endTurn(struct gameState *state) {
    $$$$$:  349-block  0
        -:  350:  int k;
        -:  351:  int i;
    #####:  352:  int currentPlayer = whoseTurn(state);
    $$$$$:  352-block  0
call    0 never executed
        -:  353:  
        -:  354:  //Discard hand
    #####:  355:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    $$$$$:  355-block  0
    $$$$$:  355-block  1
branch  0 never executed
branch  1 never executed
    #####:  356:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  357:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  358:  }
    #####:  359:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  360:    
        -:  361:  //Code for determining the player
    #####:  362:  if (currentPlayer < (state->numPlayers - 1)){ 
    $$$$$:  362-block  0
branch  0 never executed
branch  1 never executed
    #####:  363:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
    $$$$$:  363-block  0
        -:  364:  }
        -:  365:  else{
    #####:  366:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
    $$$$$:  366-block  0
        -:  367:  }
        -:  368:
    #####:  369:  state->outpostPlayed = 0;
    #####:  370:  state->phase = 0;
    #####:  371:  state->numActions = 1;
    #####:  372:  state->coins = 0;
    #####:  373:  state->numBuys = 1;
    #####:  374:  state->playedCardCount = 0;
    #####:  375:  state->handCount[state->whoseTurn] = 0;
        -:  376:
        -:  377:  //int k; move to top
        -:  378:  //Next player draws hand
    #####:  379:  for (k = 0; k < 5; k++){
    $$$$$:  379-block  0
    $$$$$:  379-block  1
branch  0 never executed
branch  1 never executed
    #####:  380:    drawCard(state->whoseTurn, state);//Draw a card
    $$$$$:  380-block  0
call    0 never executed
        -:  381:  }
        -:  382:
        -:  383:  //Update money
    #####:  384:  updateCoins(state->whoseTurn, state , 0);
    $$$$$:  384-block  0
call    0 never executed
        -:  385:
    #####:  386:  return 0;
        -:  387:}
        -:  388:
function isGameOver called 0 returned 0% blocks executed 0%
    #####:  389:int isGameOver(struct gameState *state) {
    $$$$$:  389-block  0
        -:  390:  int i;
        -:  391:  int j;
        -:  392:	
        -:  393:  //if stack of Province cards is empty, the game ends
    #####:  394:  if (state->supplyCount[province] == 0)
    $$$$$:  394-block  0
branch  0 never executed
branch  1 never executed
        -:  395:    {
    #####:  396:      return 1;
    $$$$$:  396-block  0
        -:  397:    }
        -:  398:
        -:  399:  //if three supply pile are at 0, the game ends
    #####:  400:  j = 0;
    #####:  401:  for (i = 0; i < 25; i++)
    $$$$$:  401-block  0
    $$$$$:  401-block  1
    $$$$$:  401-block  2
branch  0 never executed
branch  1 never executed
        -:  402:    {
    #####:  403:      if (state->supplyCount[i] == 0)
    $$$$$:  403-block  0
branch  0 never executed
branch  1 never executed
        -:  404:	{
    #####:  405:	  j++;
    $$$$$:  405-block  0
        -:  406:	}
        -:  407:    }
    #####:  408:  if ( j >= 3)
    $$$$$:  408-block  0
branch  0 never executed
branch  1 never executed
        -:  409:    {
    #####:  410:      return 1;
    $$$$$:  410-block  0
        -:  411:    }
        -:  412:
    #####:  413:  return 0;
    $$$$$:  413-block  0
        -:  414:}
        -:  415:
function scoreFor called 30 returned 100% blocks executed 38%
       30:  416:int scoreFor (int player, struct gameState *state) {
       30:  416-block  0
        -:  417:
        -:  418:  int i;
       30:  419:  int score = 0;
        -:  420:  //score from hand
      180:  421:  for (i = 0; i < state->handCount[player]; i++)
       30:  421-block  0
      150:  421-block  1
      180:  421-block  2
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        -:  422:    {
      150:  423:      if (state->hand[player][i] == curse) { score = score - 1; };
      150:  423-block  0
branch  0 taken 20% (fallthrough)
branch  1 taken 80%
       30:  423-block  1
      150:  424:      if (state->hand[player][i] == estate) { score = score + 1; };
      150:  424-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        6:  424-block  1
      150:  425:      if (state->hand[player][i] == duchy) { score = score + 3; };
      150:  425-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        6:  425-block  1
      150:  426:      if (state->hand[player][i] == province) { score = score + 6; };
      150:  426-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        6:  426-block  1
      150:  427:      if (state->hand[player][i] == great_hall) { score = score + 1; };
      150:  427-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    $$$$$:  427-block  1
      150:  428:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
      150:  428-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    $$$$$:  428-block  1
call    2 never executed
        -:  429:    }
        -:  430:
        -:  431:  //score from discard
       30:  432:  for (i = 0; i < state->discardCount[player]; i++)
       30:  432-block  0
    $$$$$:  432-block  1
       30:  432-block  2
branch  0 taken 0%
branch  1 taken 100% (fallthrough)
        -:  433:    {
    #####:  434:      if (state->discard[player][i] == curse) { score = score - 1; };
    $$$$$:  434-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  434-block  1
    #####:  435:      if (state->discard[player][i] == estate) { score = score + 1; };
    $$$$$:  435-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  435-block  1
    #####:  436:      if (state->discard[player][i] == duchy) { score = score + 3; };
    $$$$$:  436-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  436-block  1
    #####:  437:      if (state->discard[player][i] == province) { score = score + 6; };
    $$$$$:  437-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  437-block  1
    #####:  438:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    $$$$$:  438-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  438-block  1
    #####:  439:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
    $$$$$:  439-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  439-block  1
call    2 never executed
        -:  440:    }
        -:  441:
        -:  442:  //score from deck
       30:  443:  for (i = 0; i < state->discardCount[player]; i++)
       30:  443-block  0
    $$$$$:  443-block  1
       30:  443-block  2
branch  0 taken 0%
branch  1 taken 100% (fallthrough)
        -:  444:    {
    #####:  445:      if (state->deck[player][i] == curse) { score = score - 1; };
    $$$$$:  445-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  445-block  1
    #####:  446:      if (state->deck[player][i] == estate) { score = score + 1; };
    $$$$$:  446-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  446-block  1
    #####:  447:      if (state->deck[player][i] == duchy) { score = score + 3; };
    $$$$$:  447-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  447-block  1
    #####:  448:      if (state->deck[player][i] == province) { score = score + 6; };
    $$$$$:  448-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  448-block  1
    #####:  449:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    $$$$$:  449-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  449-block  1
    #####:  450:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
    $$$$$:  450-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  450-block  1
call    2 never executed
        -:  451:    }
        -:  452:
       30:  453:  return score;
       30:  453-block  0
        -:  454:}
        -:  455:
function getWinners called 0 returned 0% blocks executed 0%
    #####:  456:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
    $$$$$:  456-block  0
        -:  457:  int i;	
        -:  458:  int j;
        -:  459:  int highScore;
        -:  460:  int currentPlayer;
        -:  461:
        -:  462:  //get score for each player
    #####:  463:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  463-block  0
    $$$$$:  463-block  1
    $$$$$:  463-block  2
branch  0 never executed
branch  1 never executed
        -:  464:    {
        -:  465:      //set unused player scores to -9999
    #####:  466:      if (i >= state->numPlayers)
    $$$$$:  466-block  0
branch  0 never executed
branch  1 never executed
        -:  467:	{
    #####:  468:	  players[i] = -9999;
    $$$$$:  468-block  0
        -:  469:	}
        -:  470:      else
        -:  471:	{
    #####:  472:	  players[i] = scoreFor (i, state);
    $$$$$:  472-block  0
call    0 never executed
        -:  473:	}
        -:  474:    }
        -:  475:
        -:  476:  //find highest score
    #####:  477:  j = 0;
    #####:  478:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  478-block  0
    $$$$$:  478-block  1
    $$$$$:  478-block  2
branch  0 never executed
branch  1 never executed
        -:  479:    {
    #####:  480:      if (players[i] > players[j])
    $$$$$:  480-block  0
branch  0 never executed
branch  1 never executed
        -:  481:	{
    #####:  482:	  j = i;
    $$$$$:  482-block  0
        -:  483:	}
        -:  484:    }
    #####:  485:  highScore = players[j];
        -:  486:
        -:  487:  //add 1 to players who had less turns
    #####:  488:  currentPlayer = whoseTurn(state);
    $$$$$:  488-block  0
call    0 never executed
    #####:  489:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  489-block  0
    $$$$$:  489-block  1
branch  0 never executed
branch  1 never executed
        -:  490:    {
    #####:  491:      if ( players[i] == highScore && i > currentPlayer )
    $$$$$:  491-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  491-block  1
branch  2 never executed
branch  3 never executed
        -:  492:	{
    #####:  493:	  players[i]++;
    $$$$$:  493-block  0
        -:  494:	}
        -:  495:    }
        -:  496:
        -:  497:  //find new highest score
    #####:  498:  j = 0;
    #####:  499:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  499-block  0
    $$$$$:  499-block  1
    $$$$$:  499-block  2
branch  0 never executed
branch  1 never executed
        -:  500:    {
    #####:  501:      if ( players[i] > players[j] )
    $$$$$:  501-block  0
branch  0 never executed
branch  1 never executed
        -:  502:	{
    #####:  503:	  j = i;
    $$$$$:  503-block  0
        -:  504:	}
        -:  505:    }
    #####:  506:  highScore = players[j];
        -:  507:
        -:  508:  //set winners in array to 1 and rest to 0
    #####:  509:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  509-block  0
    $$$$$:  509-block  1
    $$$$$:  509-block  2
branch  0 never executed
branch  1 never executed
        -:  510:    {
    #####:  511:      if ( players[i] == highScore )
    $$$$$:  511-block  0
branch  0 never executed
branch  1 never executed
        -:  512:	{
    #####:  513:	  players[i] = 1;
    $$$$$:  513-block  0
        -:  514:	}
        -:  515:      else
        -:  516:	{
    #####:  517:	  players[i] = 0;
    $$$$$:  517-block  0
        -:  518:	}
        -:  519:    }
        -:  520:
    #####:  521:  return 0;
    $$$$$:  521-block  0
        -:  522:}
        -:  523:
function drawCard called 3213988 returned 100% blocks executed 100%
  3213988:  524:int drawCard(int player, struct gameState *state)
  3213988:  524-block  0
        -:  525:{	int count;
        -:  526:  int deckCounter;
  3213988:  527:  if (state->deckCount[player] <= 0){//Deck is empty
  3213988:  527-block  0
branch  0 taken 28% (fallthrough)
branch  1 taken 72%
        -:  528:    
        -:  529:    //Step 1 Shuffle the discard pile back into a deck
        -:  530:    int i;
        -:  531:    //Move discard to deck
  2899117:  532:    for (i = 0; i < state->discardCount[player];i++){
   899927:  532-block  0
  1999190:  532-block  1
  2899117:  532-block  2
branch  0 taken 69%
branch  1 taken 31% (fallthrough)
  1999190:  533:      state->deck[player][i] = state->discard[player][i];
  1999190:  534:      state->discard[player][i] = -1;
        -:  535:    }
        -:  536:
   899927:  537:    state->deckCount[player] = state->discardCount[player];
   899927:  538:    state->discardCount[player] = 0;//Reset discard
        -:  539:
        -:  540:    //Shufffle the deck
   899927:  541:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
   899927:  541-block  0
call    0 returned 100%
        -:  542:   
        -:  543:    if (DEBUG){//Debug statements
        -:  544:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  545:    }
        -:  546:    
   899927:  547:    state->discardCount[player] = 0;
        -:  548:
        -:  549:    //Step 2 Draw Card
   899927:  550:    count = state->handCount[player];//Get current player's hand count
        -:  551:    
        -:  552:    if (DEBUG){//Debug statements
        -:  553:      printf("Current hand count: %d\n", count);
        -:  554:    }
        -:  555:    
   899927:  556:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  557:
   899927:  558:    if (deckCounter == 0)
   899927:  558-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
   892033:  559:      return -1;
   892033:  559-block  0
        -:  560:
     7894:  561:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
     7894:  562:    state->deckCount[player]--;
     7894:  563:    state->handCount[player]++;//Increment hand count
     7894:  563-block  0
        -:  564:  }
        -:  565:
        -:  566:  else{
  2314061:  567:    int count = state->handCount[player];//Get current hand count for player
  2314061:  567-block  0
        -:  568:    int deckCounter;
        -:  569:    if (DEBUG){//Debug statements
        -:  570:      printf("Current hand count: %d\n", count);
        -:  571:    }
        -:  572:
  2314061:  573:    deckCounter = state->deckCount[player];//Create holder for the deck count
  2314061:  574:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
  2314061:  575:    state->deckCount[player]--;
  2314061:  576:    state->handCount[player]++;//Increment hand count
  2314061:  576-block  0
        -:  577:  }
        -:  578:
  2321955:  579:  return 0;
  2321955:  579-block  0
        -:  580:}
        -:  581:
function getCost called 0 returned 0% blocks executed 0%
    #####:  582:int getCost(int cardNumber)
    $$$$$:  582-block  0
        -:  583:{
    #####:  584:  switch( cardNumber ) 
    $$$$$:  584-block  0
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
branch 18 never executed
branch 19 never executed
branch 20 never executed
branch 21 never executed
branch 22 never executed
branch 23 never executed
branch 24 never executed
branch 25 never executed
branch 26 never executed
branch 27 never executed
        -:  585:    {
        -:  586:    case curse:
    #####:  587:      return 0;
    $$$$$:  587-block  0
        -:  588:    case estate:
    #####:  589:      return 2;
    $$$$$:  589-block  0
        -:  590:    case duchy:
    #####:  591:      return 5;
    $$$$$:  591-block  0
        -:  592:    case province:
    #####:  593:      return 8;
    $$$$$:  593-block  0
        -:  594:    case copper:
    #####:  595:      return 0;
    $$$$$:  595-block  0
        -:  596:    case silver:
    #####:  597:      return 3;
    $$$$$:  597-block  0
        -:  598:    case gold:
    #####:  599:      return 6;
    $$$$$:  599-block  0
        -:  600:    case adventurer:
    #####:  601:      return 6;
    $$$$$:  601-block  0
        -:  602:    case council_room:
    #####:  603:      return 5;
    $$$$$:  603-block  0
        -:  604:    case feast:
    #####:  605:      return 4;
    $$$$$:  605-block  0
        -:  606:    case gardens:
    #####:  607:      return 4;
    $$$$$:  607-block  0
        -:  608:    case mine:
    #####:  609:      return 5;
    $$$$$:  609-block  0
        -:  610:    case remodel:
    #####:  611:      return 4;
    $$$$$:  611-block  0
        -:  612:    case smithy:
    #####:  613:      return 4;
    $$$$$:  613-block  0
        -:  614:    case village:
    #####:  615:      return 3;
    $$$$$:  615-block  0
        -:  616:    case baron:
    #####:  617:      return 4;
    $$$$$:  617-block  0
        -:  618:    case great_hall:
    #####:  619:      return 3;
    $$$$$:  619-block  0
        -:  620:    case minion:
    #####:  621:      return 5;
    $$$$$:  621-block  0
        -:  622:    case steward:
    #####:  623:      return 3;
    $$$$$:  623-block  0
        -:  624:    case tribute:
    #####:  625:      return 5;
    $$$$$:  625-block  0
        -:  626:    case ambassador:
    #####:  627:      return 3;
    $$$$$:  627-block  0
        -:  628:    case cutpurse:
    #####:  629:      return 4;
    $$$$$:  629-block  0
        -:  630:    case embargo: 
    #####:  631:      return 2;
    $$$$$:  631-block  0
        -:  632:    case outpost:
    #####:  633:      return 5;
    $$$$$:  633-block  0
        -:  634:    case salvager:
    #####:  635:      return 4;
    $$$$$:  635-block  0
        -:  636:    case sea_hag:
    #####:  637:      return 4;
    $$$$$:  637-block  0
        -:  638:    case treasure_map:
    #####:  639:      return 4;
    $$$$$:  639-block  0
        -:  640:    }
        -:  641:	
    #####:  642:  return -1;
    $$$$$:  642-block  0
        -:  643:}
        -:  644:
        -:  645:/****************************************************************************************************
        -:  646:* Start of card functions
        -:  647:*****************************************************************************************************/
        -:  648:
function playSmithy called 6 returned 100% blocks executed 100%
        6:  649:int playSmithy(struct gameState *state, int handPos) {
        6:  649-block  0
        -:  650:	//+3 Cards
        6:  651:	int currentPlayer = whoseTurn(state);
        6:  651-block  0
call    0 returned 100%
        -:  652:	int i;
       30:  653:    for (i = 0; i <= 3; i++)
       30:  653-block  0
branch  0 taken 80%
branch  1 taken 20% (fallthrough)
        -:  654:	{
       24:  655:		drawCard(currentPlayer, state);
       24:  655-block  0
call    0 returned 100%
        -:  656:	}
        -:  657:			
        -:  658:	//discard card from hand
        6:  659:	discardCard(handPos, currentPlayer, state, 1);
        6:  659-block  0
call    0 returned 100%
        6:  660:	return 0;
        -:  661:}
        -:  662:
function playAdventurer called 3018 returned 100% blocks executed 100%
     3018:  663:int playAdventurer(struct gameState *state) {
     3018:  663-block  0
     3018:  664:	int currentPlayer = whoseTurn(state);
     3018:  664-block  0
call    0 returned 100%
     3018:  665:	int drawntreasure =0;
        -:  666:	int cardDrawn;
        -:  667:	int temphand[MAX_HAND]; 
     3018:  668:	int z = 0;
        -:  669:
  3171086:  670:	while(drawntreasure<2){
  3171086:  670-block  0
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
  3168068:  671:		if (state->deckCount[currentPlayer] <1){//if the deck is empty we need to shuffle discard and add to deck
  3168068:  671-block  0
branch  0 taken 28% (fallthrough)
branch  1 taken 72%
   893139:  672:		  shuffle(currentPlayer, state);
   893139:  672-block  0
call    0 returned 100%
        -:  673:		}
  3168068:  674:		drawCard(currentPlayer, state);
  3168068:  674-block  0
call    0 returned 100%
  3168068:  675:		cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-2];//top card of hand is most recently drawn card.
  3168068:  676:		if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold) {
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
  3162134:  676-block  0
branch  2 taken 99% (fallthrough)
branch  3 taken 1%
  3162066:  676-block  1
branch  4 taken 1% (fallthrough)
branch  5 taken 99%
     6036:  677:		  drawntreasure++;
     6036:  677-block  0
        -:  678:    }
        -:  679:		else{
  3162032:  680:      z++;
  3162032:  681:		  temphand[z]=cardDrawn;
  3162032:  682:		  state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
  3162032:  682-block  0
        -:  683:    }
        -:  684:  }
   772174:  685:  while(z>=0){
     3018:  685-block  0
   772174:  685-block  1
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
   769156:  686:    state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
   769156:  687:    z=z-1;
   769156:  687-block  0
        -:  688:  }
     3018:  689:  return 0;
     3018:  689-block  0
        -:  690:}
        -:  691:
function playMine called 0 returned 0% blocks executed 0%
    #####:  692:int playMine(struct gameState *state, int choice1, int choice2, int handPos) {
    $$$$$:  692-block  0
    #####:  693:	int currentPlayer = whoseTurn(state);
    $$$$$:  693-block  0
call    0 never executed
        -:  694:	int i, j;
    #####:  695:	int z = 0;
    #####:  696:	j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  697:
    #####:  698:	if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold)
branch  0 never executed
branch  1 never executed
    $$$$$:  698-block  0
branch  2 never executed
branch  3 never executed
        -:  699:	{
    #####:  700:	  return -1;
    $$$$$:  700-block  0
        -:  701:	}
        -:  702:
    #####:  703:	if (choice2 > z || choice2 < curse)
    $$$$$:  703-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  703-block  1
branch  2 never executed
branch  3 never executed
        -:  704:	{
    #####:  705:		return -1;
    $$$$$:  705-block  0
        -:  706:	}
        -:  707:
    #####:  708:	if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) )
    $$$$$:  708-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  709:	{
    #####:  710:		return -1;
    $$$$$:  710-block  0
        -:  711:	}
        -:  712:
    #####:  713:	gainCard(choice1, state, 2, currentPlayer);
    $$$$$:  713-block  0
call    0 never executed
        -:  714:
        -:  715:	//discard card from hand
    #####:  716:	discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  717:
        -:  718:	//discard trashed card
    #####:  719:	for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$:  719-block  0
    $$$$$:  719-block  1
branch  0 never executed
branch  1 never executed
        -:  720:	{
    #####:  721:		if (state->hand[currentPlayer][i] == j)
    $$$$$:  721-block  0
branch  0 never executed
branch  1 never executed
        -:  722:		{
    #####:  723:			discardCard(i, currentPlayer, state, 0);			
    $$$$$:  723-block  0
call    0 never executed
    #####:  724:			break;
        -:  725:		}
        -:  726:	}
        -:  727:		
    #####:  728:	return 0;
    $$$$$:  728-block  0
        -:  729:}
        -:  730:
function playVillage called 2012 returned 100% blocks executed 100%
     2012:  731:int playVillage(struct gameState *state, int handPos) {
     2012:  731-block  0
     2012:  732:	int currentPlayer = whoseTurn(state);
     2012:  732-block  0
call    0 returned 100%
        -:  733:
        -:  734:	//+1 Card
     2012:  735:	drawCard(currentPlayer, state);
call    0 returned 100%
        -:  736:
        -:  737:	//+2 Actions
     2012:  738:	state->numActions = state->numActions + 2;
        -:  739:
        -:  740:	//discard played card from hand
     2012:  741:	discardCard(handPos, currentPlayer, state, 0);
call    0 returned 100%
     2012:  742:	return 0;
        -:  743:}
        -:  744:
function playRemodel called 0 returned 0% blocks executed 0%
    #####:  745:int playRemodel(struct gameState *state, int choice1, int choice2, int handPos) {
    $$$$$:  745-block  0
        -:  746:	int i, j;
    #####:  747:	int currentPlayer = whoseTurn(state);
    $$$$$:  747-block  0
call    0 never executed
        -:  748: 
        -:  749:
    #####:  750:	j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  751:
    #####:  752:	if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  753:	{
    #####:  754:		return -1;
    $$$$$:  754-block  0
        -:  755:	}
        -:  756:
    #####:  757:	gainCard(choice2, state, 0, currentPlayer);
    $$$$$:  757-block  0
call    0 never executed
        -:  758:
        -:  759:	//discard card from hand
    #####:  760:	discardCard(handPos+1, currentPlayer, state, 0);
call    0 never executed
        -:  761:
        -:  762:	//discard trashed card
    #####:  763:	for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$:  763-block  0
    $$$$$:  763-block  1
branch  0 never executed
branch  1 never executed
        -:  764:		{
    #####:  765:		if (state->hand[currentPlayer][i] == j)
    $$$$$:  765-block  0
branch  0 never executed
branch  1 never executed
        -:  766:		{
    #####:  767:			discardCard(i+1, currentPlayer, state, 0);			
    $$$$$:  767-block  0
call    0 never executed
    #####:  768:			break;
        -:  769:		}
        -:  770:	}
        -:  771:
    #####:  772:	return 0;
    $$$$$:  772-block  0
        -:  773:}
        -:  774:
function cardEffect called 5048 returned 100% blocks executed 17%
     5048:  775:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
     5048:  775-block  0
        -:  776:{
        -:  777:  int i;
        -:  778:  int j;
        -:  779:  int k;
        -:  780:  int x;
        -:  781:  int index;
     5048:  782:  int currentPlayer = whoseTurn(state);
     5048:  782-block  0
call    0 returned 100%
     5048:  783:  int nextPlayer = currentPlayer + 1;
        -:  784:
     5048:  785:  int tributeRevealedCards[2] = {-1, -1};
        -:  786:  int temphand[MAX_HAND];// moved above the if statement
     5048:  787:  int drawntreasure=0;
        -:  788:  int cardDrawn;
     5048:  789:  int z = 0;// this is the counter for the temp hand
     5048:  790:  if (nextPlayer > (state->numPlayers - 1)){
branch  0 taken 35% (fallthrough)
branch  1 taken 65%
     1757:  791:    nextPlayer = 0;
     1757:  791-block  0
        -:  792:  }
        -:  793:  
        -:  794:	
        -:  795:  //uses switch to select card and perform actions
     5048:  796:  switch( card ) 
     5048:  796-block  0
branch  0 taken 60%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
branch  5 taken 0%
branch  6 taken 1%
branch  7 taken 40%
branch  8 taken 0%
branch  9 taken 0%
branch 10 taken 0%
branch 11 taken 1%
branch 12 taken 0%
branch 13 taken 0%
branch 14 taken 0%
branch 15 taken 0%
branch 16 taken 0%
branch 17 taken 0%
branch 18 taken 0%
branch 19 taken 0%
branch 20 taken 0%
        -:  797:    {
        -:  798:    case adventurer:
     3018:  799:      playAdventurer(state);
     3018:  799-block  0
call    0 returned 100%
        -:  800:			
        -:  801:    case council_room:
        -:  802:      //+4 Cards
    15090:  803:      for (i = 0; i < 4; i++)
     3018:  803-block  0
    15090:  803-block  1
branch  0 taken 80%
branch  1 taken 20% (fallthrough)
        -:  804:	{
    12072:  805:	  drawCard(currentPlayer, state);
    12072:  805-block  0
call    0 returned 100%
        -:  806:	}
        -:  807:			
        -:  808:      //+1 Buy
     3018:  809:      state->numBuys++;
        -:  810:			
        -:  811:      //Each other player draws a card
    12086:  812:      for (i = 0; i < state->numPlayers; i++)
     3018:  812-block  0
     9068:  812-block  1
    12086:  812-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  813:	{
     9068:  814:	  if ( i != currentPlayer )
     9068:  814-block  0
branch  0 taken 67% (fallthrough)
branch  1 taken 33%
        -:  815:	    {
     6050:  816:	      drawCard(i, state);
     6050:  816-block  0
call    0 returned 100%
        -:  817:	    }
        -:  818:	}
        -:  819:			
        -:  820:      //put played card in played card pile
     3018:  821:      discardCard(handPos, currentPlayer, state, 0);
     3018:  821-block  0
call    0 returned 100%
        -:  822:			
     3018:  823:      return 0;
        -:  824:			
        -:  825:    case feast:
        -:  826:      //gain card with cost up to 5
        -:  827:      //Backup hand
    #####:  828:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    $$$$$:  828-block  0
    $$$$$:  828-block  1
    $$$$$:  828-block  2
branch  0 never executed
branch  1 never executed
    #####:  829:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  830:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  831:      }
        -:  832:      //Backup hand
        -:  833:
        -:  834:      //Update Coins for Buy
    #####:  835:      updateCoins(currentPlayer, state, 5);
    $$$$$:  835-block  0
call    0 never executed
    #####:  836:      x = 1;//Condition to loop on
    #####:  837:      while( x == 1) {//Buy one card
    $$$$$:  837-block  0
branch  0 never executed
branch  1 never executed
    #####:  838:	if (supplyCount(choice1, state) <= 0){
    $$$$$:  838-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  839:	  if (DEBUG)
        -:  840:	    printf("None of that card left, sorry!\n");
        -:  841:
        -:  842:	  if (DEBUG){
        -:  843:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  844:	  }
        -:  845:	}
    #####:  846:	else if (state->coins < getCost(choice1)){
    $$$$$:  846-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  847:	  printf("That card is too expensive!\n");
    $$$$$:  847-block  0
call    0 never executed
        -:  848:
        -:  849:	  if (DEBUG){
        -:  850:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  851:	  }
        -:  852:	}
        -:  853:	else{
        -:  854:
        -:  855:	  if (DEBUG){
        -:  856:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  857:	  }
        -:  858:
    #####:  859:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    $$$$$:  859-block  0
call    0 never executed
    #####:  860:	  x = 0;//No more buying cards
        -:  861:
        -:  862:	  if (DEBUG){
        -:  863:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  864:	  }
        -:  865:
        -:  866:	}
        -:  867:      }     
        -:  868:
        -:  869:      //Reset Hand
    #####:  870:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    $$$$$:  870-block  0
    $$$$$:  870-block  1
    $$$$$:  870-block  2
branch  0 never executed
branch  1 never executed
    #####:  871:	state->hand[currentPlayer][i] = temphand[i];
    #####:  872:	temphand[i] = -1;
        -:  873:      }
        -:  874:      //Reset Hand
        -:  875:      			
    #####:  876:      return 0;
    $$$$$:  876-block  0
        -:  877:			
        -:  878:    case gardens:
    #####:  879:      return -1;
    $$$$$:  879-block  0
        -:  880:			
        -:  881:    case mine:
    #####:  882:   	  playMine(state, choice1, choice2, handPos);
    $$$$$:  882-block  0
call    0 never executed
        -:  883:			
        -:  884:    case remodel:
    #####:  885:      playRemodel(state, choice1, choice2, handPos);
    $$$$$:  885-block  0
call    0 never executed
        -:  886:		
        -:  887:    case smithy:
        6:  888:      playSmithy(state, handPos);
        6:  888-block  0
call    0 returned 100%
        -:  889:		
        -:  890:    case village:
     2012:  891:      playVillage(state, handPos);
     2012:  891-block  0
call    0 returned 100%
        -:  892:		
        -:  893:    case baron:
     2012:  894:      state->numBuys++;//Increase buys by 1!
     2012:  895:      if (choice1 > 0){//Boolean true or going to discard an estate
     2012:  895-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  896:	int p = 0;//Iterator for hand!
    #####:  897:	int card_not_discarded = 1;//Flag for discard set!
    #####:  898:	while(card_not_discarded){
    $$$$$:  898-block  0
    $$$$$:  898-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:  898-block  2
    #####:  899:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    $$$$$:  899-block  0
branch  0 never executed
branch  1 never executed
    #####:  900:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  901:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  902:	    state->discardCount[currentPlayer]++;
    #####:  903:	    for (;p < state->handCount[currentPlayer]; p++){
    $$$$$:  903-block  0
    $$$$$:  903-block  1
    $$$$$:  903-block  2
branch  0 never executed
branch  1 never executed
    #####:  904:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  905:	    }
    #####:  906:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  907:	    state->handCount[currentPlayer]--;
    #####:  908:	    card_not_discarded = 0;//Exit the loop
    $$$$$:  908-block  0
        -:  909:	  }
    #####:  910:	  else if (p > state->handCount[currentPlayer]){
    $$$$$:  910-block  0
branch  0 never executed
branch  1 never executed
        -:  911:	    if(DEBUG) {
        -:  912:	      printf("No estate cards in your hand, invalid choice\n");
        -:  913:	      printf("Must gain an estate if there are any\n");
        -:  914:	    }
    #####:  915:	    if (supplyCount(estate, state) > 0){
    $$$$$:  915-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  916:	      gainCard(estate, state, 0, currentPlayer);
    $$$$$:  916-block  0
call    0 never executed
    #####:  917:	      state->supplyCount[estate]--;//Decrement estates
    #####:  918:	      if (supplyCount(estate, state) == 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  919:		isGameOver(state);
    $$$$$:  919-block  0
call    0 never executed
        -:  920:	      }
        -:  921:	    }
    #####:  922:	    card_not_discarded = 0;//Exit the loop
    $$$$$:  922-block  0
        -:  923:	  }
        -:  924:			    
        -:  925:	  else{
    #####:  926:	    p++;//Next card
    $$$$$:  926-block  0
        -:  927:	  }
        -:  928:	}
        -:  929:      }
        -:  930:			    
        -:  931:      else{
     2012:  932:	if (supplyCount(estate, state) > 0){
     2012:  932-block  0
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
     2012:  933:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
     2012:  933-block  0
call    0 returned 100%
     2012:  934:	  state->supplyCount[estate]--;//Decrement Estates
     2012:  935:	  if (supplyCount(estate, state) == 0){
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:  936:	    isGameOver(state);
    $$$$$:  936-block  0
call    0 never executed
        -:  937:	  }
        -:  938:	}
        -:  939:      }
        -:  940:	    
        -:  941:      
     2012:  942:      return 0;
     2012:  942-block  0
        -:  943:		
        -:  944:    case great_hall:
        -:  945:      //+1 Card
    #####:  946:      drawCard(currentPlayer, state);
    $$$$$:  946-block  0
call    0 never executed
        -:  947:			
        -:  948:      //+1 Actions
    #####:  949:      state->numActions++;
        -:  950:			
        -:  951:      //discard card from hand
    #####:  952:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####:  953:      return 0;
        -:  954:		
        -:  955:    case minion:
        -:  956:      //+1 action
    #####:  957:      state->numActions++;
        -:  958:			
        -:  959:      //discard card from hand
    #####:  960:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$:  960-block  0
call    0 never executed
        -:  961:			
    #####:  962:      if (choice1)		//+2 coins
branch  0 never executed
branch  1 never executed
        -:  963:	{
    #####:  964:	  state->coins = state->coins + 2;
    $$$$$:  964-block  0
        -:  965:	}
        -:  966:			
    #####:  967:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
    $$$$$:  967-block  0
branch  0 never executed
branch  1 never executed
        -:  968:	{
        -:  969:	  //discard hand
    #####:  970:	  while(numHandCards(state) > 0)
    $$$$$:  970-block  0
    $$$$$:  970-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  971:	    {
    #####:  972:	      discardCard(handPos, currentPlayer, state, 0);
    $$$$$:  972-block  0
call    0 never executed
        -:  973:	    }
        -:  974:				
        -:  975:	  //draw 4
    #####:  976:	  for (i = 0; i < 4; i++)
    $$$$$:  976-block  0
    $$$$$:  976-block  1
branch  0 never executed
branch  1 never executed
        -:  977:	    {
    #####:  978:	      drawCard(currentPlayer, state);
    $$$$$:  978-block  0
call    0 never executed
        -:  979:	    }
        -:  980:				
        -:  981:	  //other players discard hand and redraw if hand size > 4
    #####:  982:	  for (i = 0; i < state->numPlayers; i++)
    $$$$$:  982-block  0
    $$$$$:  982-block  1
    $$$$$:  982-block  2
branch  0 never executed
branch  1 never executed
        -:  983:	    {
    #####:  984:	      if (i != currentPlayer)
    $$$$$:  984-block  0
branch  0 never executed
branch  1 never executed
        -:  985:		{
    #####:  986:		  if ( state->handCount[i] > 4 )
    $$$$$:  986-block  0
branch  0 never executed
branch  1 never executed
        -:  987:		    {
        -:  988:		      //discard hand
    #####:  989:		      while( state->handCount[i] > 0 )
    $$$$$:  989-block  0
    $$$$$:  989-block  1
branch  0 never executed
branch  1 never executed
        -:  990:			{
    #####:  991:			  discardCard(handPos, i, state, 0);
    $$$$$:  991-block  0
call    0 never executed
        -:  992:			}
        -:  993:							
        -:  994:		      //draw 4
    #####:  995:		      for (j = 0; j < 4; j++)
    $$$$$:  995-block  0
    $$$$$:  995-block  1
branch  0 never executed
branch  1 never executed
        -:  996:			{
    #####:  997:			  drawCard(i, state);
    $$$$$:  997-block  0
call    0 never executed
        -:  998:			}
        -:  999:		    }
        -: 1000:		}
        -: 1001:	    }
        -: 1002:				
        -: 1003:	}
    #####: 1004:      return 0;
    $$$$$: 1004-block  0
        -: 1005:		
        -: 1006:    case steward:
       18: 1007:      if (choice1 == 1)
       18: 1007-block  0
branch  0 taken 33% (fallthrough)
branch  1 taken 67%
        -: 1008:	{
        -: 1009:	  //+2 cards
        6: 1010:	  drawCard(currentPlayer, state);
        6: 1010-block  0
call    0 returned 100%
        6: 1011:	  drawCard(currentPlayer, state);
call    0 returned 100%
        -: 1012:	}
       12: 1013:      else if (choice1 == 2)
       12: 1013-block  0
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
        -: 1014:	{
        -: 1015:	  //+2 coins
        6: 1016:	  state->coins = state->coins + 2;
        6: 1016-block  0
        -: 1017:	}
        -: 1018:      else
        -: 1019:	{
        -: 1020:	  //trash 2 cards in hand
        6: 1021:	  discardCard(choice2, currentPlayer, state, 1);
        6: 1021-block  0
call    0 returned 100%
        6: 1022:	  discardCard(choice3, currentPlayer, state, 1);
call    0 returned 100%
        -: 1023:	}
        -: 1024:			
        -: 1025:      //discard card from hand
       18: 1026:      discardCard(handPos, currentPlayer, state, 0);
       18: 1026-block  0
call    0 returned 100%
       18: 1027:      return 0;
        -: 1028:		
        -: 1029:    case tribute:
    #####: 1030:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    $$$$$: 1030-block  0
branch  0 never executed
branch  1 never executed
    #####: 1031:	if (state->deckCount[nextPlayer] > 0){
    $$$$$: 1031-block  0
branch  0 never executed
branch  1 never executed
    #####: 1032:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1033:	  state->deckCount[nextPlayer]--;
    $$$$$: 1033-block  0
        -: 1034:	}
    #####: 1035:	else if (state->discardCount[nextPlayer] > 0){
    $$$$$: 1035-block  0
branch  0 never executed
branch  1 never executed
    #####: 1036:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1037:	  state->discardCount[nextPlayer]--;
    $$$$$: 1037-block  0
        -: 1038:	}
        -: 1039:	else{
        -: 1040:	  //No Card to Reveal
        -: 1041:	  if (DEBUG){
        -: 1042:	    printf("No cards to reveal\n");
        -: 1043:	  }
        -: 1044:	}
        -: 1045:      }
        -: 1046:	    
        -: 1047:      else{
    #####: 1048:	if (state->deckCount[nextPlayer] == 0){
    $$$$$: 1048-block  0
branch  0 never executed
branch  1 never executed
    #####: 1049:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    $$$$$: 1049-block  0
    $$$$$: 1049-block  1
    $$$$$: 1049-block  2
branch  0 never executed
branch  1 never executed
    #####: 1050:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1051:	    state->deckCount[nextPlayer]++;
    #####: 1052:	    state->discard[nextPlayer][i] = -1;
    #####: 1053:	    state->discardCount[nextPlayer]--;
        -: 1054:	  }
        -: 1055:			    
    #####: 1056:	  shuffle(nextPlayer,state);//Shuffle the deck
    $$$$$: 1056-block  0
call    0 never executed
        -: 1057:	} 
    #####: 1058:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1059:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1060:	state->deckCount[nextPlayer]--;
    #####: 1061:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1062:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1063:	state->deckCount[nextPlayer]--;
    $$$$$: 1063-block  0
        -: 1064:      }    
        -: 1065:		       
    #####: 1066:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one 
    $$$$$: 1066-block  0
branch  0 never executed
branch  1 never executed
    #####: 1067:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1068:	state->playedCardCount++;
    #####: 1069:	tributeRevealedCards[1] = -1;
    $$$$$: 1069-block  0
        -: 1070:      }
        -: 1071:
    #####: 1072:      for (i = 0; i <= 2; i ++){
    $$$$$: 1072-block  0
    $$$$$: 1072-block  1
    $$$$$: 1072-block  2
branch  0 never executed
branch  1 never executed
    #####: 1073:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    $$$$$: 1073-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1073-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1073-block  2
branch  4 never executed
branch  5 never executed
    #####: 1074:	  state->coins += 2;
    $$$$$: 1074-block  0
        -: 1075:	}
        -: 1076:		    
    #####: 1077:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    $$$$$: 1077-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1077-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1077-block  2
branch  4 never executed
branch  5 never executed
    $$$$$: 1077-block  3
branch  6 never executed
branch  7 never executed
    $$$$$: 1077-block  4
branch  8 never executed
branch  9 never executed
    #####: 1078:	  drawCard(currentPlayer, state);
    $$$$$: 1078-block  0
call    0 never executed
    #####: 1079:	  drawCard(currentPlayer, state);
call    0 never executed
        -: 1080:	}
        -: 1081:	else{//Action Card
    #####: 1082:	  state->numActions = state->numActions + 2;
    $$$$$: 1082-block  0
        -: 1083:	}
        -: 1084:      }
        -: 1085:	    
    #####: 1086:      return 0;
    $$$$$: 1086-block  0
        -: 1087:		
        -: 1088:    case ambassador:
    #####: 1089:      j = 0;		//used to check if player has enough cards to discard
        -: 1090:
    #####: 1091:      if (choice2 > 2 || choice2 < 0)
    $$$$$: 1091-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1091-block  1
branch  2 never executed
branch  3 never executed
        -: 1092:	{
    #####: 1093:	  return -1;				
    $$$$$: 1093-block  0
        -: 1094:	}
        -: 1095:
    #####: 1096:      if (choice1 == handPos)
    $$$$$: 1096-block  0
branch  0 never executed
branch  1 never executed
        -: 1097:	{
    #####: 1098:	  return -1;
    $$$$$: 1098-block  0
        -: 1099:	}
        -: 1100:
    #####: 1101:      for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1101-block  0
    $$$$$: 1101-block  1
    $$$$$: 1101-block  2
branch  0 never executed
branch  1 never executed
        -: 1102:	{
    #####: 1103:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
    $$$$$: 1103-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1103-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1103-block  2
branch  4 never executed
branch  5 never executed
        -: 1104:	    {
    #####: 1105:	      j++;
    $$$$$: 1105-block  0
        -: 1106:	    }
        -: 1107:	}
    #####: 1108:      if (j < choice2)
    $$$$$: 1108-block  0
branch  0 never executed
branch  1 never executed
        -: 1109:	{
    #####: 1110:	  return -1;				
    $$$$$: 1110-block  0
        -: 1111:	}
        -: 1112:
        -: 1113:      if (DEBUG) 
        -: 1114:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1115:
        -: 1116:      //increase supply count for choosen card by amount being discarded
    #####: 1117:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1118:			
        -: 1119:      //each other player gains a copy of revealed card
    #####: 1120:      for (i = 0; i < state->numPlayers; i++)
    $$$$$: 1120-block  0
    $$$$$: 1120-block  1
    $$$$$: 1120-block  2
branch  0 never executed
branch  1 never executed
        -: 1121:	{
    #####: 1122:	  if (i != currentPlayer)
    $$$$$: 1122-block  0
branch  0 never executed
branch  1 never executed
        -: 1123:	    {
    #####: 1124:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
    $$$$$: 1124-block  0
call    0 never executed
        -: 1125:	    }
        -: 1126:	}
        -: 1127:
        -: 1128:      //discard played card from hand
    #####: 1129:      discardCard(handPos, currentPlayer, state, 0);			
    $$$$$: 1129-block  0
call    0 never executed
        -: 1130:
        -: 1131:      //trash copies of cards returned to supply
    #####: 1132:      for (j = 0; j < choice2; j++)
    $$$$$: 1132-block  0
    $$$$$: 1132-block  1
branch  0 never executed
branch  1 never executed
        -: 1133:	{
    #####: 1134:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1134-block  0
    $$$$$: 1134-block  1
    $$$$$: 1134-block  2
branch  0 never executed
branch  1 never executed
        -: 1135:	    {
    #####: 1136:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
    $$$$$: 1136-block  0
branch  0 never executed
branch  1 never executed
        -: 1137:		{
    #####: 1138:		  discardCard(i, currentPlayer, state, 1);
    $$$$$: 1138-block  0
call    0 never executed
    #####: 1139:		  break;
        -: 1140:		}
        -: 1141:	    }
        -: 1142:	}			
        -: 1143:
    #####: 1144:      return 0;
    $$$$$: 1144-block  0
        -: 1145:		
        -: 1146:    case cutpurse:
        -: 1147:
    #####: 1148:      updateCoins(currentPlayer, state, 2);
    $$$$$: 1148-block  0
call    0 never executed
    #####: 1149:      for (i = 0; i < state->numPlayers; i++)
    $$$$$: 1149-block  0
    $$$$$: 1149-block  1
branch  0 never executed
branch  1 never executed
        -: 1150:	{
    #####: 1151:	  if (i != currentPlayer)
    $$$$$: 1151-block  0
branch  0 never executed
branch  1 never executed
        -: 1152:	    {
    #####: 1153:	      for (j = 0; j < state->handCount[i]; j++)
    $$$$$: 1153-block  0
    $$$$$: 1153-block  1
    $$$$$: 1153-block  2
branch  0 never executed
branch  1 never executed
        -: 1154:		{
    #####: 1155:		  if (state->hand[i][j] == copper)
    $$$$$: 1155-block  0
branch  0 never executed
branch  1 never executed
        -: 1156:		    {
    #####: 1157:		      discardCard(j, i, state, 0);
    $$$$$: 1157-block  0
call    0 never executed
    #####: 1158:		      break;
        -: 1159:		    }
    #####: 1160:		  if (j == state->handCount[i])
    $$$$$: 1160-block  0
branch  0 never executed
branch  1 never executed
        -: 1161:		    {
    #####: 1162:		      for (k = 0; k < state->handCount[i]; k++)
    $$$$$: 1162-block  0
    $$$$$: 1162-block  1
    $$$$$: 1162-block  2
branch  0 never executed
branch  1 never executed
        -: 1163:			{
        -: 1164:			  if (DEBUG)
        -: 1165:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1166:			}	
    #####: 1167:		      break;
    $$$$$: 1167-block  0
        -: 1168:		    }		
        -: 1169:		}
        -: 1170:					
        -: 1171:	    }
        -: 1172:				
        -: 1173:	}				
        -: 1174:
        -: 1175:      //discard played card from hand
    #####: 1176:      discardCard(handPos, currentPlayer, state, 0);			
    $$$$$: 1176-block  0
call    0 never executed
        -: 1177:
    #####: 1178:      return 0;
        -: 1179:
        -: 1180:		
        -: 1181:    case embargo: 
        -: 1182:      //+2 Coins
    #####: 1183:      state->coins = state->coins + 2;
        -: 1184:			
        -: 1185:      //see if selected pile is in play
    #####: 1186:      if ( state->supplyCount[choice1] == -1 )
    $$$$$: 1186-block  0
branch  0 never executed
branch  1 never executed
        -: 1187:	{
    #####: 1188:	  return -1;
    $$$$$: 1188-block  0
        -: 1189:	}
        -: 1190:			
        -: 1191:      //add embargo token to selected supply pile
    #####: 1192:      state->embargoTokens[choice1]++;
        -: 1193:			
        -: 1194:      //trash card
    #####: 1195:      discardCard(handPos, currentPlayer, state, 1);		
    $$$$$: 1195-block  0
call    0 never executed
    #####: 1196:      return 0;
        -: 1197:		
        -: 1198:    case outpost:
        -: 1199:      //set outpost flag
    #####: 1200:      state->outpostPlayed++;
        -: 1201:			
        -: 1202:      //discard card
    #####: 1203:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$: 1203-block  0
call    0 never executed
    #####: 1204:      return 0;
        -: 1205:		
        -: 1206:    case salvager:
        -: 1207:      //+1 buy
    #####: 1208:      state->numBuys++;
        -: 1209:			
    #####: 1210:      if (choice1)
    $$$$$: 1210-block  0
branch  0 never executed
branch  1 never executed
        -: 1211:	{
        -: 1212:	  //gain coins equal to trashed card
    #####: 1213:	  state->coins = state->coins + getCost( handCard(choice1, state) );
    $$$$$: 1213-block  0
call    0 never executed
call    1 never executed
        -: 1214:	  //trash card
    #####: 1215:	  discardCard(choice1, currentPlayer, state, 1);	
call    0 never executed
        -: 1216:	}
        -: 1217:			
        -: 1218:      //discard card
    #####: 1219:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$: 1219-block  0
call    0 never executed
    #####: 1220:      return 0;
        -: 1221:		
        -: 1222:    case sea_hag:
    #####: 1223:      for (i = 0; i < state->numPlayers; i++){
    $$$$$: 1223-block  0
    $$$$$: 1223-block  1
    $$$$$: 1223-block  2
branch  0 never executed
branch  1 never executed
    #####: 1224:	if (i != currentPlayer){
    $$$$$: 1224-block  0
branch  0 never executed
branch  1 never executed
    #####: 1225:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1226:	  state->discardCount[i]++;
    #####: 1227:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
    $$$$$: 1227-block  0
        -: 1228:	}
        -: 1229:      }
    #####: 1230:      return 0;
    $$$$$: 1230-block  0
        -: 1231:		
        -: 1232:    case treasure_map:
        -: 1233:      //search hand for another treasure_map
    #####: 1234:      index = -1;
    #####: 1235:      for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1235-block  0
    $$$$$: 1235-block  1
    $$$$$: 1235-block  2
branch  0 never executed
branch  1 never executed
        -: 1236:	{
    #####: 1237:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
    $$$$$: 1237-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1237-block  1
branch  2 never executed
branch  3 never executed
        -: 1238:	    {
    #####: 1239:	      index = i;
    #####: 1240:	      break;
    $$$$$: 1240-block  0
        -: 1241:	    }
        -: 1242:	}
    #####: 1243:      if (index > -1)
    $$$$$: 1243-block  0
branch  0 never executed
branch  1 never executed
        -: 1244:	{
        -: 1245:	  //trash both treasure cards
    #####: 1246:	  discardCard(handPos, currentPlayer, state, 1);
    $$$$$: 1246-block  0
call    0 never executed
    #####: 1247:	  discardCard(index, currentPlayer, state, 1);
call    0 never executed
        -: 1248:
        -: 1249:	  //gain 4 Gold cards
    #####: 1250:	  for (i = 0; i < 4; i++)
    $$$$$: 1250-block  0
branch  0 never executed
branch  1 never executed
        -: 1251:	    {
    #####: 1252:	      gainCard(gold, state, 1, currentPlayer);
    $$$$$: 1252-block  0
call    0 never executed
        -: 1253:	    }
        -: 1254:				
        -: 1255:	  //return success
    #####: 1256:	  return 1;
    $$$$$: 1256-block  0
        -: 1257:	}
        -: 1258:			
        -: 1259:      //no second treasure_map found in hand
    #####: 1260:      return -1;
    $$$$$: 1260-block  0
        -: 1261:    }
        -: 1262:	
     5048: 1263:  return -1;
    $$$$$: 1263-block  0
     5048: 1263-block  1
        -: 1264:}
        -: 1265:
function discardCard called 5114 returned 100% blocks executed 89%
     5114: 1266:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
     5114: 1266-block  0
        -: 1267:{
        -: 1268:	
        -: 1269:  //if card is not trashed, added to Played pile 
     5114: 1270:  if (trashFlag < 1)
     5114: 1270-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
        -: 1271:    {
        -: 1272:      //add card to played pile
     5090: 1273:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos]; 
     5090: 1274:      state->playedCardCount++;
     5090: 1274-block  0
        -: 1275:    }
        -: 1276:	
        -: 1277:  //set played card to -1
     5114: 1278:  state->hand[currentPlayer][handPos] = -1;
        -: 1279:	
        -: 1280:  //remove card from player's hand
     5114: 1281:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
     5114: 1281-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1282:    {
        -: 1283:      //reduce number of cards in hand
       14: 1284:      state->handCount[currentPlayer]--;
       14: 1284-block  0
        -: 1285:    }
     5100: 1286:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
     5100: 1286-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -: 1287:    {
        -: 1288:      //reduce number of cards in hand
    #####: 1289:      state->handCount[currentPlayer]--;
    $$$$$: 1289-block  0
        -: 1290:    }
        -: 1291:  else 	
        -: 1292:    {
        -: 1293:      //replace discarded card with last card in hand
     5100: 1294:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1295:      //set last card to -1
     5100: 1296:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1297:      //reduce number of cards in hand
     5100: 1298:      state->handCount[currentPlayer]--;
     5100: 1298-block  0
        -: 1299:    }
        -: 1300:	
     5114: 1301:  return 0;
     5114: 1301-block  0
        -: 1302:}
        -: 1303:
function gainCard called 2036 returned 100% blocks executed 100%
     2036: 1304:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
     2036: 1304-block  0
        -: 1305:{
        -: 1306:  //Note: supplyPos is enum of choosen card
        -: 1307:	
        -: 1308:  //check if supply pile is empty (0) or card is not used in game (-1)
     2036: 1309:  if ( supplyCount(supplyPos, state) < 1 )
     2036: 1309-block  0
call    0 returned 100%
branch  1 taken 1% (fallthrough)
branch  2 taken 99%
        -: 1310:    {
        6: 1311:      return -1;
        6: 1311-block  0
        -: 1312:    }
        -: 1313:	
        -: 1314:  //added card for [whoseTurn] current player:
        -: 1315:  // toFlag = 0 : add to discard
        -: 1316:  // toFlag = 1 : add to deck
        -: 1317:  // toFlag = 2 : add to hand
        -: 1318:
     2030: 1319:  if (toFlag == 1)
     2030: 1319-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1320:    {
        6: 1321:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
        6: 1322:      state->deckCount[player]++;
        6: 1322-block  0
        -: 1323:    }
     2024: 1324:  else if (toFlag == 2)
     2024: 1324-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1325:    {
        6: 1326:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
        6: 1327:      state->handCount[player]++;
        6: 1327-block  0
        -: 1328:    }
        -: 1329:  else
        -: 1330:    {
     2018: 1331:      state->discard[player][ state->discardCount[player] ] = supplyPos;
     2018: 1332:      state->discardCount[player]++;
     2018: 1332-block  0
        -: 1333:    }
        -: 1334:	
        -: 1335:  //decrease number in supply pile
     2030: 1336:  state->supplyCount[supplyPos]--;
        -: 1337:	 
     2030: 1338:  return 0;
     2030: 1338-block  0
        -: 1339:}
        -: 1340:
function updateCoins called 5174 returned 100% blocks executed 100%
     5174: 1341:int updateCoins(int player, struct gameState *state, int bonus)
     5174: 1341-block  0
        -: 1342:{
        -: 1343:  int i;
        -: 1344:	
        -: 1345:  //reset coin count
     5174: 1346:  state->coins = 0;
        -: 1347:
        -: 1348:  //add coins for each Treasure card in player's hand
    31044: 1349:  for (i = 0; i < state->handCount[player]; i++)
     5174: 1349-block  0
    25870: 1349-block  1
    31044: 1349-block  2
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        -: 1350:    {
    25870: 1351:      if (state->hand[player][i] == copper)
    25870: 1351-block  0
branch  0 taken 70% (fallthrough)
branch  1 taken 30%
        -: 1352:	{
    18237: 1353:	  state->coins += 1;
    18237: 1353-block  0
        -: 1354:	}
     7633: 1355:      else if (state->hand[player][i] == silver)
     7633: 1355-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1356:	{
       30: 1357:	  state->coins += 2;
       30: 1357-block  0
        -: 1358:	}
     7603: 1359:      else if (state->hand[player][i] == gold)
     7603: 1359-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1360:	{
       30: 1361:	  state->coins += 3;
       30: 1361-block  0
        -: 1362:	}	
        -: 1363:    }	
        -: 1364:
        -: 1365:  //add bonus
     5174: 1366:  state->coins += bonus;
        -: 1367:
     5174: 1368:  return 0;
     5174: 1368-block  0
        -: 1369:}
        -: 1370:
        -: 1371:
        -: 1372:/************************************************
        -: 1373:Start of function unit tests
        -: 1374:*************************************************/
        -: 1375:
function testUpdateCoins called 0 returned 0% blocks executed 0%
    #####: 1376:int testUpdateCoins(int player, struct gameState *state, int bonus) {
    $$$$$: 1376-block  0
        -: 1377:  
    #####: 1378:}
        -: 1379:
        -: 1380:
        -: 1381://end of dominion.c
        -: 1382:
----------------- Random Testing Card: adventurer ----------------
Iteration 0
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 1
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 2
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 3
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 4
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 5
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 6
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 7
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 8
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 9
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 10
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 11
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 12
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 13
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 14
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 15
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 16
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 17
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 18
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 19
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 20
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 21
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 22
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 23
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 24
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 25
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 26
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 27
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 28
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 29
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 30
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 31
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 32
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 33
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 34
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 35
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 36
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 37
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 38
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 39
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 40
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 41
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 42
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 43
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 44
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 45
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 46
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 47
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 48
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 49
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 50
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 51
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 52
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 53
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 54
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 55
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 56
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 57
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 58
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 59
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 60
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 61
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 62
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 63
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 64
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 65
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 66
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 67
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 68
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 69
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 70
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 71
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 72
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 73
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 74
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 75
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 76
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 77
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 78
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 79
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 80
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 81
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 82
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 83
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 84
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 85
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 86
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 87
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 88
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 89
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 90
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 91
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 92
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 93
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 94
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 95
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 96
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 97
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 98
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 99
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 100
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 101
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 102
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 103
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 104
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 105
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 106
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 107
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 108
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 109
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 110
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 111
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 112
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 113
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 114
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 115
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 116
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 117
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 118
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 119
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 120
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 121
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 122
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 123
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 124
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 125
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 126
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 127
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 128
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 129
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 130
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 131
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 132
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 133
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 134
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 135
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 136
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 137
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 138
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 139
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 140
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 141
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 142
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 143
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 144
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 145
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 146
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 147
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 148
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 149
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 150
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 151
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 152
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 153
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 154
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 155
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 156
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 157
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 158
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 159
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 160
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 161
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 162
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 163
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 164
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 165
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 166
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 167
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 168
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 169
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 170
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 171
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 172
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 173
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 174
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 175
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 176
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 177
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 178
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 179
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 180
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 181
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 182
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 183
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 184
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 185
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 186
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 187
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 188
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 189
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 190
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 191
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 192
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 193
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 194
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 195
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 196
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 197
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 198
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 199
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 200
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 201
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 202
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 203
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 204
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 205
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 206
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 207
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 208
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 209
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 210
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 211
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 212
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 213
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 214
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 215
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 216
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 217
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 218
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 219
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 220
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 221
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 222
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 223
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 224
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 225
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 226
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 227
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 228
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 229
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 230
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 231
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 232
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 233
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 234
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 235
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 236
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 237
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 238
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 239
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 240
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 241
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 242
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 243
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 244
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 245
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 246
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 247
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 248
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 249
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 250
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 251
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 252
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 253
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 254
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 255
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 256
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 257
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 258
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 259
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 260
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 261
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 262
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 263
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 264
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 265
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 266
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 267
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 268
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 269
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 270
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 271
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 272
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 273
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 274
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 275
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 276
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 277
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 278
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 279
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 280
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 281
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 282
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 283
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 284
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 285
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 286
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 287
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 288
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 289
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 290
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 291
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 292
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 293
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 294
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 295
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 296
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 297
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 298
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 299
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 300
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 301
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 302
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 303
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 304
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 305
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 306
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 307
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 308
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 309
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 310
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 311
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 312
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 313
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 314
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 315
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 316
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 317
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 318
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 319
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 320
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 321
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 322
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 323
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 324
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 325
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 326
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 327
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 328
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 329
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 330
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 331
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 332
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 333
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 334
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 335
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 336
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 337
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 338
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 339
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 340
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 341
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 342
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 343
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 344
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 345
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 346
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 347
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 348
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 349
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 350
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 351
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 352
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 353
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 354
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 355
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 356
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 357
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 358
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 359
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 360
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 361
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 362
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 363
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 364
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 365
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 366
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 367
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 368
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 369
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 370
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 371
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 372
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 373
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 374
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 375
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 376
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 377
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 378
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 379
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 380
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 381
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 382
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 383
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 384
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 385
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 386
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 387
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 388
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 389
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 390
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 391
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 392
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 393
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 394
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 395
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 396
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 397
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 398
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 399
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 400
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 401
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 402
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 403
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 404
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 405
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 406
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 407
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 408
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 409
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 410
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 411
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 412
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 413
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 414
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 415
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 416
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 417
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 418
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 419
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 420
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 421
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 422
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 423
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 424
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 425
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 426
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 427
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 428
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 429
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 430
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 431
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 432
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 433
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 434
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 435
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 436
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 437
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 438
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 439
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 440
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 441
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 442
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 443
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 444
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 445
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 446
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 447
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 448
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 449
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 450
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 451
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 452
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 453
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 454
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 455
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 456
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 457
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 458
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 459
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 460
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 461
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 462
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 463
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 464
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 465
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 466
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 467
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 468
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 469
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 470
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 471
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 472
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 473
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 474
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 475
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 476
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 477
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 478
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 479
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 480
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 481
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 482
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 483
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 484
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 485
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 486
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 487
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 488
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 489
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 490
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 491
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 492
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 493
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 494
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 495
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 496
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 497
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 498
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 499
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 500
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 501
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 502
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 503
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 504
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 505
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 506
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 507
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 508
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 509
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 510
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 511
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 512
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 513
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 514
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 515
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 516
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 517
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 518
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 519
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 520
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 521
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 522
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 523
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 524
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 525
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 526
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 527
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 528
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 529
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 530
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 531
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 532
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 533
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 534
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 535
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 536
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 537
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 538
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 539
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 540
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 541
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 542
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 543
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 544
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 545
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 546
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 547
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 548
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 549
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 550
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 551
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 552
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 553
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 554
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 555
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 556
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 557
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 558
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 559
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 560
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 561
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 562
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 563
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 564
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 565
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 566
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 567
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 568
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 569
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 570
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 571
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 572
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 573
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 574
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 575
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 576
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 577
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 578
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 579
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 580
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 581
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 582
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 583
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 584
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 585
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 586
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 587
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 588
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 589
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 590
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 591
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 592
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 593
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 594
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 595
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 596
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 597
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 598
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 599
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 600
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 601
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 602
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 603
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 604
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 605
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 606
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 607
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 608
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 609
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 610
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 611
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 612
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 613
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 614
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 615
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 616
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 617
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 618
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 619
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 620
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 621
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 622
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 623
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 624
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 625
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 626
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 627
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 628
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 629
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 630
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 631
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 632
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 633
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 634
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 635
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 636
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 637
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 638
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 639
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 640
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 641
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 642
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 643
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 644
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 645
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 646
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 647
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 648
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 649
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 650
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 651
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 652
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 653
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 654
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 655
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 656
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 657
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 658
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 659
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 660
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 661
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 662
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 663
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 664
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 665
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 666
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 667
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 668
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 669
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 670
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 671
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 672
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 673
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 674
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 675
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 676
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 677
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 678
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 679
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 680
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 681
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 682
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 683
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 684
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 685
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 686
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 687
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 688
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 689
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 690
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 691
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 692
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 693
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 694
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 695
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 696
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 697
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 698
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 699
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 700
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 701
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 702
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 703
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 704
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 705
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 706
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 707
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 708
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 709
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 710
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 711
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 712
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 713
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 714
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 715
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 716
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 717
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 718
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 719
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 720
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 721
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 722
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 723
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 724
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 725
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 726
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 727
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 728
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 729
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 730
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 731
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 732
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 733
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 734
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 735
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 736
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 737
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 738
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 739
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 740
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 741
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 742
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 743
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 744
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 745
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 746
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 747
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 748
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 749
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 750
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 751
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 752
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 753
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 754
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 755
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 756
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 757
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 758
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 759
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 760
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 761
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 762
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 763
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 764
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 765
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 766
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 767
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 768
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 769
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 770
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 771
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 772
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 773
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 774
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 775
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 776
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 777
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 778
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 779
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 780
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 781
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 782
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 783
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 784
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 785
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 786
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 787
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 788
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 789
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 790
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 791
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 792
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 793
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 794
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 795
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 796
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 797
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 798
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 799
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 800
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 801
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 802
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 803
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 804
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 805
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 806
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 807
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 808
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 809
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 810
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 811
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 812
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 813
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 814
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 815
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 816
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 817
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 818
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 819
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 820
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 821
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 822
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 823
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 824
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 825
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 826
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 827
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 828
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 829
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 830
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 831
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 832
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 833
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 834
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 835
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 836
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 837
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 838
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 839
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 840
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 841
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 842
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 843
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 844
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 845
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 846
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 847
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 848
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 849
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 850
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 851
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 852
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 853
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 854
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 855
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 856
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 857
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 858
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 859
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 860
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 861
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 862
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 863
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 864
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 865
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 866
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 867
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 868
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 869
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 870
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 871
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 872
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 873
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 874
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 875
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 876
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 877
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 878
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 879
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 880
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 881
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 882
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 883
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 884
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 885
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 886
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 887
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 888
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 889
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 890
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 891
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 892
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 893
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 894
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 895
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 896
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 897
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 898
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 899
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 900
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 901
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 902
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 903
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 904
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 905
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 906
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 907
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 908
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 909
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 910
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 911
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 912
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 913
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 914
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 915
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 916
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 917
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 918
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 919
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 920
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 921
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 922
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 923
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 924
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 925
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 926
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 927
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 928
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 929
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 930
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 931
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 932
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 933
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 934
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 935
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 936
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 937
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 938
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 939
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 940
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 941
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 942
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 943
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 944
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 945
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 946
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 947
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 948
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 949
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 950
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 951
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 952
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 953
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 954
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 955
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 956
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 957
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 958
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 959
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 960
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 961
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 962
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 963
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 964
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 965
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 966
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 967
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 968
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 969
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 970
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 971
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 972
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 973
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 974
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 975
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 976
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 977
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 978
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 979
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 980
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 981
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 982
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 983
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 984
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 985
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 986
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 987
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 988
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 989
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 990
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 991
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 992
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 993
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 994
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 995
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 996
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 997
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 998
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 999
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
File 'dominion.c'
Lines executed:38.80% of 567
Branches executed:37.17% of 417
Taken at least once:29.98% of 417
Calls executed:33.00% of 100
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:63
        -:    0:Programs:13
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
function compare called 12500339 returned 100% blocks executed 100%
 12500339:    8:int compare(const void* a, const void* b) {
 12500339:    8-block  0
 12500339:    9:  if (*(int*)a > *(int*)b)
 12500339:    9-block  0
branch  0 taken 13% (fallthrough)
branch  1 taken 87%
  1671374:   10:    return 1;
  1671374:   10-block  0
 10828965:   11:  if (*(int*)a < *(int*)b)
 10828965:   11-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
    95281:   12:    return -1;
    95281:   12-block  0
 10733684:   13:  return 0;
 10733684:   13-block  0
        -:   14:}
        -:   15:
function newGame called 0 returned 0% blocks executed 0%
    #####:   16:struct gameState* newGame() {
    $$$$$:   16-block  0
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
    $$$$$:   18-block  0
        -:   19:}
        -:   20:
function kingdomCards called 0 returned 0% blocks executed 0%
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
    $$$$$:   21-block  0
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
    $$$$$:   34-block  0
        -:   35:}
        -:   36:
function initializeGame called 7175 returned 100% blocks executed 94%
     7175:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
     7175:   37-block  0
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;			
        -:   43:  //set up random number generator
     7175:   44:  SelectStream(1);
     7175:   44-block  0
call    0 returned 100%
     7175:   45:  PutSeed((long)randomSeed);
call    0 returned 100%
        -:   46:  
        -:   47:  //check number of players
     7175:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
     7175:   48-block  0
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:   49:    {
    #####:   50:      return -1;
    $$$$$:   50-block  0
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
     7175:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    78925:   57:  for (i = 0; i < 10; i++)
     7175:   57-block  0
    71750:   57-block  1
    78925:   57-block  2
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
        -:   58:    {
   789250:   59:      for (j = 0; j < 10; j++)
    71750:   59-block  0
   717500:   59-block  1
   789250:   59-block  2
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
        -:   60:        {
   717500:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
   717500:   61-block  0
branch  0 taken 90% (fallthrough)
branch  1 taken 10%
   645750:   61-block  1
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:   62:	    {
    #####:   63:	      return -1;
    $$$$$:   63-block  0
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
     7175:   73:  if (numPlayers == 2)
     7175:   73-block  0
branch  0 taken 35% (fallthrough)
branch  1 taken 65%
        -:   74:    {
     2484:   75:      state->supplyCount[curse] = 10;
     2484:   75-block  0
        -:   76:    }
     4691:   77:  else if (numPlayers == 3)
     4691:   77-block  0
branch  0 taken 49% (fallthrough)
branch  1 taken 51%
        -:   78:    {
     2314:   79:      state->supplyCount[curse] = 20;
     2314:   79-block  0
        -:   80:    }
        -:   81:  else
        -:   82:    {
     2377:   83:      state->supplyCount[curse] = 30;
     2377:   83-block  0
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
     7175:   87:  if (numPlayers == 2)
     7175:   87-block  0
branch  0 taken 35% (fallthrough)
branch  1 taken 65%
        -:   88:    {
     2484:   89:      state->supplyCount[estate] = 8;
     2484:   90:      state->supplyCount[duchy] = 8;
     2484:   91:      state->supplyCount[province] = 8;
     2484:   91-block  0
        -:   92:    }
        -:   93:  else
        -:   94:    {
     4691:   95:      state->supplyCount[estate] = 12;
     4691:   96:      state->supplyCount[duchy] = 12;
     4691:   97:      state->supplyCount[province] = 12;
     4691:   97-block  0
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
     7175:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
     7175:  102:  state->supplyCount[silver] = 40;
     7175:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
   150675:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
     7175:  106-block  0
   143500:  106-block  1
   150675:  106-block  2
branch  0 taken 95%
branch  1 taken 5% (fallthrough)
        -:  107:    {
  1183875:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
   143500:  108-block  0
  1040375:  108-block  1
  1183875:  108-block  2
branch  0 taken 94%
branch  1 taken 6% (fallthrough)
        -:  109:	{
  1112125:  110:	  if (kingdomCards[j] == i)
  1112125:  110-block  0
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    71750:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
    71750:  113-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
    71631:  113-block  1
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
        -:  114:		{
      476:  115:		  if (numPlayers == 2){ 
      238:  115-block  0
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
      238:  115-block  1
      238:  116:		    state->supplyCount[i] = 8; 
      238:  116-block  0
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
    $$$$$:  118-block  0
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    71512:  122:		  state->supplyCount[i] = 10;
    71512:  122-block  0
        -:  123:		}
    71750:  124:	      break;
    71750:  124-block  0
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
  1040375:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    28593:  138:  for (i = 0; i < numPlayers; i++)
     7175:  138-block  0
    21418:  138-block  1
    28593:  138-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  139:    {
    21418:  140:      state->deckCount[i] = 0;
    85672:  141:      for (j = 0; j < 3; j++)
    21418:  141-block  0
    64254:  141-block  1
    85672:  141-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  142:	{
    64254:  143:	  state->deck[i][j] = estate;
    64254:  144:	  state->deckCount[i]++;
        -:  145:	}
   171344:  146:      for (j = 3; j < 10; j++)
    21418:  146-block  0
   149926:  146-block  1
   171344:  146-block  2
branch  0 taken 88%
branch  1 taken 13% (fallthrough)
        -:  147:	{
   149926:  148:	  state->deck[i][j] = copper;	  state->deckCount[i]++;		
        -:  149:	}
        -:  150:    }
        -:  151:
        -:  152:  //shuffle player decks
    28593:  153:  for (i = 0; i < numPlayers; i++)
     7175:  153-block  0
    21418:  153-block  1
    28593:  153-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  154:    {
    21418:  155:      if ( shuffle(i, state) < 0 )
    21418:  155-block  0
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
        -:  156:	{
    #####:  157:	  return -1;
    $$$$$:  157-block  0
        -:  158:	}
        -:  159:    }
        -:  160:
        -:  161:  //draw player hands
    28593:  162:  for (i = 0; i < numPlayers; i++)
     7175:  162-block  0
    21418:  162-block  1
    28593:  162-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  163:    {  
        -:  164:      //initialize hand size to zero
    21418:  165:      state->handCount[i] = 0;
    21418:  166:      state->discardCount[i] = 0;
        -:  167:      //draw 5 cards
        -:  168:      // for (j = 0; j < 5; j++)
        -:  169:      //	{
        -:  170:      //	  drawCard(i, state);
        -:  171:      //	}
        -:  172:    }
        -:  173:  
        -:  174:  //set embargo tokens to 0 for all supply piles
   200900:  175:  for (i = 0; i <= treasure_map; i++)
     7175:  175-block  0
   193725:  175-block  1
   200900:  175-block  2
branch  0 taken 96%
branch  1 taken 4% (fallthrough)
        -:  176:    {
   193725:  177:      state->embargoTokens[i] = 0;
        -:  178:    }
        -:  179:
        -:  180:  //initialize first player's turn
     7175:  181:  state->outpostPlayed = 0;
     7175:  182:  state->phase = 0;
     7175:  183:  state->numActions = 1;
     7175:  184:  state->numBuys = 1;
     7175:  185:  state->playedCardCount = 0;
     7175:  186:  state->whoseTurn = 0;
     7175:  187:  state->handCount[state->whoseTurn] = 0;
        -:  188:  //int it; move to top
        -:  189:
        -:  190:  //Moved draw cards to here, only drawing at the start of a turn
    43050:  191:  for (it = 0; it < 5; it++){
     7175:  191-block  0
    43050:  191-block  1
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
    35875:  192:    drawCard(state->whoseTurn, state);
    35875:  192-block  0
call    0 returned 100%
        -:  193:  }
        -:  194:
     7175:  195:  updateCoins(state->whoseTurn, state, 0);
     7175:  195-block  0
call    0 returned 100%
        -:  196:
     7175:  197:  return 0;
        -:  198:}
        -:  199:
function shuffle called 2407273 returned 100% blocks executed 100%
  2407273:  200:int shuffle(int player, struct gameState *state) {
  2407273:  200-block  0
        -:  201: 
        -:  202:
        -:  203:  int newDeck[MAX_DECK];
  2407273:  204:  int newDeckPos = 0;
        -:  205:  int card;
        -:  206:  int i;
        -:  207:
  2407273:  208:  if (state->deckCount[player] < 1)
  2407273:  208-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
  2375319:  209:    return -1;
  2375319:  209-block  0
    31954:  210:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare); 
    31954:  210-block  0
call    0 returned 100%
        -:  211:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  212:
  2901042:  213:  while (state->deckCount[player] > 0) {
  2901042:  213-block  0
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
  2869088:  214:    card = floor(Random() * state->deckCount[player]);
  2869088:  214-block  0
call    0 returned 100%
  2869088:  215:    newDeck[newDeckPos] = state->deck[player][card];
  2869088:  216:    newDeckPos++;
225066853:  217:    for (i = card; i < state->deckCount[player]-1; i++) {
222197765:  217-block  0
225066853:  217-block  1
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
222197765:  218:      state->deck[player][i] = state->deck[player][i+1];
        -:  219:    }
  2869088:  220:    state->deckCount[player]--;
  2869088:  220-block  0
        -:  221:  }
  2901042:  222:  for (i = 0; i < newDeckPos; i++) {
    31954:  222-block  0
  2869088:  222-block  1
  2901042:  222-block  2
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
  2869088:  223:    state->deck[player][i] = newDeck[i];
  2869088:  224:    state->deckCount[player]++;
        -:  225:  }
        -:  226:
  2407273:  227:  return 0;
    31954:  227-block  0
  2407273:  227-block  1
        -:  228:}
        -:  229:
function playCard called 0 returned 0% blocks executed 0%
    #####:  230:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state) 
    $$$$$:  230-block  0
        -:  231:{	
        -:  232:  int card;
    #####:  233:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  234:
        -:  235:  //check if it is the right phase
    #####:  236:  if (state->phase != 0)
    $$$$$:  236-block  0
branch  0 never executed
branch  1 never executed
        -:  237:    {
    #####:  238:      return -1;
    $$$$$:  238-block  0
        -:  239:    }
        -:  240:	
        -:  241:  //check if player has enough actions
    #####:  242:  if ( state->numActions < 1 )
    $$$$$:  242-block  0
branch  0 never executed
branch  1 never executed
        -:  243:    {
    #####:  244:      return -1;
    $$$$$:  244-block  0
        -:  245:    }
        -:  246:	
        -:  247:  //get card played
    #####:  248:  card = handCard(handPos, state);
    $$$$$:  248-block  0
call    0 never executed
        -:  249:	
        -:  250:  //check if selected card is an action
    #####:  251:  if ( card < adventurer || card > treasure_map )
branch  0 never executed
branch  1 never executed
    $$$$$:  251-block  0
branch  2 never executed
branch  3 never executed
        -:  252:    {
    #####:  253:      return -1;
    $$$$$:  253-block  0
        -:  254:    }
        -:  255:	
        -:  256:  //play card
    #####:  257:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
    $$$$$:  257-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  258:    {
    #####:  259:      return -1;
    $$$$$:  259-block  0
        -:  260:    }
        -:  261:	
        -:  262:  //reduce number of actions
    #####:  263:  state->numActions--;
        -:  264:
        -:  265:  //update coins (Treasure cards may be added with card draws)
    #####:  266:  updateCoins(state->whoseTurn, state, coin_bonus);
    $$$$$:  266-block  0
call    0 never executed
        -:  267:	
    #####:  268:  return 0;
    $$$$$:  268-block  0
        -:  269:}
        -:  270:
function buyCard called 0 returned 0% blocks executed 0%
    #####:  271:int buyCard(int supplyPos, struct gameState *state) {
    $$$$$:  271-block  0
    $$$$$:  271-block  1
        -:  272:  int who;
        -:  273:  if (DEBUG){
        -:  274:    printf("Entering buyCard...\n");
        -:  275:  }
        -:  276:
        -:  277:  // I don't know what to do about the phase thing.
        -:  278:
    #####:  279:  who = state->whoseTurn;
        -:  280:
    #####:  281:  if (state->numBuys < 1){
    $$$$$:  281-block  0
branch  0 never executed
branch  1 never executed
        -:  282:    if (DEBUG)
        -:  283:      printf("You do not have any buys left\n");
    #####:  284:    return -1;
    $$$$$:  284-block  0
    #####:  285:  } else if (supplyCount(supplyPos, state) <1){
    $$$$$:  285-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  286:    if (DEBUG)
        -:  287:      printf("There are not any of that type of card left\n");
    #####:  288:    return -1;
    $$$$$:  288-block  0
    #####:  289:  } else if (state->coins < getCost(supplyPos)){
    $$$$$:  289-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  290:    if (DEBUG) 
        -:  291:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  292:    return -1;
    $$$$$:  292-block  0
        -:  293:  } else {
    #####:  294:    state->phase=1;
        -:  295:    //state->supplyCount[supplyPos]--;
    #####:  296:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
    $$$$$:  296-block  0
call    0 never executed
        -:  297:  
    #####:  298:    state->coins = (state->coins) - (getCost(supplyPos));
call    0 never executed
    #####:  299:    state->numBuys--;
        -:  300:    if (DEBUG)
        -:  301:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  302:  }
        -:  303:
        -:  304:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  305:  //state->discardCount[who]++;
        -:  306:    
    #####:  307:  return 0;
    $$$$$:  307-block  0
        -:  308:}
        -:  309:
function numHandCards called 0 returned 0% blocks executed 0%
    #####:  310:int numHandCards(struct gameState *state) {
    $$$$$:  310-block  0
    #####:  311:  return state->handCount[ whoseTurn(state) ];
    $$$$$:  311-block  0
call    0 never executed
        -:  312:}
        -:  313:
function handCard called 0 returned 0% blocks executed 0%
    #####:  314:int handCard(int handPos, struct gameState *state) {
    $$$$$:  314-block  0
    #####:  315:  int currentPlayer = whoseTurn(state);
    $$$$$:  315-block  0
call    0 never executed
    #####:  316:  return state->hand[currentPlayer][handPos];
        -:  317:}
        -:  318:
function supplyCount called 9070 returned 100% blocks executed 100%
     9070:  319:int supplyCount(int card, struct gameState *state) {
     9070:  319-block  0
     9070:  320:  return state->supplyCount[card];
     9070:  320-block  0
        -:  321:}
        -:  322:
function fullDeckCount called 0 returned 0% blocks executed 0%
    #####:  323:int fullDeckCount(int player, int card, struct gameState *state) {
    $$$$$:  323-block  0
        -:  324:  int i;
    #####:  325:  int count = 0;
        -:  326:
    #####:  327:  for (i = 0; i < state->deckCount[player]; i++)
    $$$$$:  327-block  0
    $$$$$:  327-block  1
    $$$$$:  327-block  2
branch  0 never executed
branch  1 never executed
        -:  328:    {
    #####:  329:      if (state->deck[player][i] == card) count++;
    $$$$$:  329-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  329-block  1
        -:  330:    }
        -:  331:
    #####:  332:  for (i = 0; i < state->handCount[player]; i++)
    $$$$$:  332-block  0
    $$$$$:  332-block  1
    $$$$$:  332-block  2
branch  0 never executed
branch  1 never executed
        -:  333:    {
    #####:  334:      if (state->hand[player][i] == card) count++;
    $$$$$:  334-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  334-block  1
        -:  335:    }
        -:  336:
    #####:  337:  for (i = 0; i < state->discardCount[player]; i++)
    $$$$$:  337-block  0
    $$$$$:  337-block  1
    $$$$$:  337-block  2
branch  0 never executed
branch  1 never executed
        -:  338:    {
    #####:  339:      if (state->discard[player][i] == card) count++;
    $$$$$:  339-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  339-block  1
        -:  340:    }
        -:  341:
    #####:  342:  return count;
    $$$$$:  342-block  0
        -:  343:}
        -:  344:
function whoseTurn called 14098 returned 100% blocks executed 100%
    14098:  345:int whoseTurn(struct gameState *state) {
    14098:  345-block  0
    14098:  346:  return state->whoseTurn;
    14098:  346-block  0
        -:  347:}
        -:  348:
function endTurn called 0 returned 0% blocks executed 0%
    #####:  349:int endTurn(struct gameState *state) {
    $$$$$:  349-block  0
        -:  350:  int k;
        -:  351:  int i;
    #####:  352:  int currentPlayer = whoseTurn(state);
    $$$$$:  352-block  0
call    0 never executed
        -:  353:  
        -:  354:  //Discard hand
    #####:  355:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    $$$$$:  355-block  0
    $$$$$:  355-block  1
branch  0 never executed
branch  1 never executed
    #####:  356:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  357:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  358:  }
    #####:  359:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  360:    
        -:  361:  //Code for determining the player
    #####:  362:  if (currentPlayer < (state->numPlayers - 1)){ 
    $$$$$:  362-block  0
branch  0 never executed
branch  1 never executed
    #####:  363:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
    $$$$$:  363-block  0
        -:  364:  }
        -:  365:  else{
    #####:  366:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
    $$$$$:  366-block  0
        -:  367:  }
        -:  368:
    #####:  369:  state->outpostPlayed = 0;
    #####:  370:  state->phase = 0;
    #####:  371:  state->numActions = 1;
    #####:  372:  state->coins = 0;
    #####:  373:  state->numBuys = 1;
    #####:  374:  state->playedCardCount = 0;
    #####:  375:  state->handCount[state->whoseTurn] = 0;
        -:  376:
        -:  377:  //int k; move to top
        -:  378:  //Next player draws hand
    #####:  379:  for (k = 0; k < 5; k++){
    $$$$$:  379-block  0
    $$$$$:  379-block  1
branch  0 never executed
branch  1 never executed
    #####:  380:    drawCard(state->whoseTurn, state);//Draw a card
    $$$$$:  380-block  0
call    0 never executed
        -:  381:  }
        -:  382:
        -:  383:  //Update money
    #####:  384:  updateCoins(state->whoseTurn, state , 0);
    $$$$$:  384-block  0
call    0 never executed
        -:  385:
    #####:  386:  return 0;
        -:  387:}
        -:  388:
function isGameOver called 0 returned 0% blocks executed 0%
    #####:  389:int isGameOver(struct gameState *state) {
    $$$$$:  389-block  0
        -:  390:  int i;
        -:  391:  int j;
        -:  392:	
        -:  393:  //if stack of Province cards is empty, the game ends
    #####:  394:  if (state->supplyCount[province] == 0)
    $$$$$:  394-block  0
branch  0 never executed
branch  1 never executed
        -:  395:    {
    #####:  396:      return 1;
    $$$$$:  396-block  0
        -:  397:    }
        -:  398:
        -:  399:  //if three supply pile are at 0, the game ends
    #####:  400:  j = 0;
    #####:  401:  for (i = 0; i < 25; i++)
    $$$$$:  401-block  0
    $$$$$:  401-block  1
    $$$$$:  401-block  2
branch  0 never executed
branch  1 never executed
        -:  402:    {
    #####:  403:      if (state->supplyCount[i] == 0)
    $$$$$:  403-block  0
branch  0 never executed
branch  1 never executed
        -:  404:	{
    #####:  405:	  j++;
    $$$$$:  405-block  0
        -:  406:	}
        -:  407:    }
    #####:  408:  if ( j >= 3)
    $$$$$:  408-block  0
branch  0 never executed
branch  1 never executed
        -:  409:    {
    #####:  410:      return 1;
    $$$$$:  410-block  0
        -:  411:    }
        -:  412:
    #####:  413:  return 0;
    $$$$$:  413-block  0
        -:  414:}
        -:  415:
function scoreFor called 35 returned 100% blocks executed 38%
       35:  416:int scoreFor (int player, struct gameState *state) {
       35:  416-block  0
        -:  417:
        -:  418:  int i;
       35:  419:  int score = 0;
        -:  420:  //score from hand
      210:  421:  for (i = 0; i < state->handCount[player]; i++)
       35:  421-block  0
      175:  421-block  1
      210:  421-block  2
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        -:  422:    {
      175:  423:      if (state->hand[player][i] == curse) { score = score - 1; };
      175:  423-block  0
branch  0 taken 20% (fallthrough)
branch  1 taken 80%
       35:  423-block  1
      175:  424:      if (state->hand[player][i] == estate) { score = score + 1; };
      175:  424-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        7:  424-block  1
      175:  425:      if (state->hand[player][i] == duchy) { score = score + 3; };
      175:  425-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        7:  425-block  1
      175:  426:      if (state->hand[player][i] == province) { score = score + 6; };
      175:  426-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        7:  426-block  1
      175:  427:      if (state->hand[player][i] == great_hall) { score = score + 1; };
      175:  427-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    $$$$$:  427-block  1
      175:  428:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
      175:  428-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    $$$$$:  428-block  1
call    2 never executed
        -:  429:    }
        -:  430:
        -:  431:  //score from discard
       35:  432:  for (i = 0; i < state->discardCount[player]; i++)
       35:  432-block  0
    $$$$$:  432-block  1
       35:  432-block  2
branch  0 taken 0%
branch  1 taken 100% (fallthrough)
        -:  433:    {
    #####:  434:      if (state->discard[player][i] == curse) { score = score - 1; };
    $$$$$:  434-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  434-block  1
    #####:  435:      if (state->discard[player][i] == estate) { score = score + 1; };
    $$$$$:  435-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  435-block  1
    #####:  436:      if (state->discard[player][i] == duchy) { score = score + 3; };
    $$$$$:  436-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  436-block  1
    #####:  437:      if (state->discard[player][i] == province) { score = score + 6; };
    $$$$$:  437-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  437-block  1
    #####:  438:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    $$$$$:  438-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  438-block  1
    #####:  439:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
    $$$$$:  439-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  439-block  1
call    2 never executed
        -:  440:    }
        -:  441:
        -:  442:  //score from deck
       35:  443:  for (i = 0; i < state->discardCount[player]; i++)
       35:  443-block  0
    $$$$$:  443-block  1
       35:  443-block  2
branch  0 taken 0%
branch  1 taken 100% (fallthrough)
        -:  444:    {
    #####:  445:      if (state->deck[player][i] == curse) { score = score - 1; };
    $$$$$:  445-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  445-block  1
    #####:  446:      if (state->deck[player][i] == estate) { score = score + 1; };
    $$$$$:  446-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  446-block  1
    #####:  447:      if (state->deck[player][i] == duchy) { score = score + 3; };
    $$$$$:  447-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  447-block  1
    #####:  448:      if (state->deck[player][i] == province) { score = score + 6; };
    $$$$$:  448-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  448-block  1
    #####:  449:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    $$$$$:  449-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  449-block  1
    #####:  450:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
    $$$$$:  450-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  450-block  1
call    2 never executed
        -:  451:    }
        -:  452:
       35:  453:  return score;
       35:  453-block  0
        -:  454:}
        -:  455:
function getWinners called 0 returned 0% blocks executed 0%
    #####:  456:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
    $$$$$:  456-block  0
        -:  457:  int i;	
        -:  458:  int j;
        -:  459:  int highScore;
        -:  460:  int currentPlayer;
        -:  461:
        -:  462:  //get score for each player
    #####:  463:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  463-block  0
    $$$$$:  463-block  1
    $$$$$:  463-block  2
branch  0 never executed
branch  1 never executed
        -:  464:    {
        -:  465:      //set unused player scores to -9999
    #####:  466:      if (i >= state->numPlayers)
    $$$$$:  466-block  0
branch  0 never executed
branch  1 never executed
        -:  467:	{
    #####:  468:	  players[i] = -9999;
    $$$$$:  468-block  0
        -:  469:	}
        -:  470:      else
        -:  471:	{
    #####:  472:	  players[i] = scoreFor (i, state);
    $$$$$:  472-block  0
call    0 never executed
        -:  473:	}
        -:  474:    }
        -:  475:
        -:  476:  //find highest score
    #####:  477:  j = 0;
    #####:  478:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  478-block  0
    $$$$$:  478-block  1
    $$$$$:  478-block  2
branch  0 never executed
branch  1 never executed
        -:  479:    {
    #####:  480:      if (players[i] > players[j])
    $$$$$:  480-block  0
branch  0 never executed
branch  1 never executed
        -:  481:	{
    #####:  482:	  j = i;
    $$$$$:  482-block  0
        -:  483:	}
        -:  484:    }
    #####:  485:  highScore = players[j];
        -:  486:
        -:  487:  //add 1 to players who had less turns
    #####:  488:  currentPlayer = whoseTurn(state);
    $$$$$:  488-block  0
call    0 never executed
    #####:  489:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  489-block  0
    $$$$$:  489-block  1
branch  0 never executed
branch  1 never executed
        -:  490:    {
    #####:  491:      if ( players[i] == highScore && i > currentPlayer )
    $$$$$:  491-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  491-block  1
branch  2 never executed
branch  3 never executed
        -:  492:	{
    #####:  493:	  players[i]++;
    $$$$$:  493-block  0
        -:  494:	}
        -:  495:    }
        -:  496:
        -:  497:  //find new highest score
    #####:  498:  j = 0;
    #####:  499:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  499-block  0
    $$$$$:  499-block  1
    $$$$$:  499-block  2
branch  0 never executed
branch  1 never executed
        -:  500:    {
    #####:  501:      if ( players[i] > players[j] )
    $$$$$:  501-block  0
branch  0 never executed
branch  1 never executed
        -:  502:	{
    #####:  503:	  j = i;
    $$$$$:  503-block  0
        -:  504:	}
        -:  505:    }
    #####:  506:  highScore = players[j];
        -:  507:
        -:  508:  //set winners in array to 1 and rest to 0
    #####:  509:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  509-block  0
    $$$$$:  509-block  1
    $$$$$:  509-block  2
branch  0 never executed
branch  1 never executed
        -:  510:    {
    #####:  511:      if ( players[i] == highScore )
    $$$$$:  511-block  0
branch  0 never executed
branch  1 never executed
        -:  512:	{
    #####:  513:	  players[i] = 1;
    $$$$$:  513-block  0
        -:  514:	}
        -:  515:      else
        -:  516:	{
    #####:  517:	  players[i] = 0;
    $$$$$:  517-block  0
        -:  518:	}
        -:  519:    }
        -:  520:
    #####:  521:  return 0;
    $$$$$:  521-block  0
        -:  522:}
        -:  523:
function drawCard called 4293022 returned 100% blocks executed 100%
  4293022:  524:int drawCard(int player, struct gameState *state)
  4293022:  524-block  0
        -:  525:{	int count;
        -:  526:  int deckCounter;
  4293022:  527:  if (state->deckCount[player] <= 0){//Deck is empty
  4293022:  527-block  0
branch  0 taken 28% (fallthrough)
branch  1 taken 72%
        -:  528:    
        -:  529:    //Step 1 Shuffle the discard pile back into a deck
        -:  530:    int i;
        -:  531:    //Move discard to deck
  3852359:  532:    for (i = 0; i < state->discardCount[player];i++){
  1197451:  532-block  0
  2654908:  532-block  1
  3852359:  532-block  2
branch  0 taken 69%
branch  1 taken 31% (fallthrough)
  2654908:  533:      state->deck[player][i] = state->discard[player][i];
  2654908:  534:      state->discard[player][i] = -1;
        -:  535:    }
        -:  536:
  1197451:  537:    state->deckCount[player] = state->discardCount[player];
  1197451:  538:    state->discardCount[player] = 0;//Reset discard
        -:  539:
        -:  540:    //Shufffle the deck
  1197451:  541:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
  1197451:  541-block  0
call    0 returned 100%
        -:  542:   
        -:  543:    if (DEBUG){//Debug statements
        -:  544:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  545:    }
        -:  546:    
  1197451:  547:    state->discardCount[player] = 0;
        -:  548:
        -:  549:    //Step 2 Draw Card
  1197451:  550:    count = state->handCount[player];//Get current player's hand count
        -:  551:    
        -:  552:    if (DEBUG){//Debug statements
        -:  553:      printf("Current hand count: %d\n", count);
        -:  554:    }
        -:  555:    
  1197451:  556:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  557:
  1197451:  558:    if (deckCounter == 0)
  1197451:  558-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
  1186915:  559:      return -1;
  1186915:  559-block  0
        -:  560:
    10536:  561:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    10536:  562:    state->deckCount[player]--;
    10536:  563:    state->handCount[player]++;//Increment hand count
    10536:  563-block  0
        -:  564:  }
        -:  565:
        -:  566:  else{
  3095571:  567:    int count = state->handCount[player];//Get current hand count for player
  3095571:  567-block  0
        -:  568:    int deckCounter;
        -:  569:    if (DEBUG){//Debug statements
        -:  570:      printf("Current hand count: %d\n", count);
        -:  571:    }
        -:  572:
  3095571:  573:    deckCounter = state->deckCount[player];//Create holder for the deck count
  3095571:  574:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
  3095571:  575:    state->deckCount[player]--;
  3095571:  576:    state->handCount[player]++;//Increment hand count
  3095571:  576-block  0
        -:  577:  }
        -:  578:
  3106107:  579:  return 0;
  3106107:  579-block  0
        -:  580:}
        -:  581:
function getCost called 0 returned 0% blocks executed 0%
    #####:  582:int getCost(int cardNumber)
    $$$$$:  582-block  0
        -:  583:{
    #####:  584:  switch( cardNumber ) 
    $$$$$:  584-block  0
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
branch 18 never executed
branch 19 never executed
branch 20 never executed
branch 21 never executed
branch 22 never executed
branch 23 never executed
branch 24 never executed
branch 25 never executed
branch 26 never executed
branch 27 never executed
        -:  585:    {
        -:  586:    case curse:
    #####:  587:      return 0;
    $$$$$:  587-block  0
        -:  588:    case estate:
    #####:  589:      return 2;
    $$$$$:  589-block  0
        -:  590:    case duchy:
    #####:  591:      return 5;
    $$$$$:  591-block  0
        -:  592:    case province:
    #####:  593:      return 8;
    $$$$$:  593-block  0
        -:  594:    case copper:
    #####:  595:      return 0;
    $$$$$:  595-block  0
        -:  596:    case silver:
    #####:  597:      return 3;
    $$$$$:  597-block  0
        -:  598:    case gold:
    #####:  599:      return 6;
    $$$$$:  599-block  0
        -:  600:    case adventurer:
    #####:  601:      return 6;
    $$$$$:  601-block  0
        -:  602:    case council_room:
    #####:  603:      return 5;
    $$$$$:  603-block  0
        -:  604:    case feast:
    #####:  605:      return 4;
    $$$$$:  605-block  0
        -:  606:    case gardens:
    #####:  607:      return 4;
    $$$$$:  607-block  0
        -:  608:    case mine:
    #####:  609:      return 5;
    $$$$$:  609-block  0
        -:  610:    case remodel:
    #####:  611:      return 4;
    $$$$$:  611-block  0
        -:  612:    case smithy:
    #####:  613:      return 4;
    $$$$$:  613-block  0
        -:  614:    case village:
    #####:  615:      return 3;
    $$$$$:  615-block  0
        -:  616:    case baron:
    #####:  617:      return 4;
    $$$$$:  617-block  0
        -:  618:    case great_hall:
    #####:  619:      return 3;
    $$$$$:  619-block  0
        -:  620:    case minion:
    #####:  621:      return 5;
    $$$$$:  621-block  0
        -:  622:    case steward:
    #####:  623:      return 3;
    $$$$$:  623-block  0
        -:  624:    case tribute:
    #####:  625:      return 5;
    $$$$$:  625-block  0
        -:  626:    case ambassador:
    #####:  627:      return 3;
    $$$$$:  627-block  0
        -:  628:    case cutpurse:
    #####:  629:      return 4;
    $$$$$:  629-block  0
        -:  630:    case embargo: 
    #####:  631:      return 2;
    $$$$$:  631-block  0
        -:  632:    case outpost:
    #####:  633:      return 5;
    $$$$$:  633-block  0
        -:  634:    case salvager:
    #####:  635:      return 4;
    $$$$$:  635-block  0
        -:  636:    case sea_hag:
    #####:  637:      return 4;
    $$$$$:  637-block  0
        -:  638:    case treasure_map:
    #####:  639:      return 4;
    $$$$$:  639-block  0
        -:  640:    }
        -:  641:	
    #####:  642:  return -1;
    $$$$$:  642-block  0
        -:  643:}
        -:  644:
        -:  645:/****************************************************************************************************
        -:  646:* Start of card functions
        -:  647:*****************************************************************************************************/
        -:  648:
function playSmithy called 7 returned 100% blocks executed 100%
        7:  649:int playSmithy(struct gameState *state, int handPos) {
        7:  649-block  0
        -:  650:	//+3 Cards
        7:  651:	int currentPlayer = whoseTurn(state);
        7:  651-block  0
call    0 returned 100%
        -:  652:	int i;
       35:  653:    for (i = 0; i <= 3; i++)
       35:  653-block  0
branch  0 taken 80%
branch  1 taken 20% (fallthrough)
        -:  654:	{
       28:  655:		drawCard(currentPlayer, state);
       28:  655-block  0
call    0 returned 100%
        -:  656:	}
        -:  657:			
        -:  658:	//discard card from hand
        7:  659:	discardCard(handPos, currentPlayer, state, 1);
        7:  659-block  0
call    0 returned 100%
        7:  660:	return 0;
        -:  661:}
        -:  662:
function playAdventurer called 4021 returned 100% blocks executed 100%
     4021:  663:int playAdventurer(struct gameState *state) {
     4021:  663-block  0
     4021:  664:	int currentPlayer = whoseTurn(state);
     4021:  664-block  0
call    0 returned 100%
     4021:  665:	int drawntreasure =0;
        -:  666:	int cardDrawn;
        -:  667:	int temphand[MAX_HAND]; 
     4021:  668:	int z = 0;
        -:  669:
  4233953:  670:	while(drawntreasure<2){
  4233953:  670-block  0
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
  4229932:  671:		if (state->deckCount[currentPlayer] <1){//if the deck is empty we need to shuffle discard and add to deck
  4229932:  671-block  0
branch  0 taken 28% (fallthrough)
branch  1 taken 72%
  1188404:  672:		  shuffle(currentPlayer, state);
  1188404:  672-block  0
call    0 returned 100%
        -:  673:		}
  4229932:  674:		drawCard(currentPlayer, state);
  4229932:  674-block  0
call    0 returned 100%
  4229932:  675:		cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-2];//top card of hand is most recently drawn card.
  4229932:  676:		if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold) {
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
  4222022:  676-block  0
branch  2 taken 99% (fallthrough)
branch  3 taken 1%
  4221934:  676-block  1
branch  4 taken 1% (fallthrough)
branch  5 taken 99%
     8042:  677:		  drawntreasure++;
     8042:  677-block  0
        -:  678:    }
        -:  679:		else{
  4221890:  680:      z++;
  4221890:  681:		  temphand[z]=cardDrawn;
  4221890:  682:		  state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
  4221890:  682-block  0
        -:  683:    }
        -:  684:  }
  1028365:  685:  while(z>=0){
     4021:  685-block  0
  1028365:  685-block  1
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
  1024344:  686:    state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
  1024344:  687:    z=z-1;
  1024344:  687-block  0
        -:  688:  }
     4021:  689:  return 0;
     4021:  689-block  0
        -:  690:}
        -:  691:
function playMine called 0 returned 0% blocks executed 0%
    #####:  692:int playMine(struct gameState *state, int choice1, int choice2, int handPos) {
    $$$$$:  692-block  0
    #####:  693:	int currentPlayer = whoseTurn(state);
    $$$$$:  693-block  0
call    0 never executed
        -:  694:	int i, j;
    #####:  695:	int z = 0;
    #####:  696:	j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  697:
    #####:  698:	if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold)
branch  0 never executed
branch  1 never executed
    $$$$$:  698-block  0
branch  2 never executed
branch  3 never executed
        -:  699:	{
    #####:  700:	  return -1;
    $$$$$:  700-block  0
        -:  701:	}
        -:  702:
    #####:  703:	if (choice2 > z || choice2 < curse)
    $$$$$:  703-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  703-block  1
branch  2 never executed
branch  3 never executed
        -:  704:	{
    #####:  705:		return -1;
    $$$$$:  705-block  0
        -:  706:	}
        -:  707:
    #####:  708:	if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) )
    $$$$$:  708-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  709:	{
    #####:  710:		return -1;
    $$$$$:  710-block  0
        -:  711:	}
        -:  712:
    #####:  713:	gainCard(choice1, state, 2, currentPlayer);
    $$$$$:  713-block  0
call    0 never executed
        -:  714:
        -:  715:	//discard card from hand
    #####:  716:	discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  717:
        -:  718:	//discard trashed card
    #####:  719:	for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$:  719-block  0
    $$$$$:  719-block  1
branch  0 never executed
branch  1 never executed
        -:  720:	{
    #####:  721:		if (state->hand[currentPlayer][i] == j)
    $$$$$:  721-block  0
branch  0 never executed
branch  1 never executed
        -:  722:		{
    #####:  723:			discardCard(i, currentPlayer, state, 0);			
    $$$$$:  723-block  0
call    0 never executed
    #####:  724:			break;
        -:  725:		}
        -:  726:	}
        -:  727:		
    #####:  728:	return 0;
    $$$$$:  728-block  0
        -:  729:}
        -:  730:
function playVillage called 3014 returned 100% blocks executed 100%
     3014:  731:int playVillage(struct gameState *state, int handPos) {
     3014:  731-block  0
     3014:  732:	int currentPlayer = whoseTurn(state);
     3014:  732-block  0
call    0 returned 100%
        -:  733:
        -:  734:	//+1 Card
     3014:  735:	drawCard(currentPlayer, state);
call    0 returned 100%
        -:  736:
        -:  737:	//+2 Actions
     3014:  738:	state->numActions = state->numActions + 2;
        -:  739:
        -:  740:	//discard played card from hand
     3014:  741:	discardCard(handPos, currentPlayer, state, 0);
call    0 returned 100%
     3014:  742:	return 0;
        -:  743:}
        -:  744:
function playRemodel called 0 returned 0% blocks executed 0%
    #####:  745:int playRemodel(struct gameState *state, int choice1, int choice2, int handPos) {
    $$$$$:  745-block  0
        -:  746:	int i, j;
    #####:  747:	int currentPlayer = whoseTurn(state);
    $$$$$:  747-block  0
call    0 never executed
        -:  748: 
        -:  749:
    #####:  750:	j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  751:
    #####:  752:	if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  753:	{
    #####:  754:		return -1;
    $$$$$:  754-block  0
        -:  755:	}
        -:  756:
    #####:  757:	gainCard(choice2, state, 0, currentPlayer);
    $$$$$:  757-block  0
call    0 never executed
        -:  758:
        -:  759:	//discard card from hand
    #####:  760:	discardCard(handPos+1, currentPlayer, state, 0);
call    0 never executed
        -:  761:
        -:  762:	//discard trashed card
    #####:  763:	for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$:  763-block  0
    $$$$$:  763-block  1
branch  0 never executed
branch  1 never executed
        -:  764:		{
    #####:  765:		if (state->hand[currentPlayer][i] == j)
    $$$$$:  765-block  0
branch  0 never executed
branch  1 never executed
        -:  766:		{
    #####:  767:			discardCard(i+1, currentPlayer, state, 0);			
    $$$$$:  767-block  0
call    0 never executed
    #####:  768:			break;
        -:  769:		}
        -:  770:	}
        -:  771:
    #####:  772:	return 0;
    $$$$$:  772-block  0
        -:  773:}
        -:  774:
function cardEffect called 7056 returned 100% blocks executed 17%
     7056:  775:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
     7056:  775-block  0
        -:  776:{
        -:  777:  int i;
        -:  778:  int j;
        -:  779:  int k;
        -:  780:  int x;
        -:  781:  int index;
     7056:  782:  int currentPlayer = whoseTurn(state);
     7056:  782-block  0
call    0 returned 100%
     7056:  783:  int nextPlayer = currentPlayer + 1;
        -:  784:
     7056:  785:  int tributeRevealedCards[2] = {-1, -1};
        -:  786:  int temphand[MAX_HAND];// moved above the if statement
     7056:  787:  int drawntreasure=0;
        -:  788:  int cardDrawn;
     7056:  789:  int z = 0;// this is the counter for the temp hand
     7056:  790:  if (nextPlayer > (state->numPlayers - 1)){
branch  0 taken 35% (fallthrough)
branch  1 taken 65%
     2485:  791:    nextPlayer = 0;
     2485:  791-block  0
        -:  792:  }
        -:  793:  
        -:  794:	
        -:  795:  //uses switch to select card and perform actions
     7056:  796:  switch( card ) 
     7056:  796-block  0
branch  0 taken 57%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
branch  5 taken 0%
branch  6 taken 1%
branch  7 taken 43%
branch  8 taken 0%
branch  9 taken 0%
branch 10 taken 0%
branch 11 taken 1%
branch 12 taken 0%
branch 13 taken 0%
branch 14 taken 0%
branch 15 taken 0%
branch 16 taken 0%
branch 17 taken 0%
branch 18 taken 0%
branch 19 taken 0%
branch 20 taken 0%
        -:  797:    {
        -:  798:    case adventurer:
     4021:  799:      playAdventurer(state);
     4021:  799-block  0
call    0 returned 100%
        -:  800:			
        -:  801:    case council_room:
        -:  802:      //+4 Cards
    20105:  803:      for (i = 0; i < 4; i++)
     4021:  803-block  0
    20105:  803-block  1
branch  0 taken 80%
branch  1 taken 20% (fallthrough)
        -:  804:	{
    16084:  805:	  drawCard(currentPlayer, state);
    16084:  805-block  0
call    0 returned 100%
        -:  806:	}
        -:  807:			
        -:  808:      //+1 Buy
     4021:  809:      state->numBuys++;
        -:  810:			
        -:  811:      //Each other player draws a card
    16117:  812:      for (i = 0; i < state->numPlayers; i++)
     4021:  812-block  0
    12096:  812-block  1
    16117:  812-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  813:	{
    12096:  814:	  if ( i != currentPlayer )
    12096:  814-block  0
branch  0 taken 67% (fallthrough)
branch  1 taken 33%
        -:  815:	    {
     8075:  816:	      drawCard(i, state);
     8075:  816-block  0
call    0 returned 100%
        -:  817:	    }
        -:  818:	}
        -:  819:			
        -:  820:      //put played card in played card pile
     4021:  821:      discardCard(handPos, currentPlayer, state, 0);
     4021:  821-block  0
call    0 returned 100%
        -:  822:			
     4021:  823:      return 0;
        -:  824:			
        -:  825:    case feast:
        -:  826:      //gain card with cost up to 5
        -:  827:      //Backup hand
    #####:  828:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    $$$$$:  828-block  0
    $$$$$:  828-block  1
    $$$$$:  828-block  2
branch  0 never executed
branch  1 never executed
    #####:  829:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  830:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  831:      }
        -:  832:      //Backup hand
        -:  833:
        -:  834:      //Update Coins for Buy
    #####:  835:      updateCoins(currentPlayer, state, 5);
    $$$$$:  835-block  0
call    0 never executed
    #####:  836:      x = 1;//Condition to loop on
    #####:  837:      while( x == 1) {//Buy one card
    $$$$$:  837-block  0
branch  0 never executed
branch  1 never executed
    #####:  838:	if (supplyCount(choice1, state) <= 0){
    $$$$$:  838-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  839:	  if (DEBUG)
        -:  840:	    printf("None of that card left, sorry!\n");
        -:  841:
        -:  842:	  if (DEBUG){
        -:  843:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  844:	  }
        -:  845:	}
    #####:  846:	else if (state->coins < getCost(choice1)){
    $$$$$:  846-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  847:	  printf("That card is too expensive!\n");
    $$$$$:  847-block  0
call    0 never executed
        -:  848:
        -:  849:	  if (DEBUG){
        -:  850:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  851:	  }
        -:  852:	}
        -:  853:	else{
        -:  854:
        -:  855:	  if (DEBUG){
        -:  856:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  857:	  }
        -:  858:
    #####:  859:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    $$$$$:  859-block  0
call    0 never executed
    #####:  860:	  x = 0;//No more buying cards
        -:  861:
        -:  862:	  if (DEBUG){
        -:  863:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  864:	  }
        -:  865:
        -:  866:	}
        -:  867:      }     
        -:  868:
        -:  869:      //Reset Hand
    #####:  870:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    $$$$$:  870-block  0
    $$$$$:  870-block  1
    $$$$$:  870-block  2
branch  0 never executed
branch  1 never executed
    #####:  871:	state->hand[currentPlayer][i] = temphand[i];
    #####:  872:	temphand[i] = -1;
        -:  873:      }
        -:  874:      //Reset Hand
        -:  875:      			
    #####:  876:      return 0;
    $$$$$:  876-block  0
        -:  877:			
        -:  878:    case gardens:
    #####:  879:      return -1;
    $$$$$:  879-block  0
        -:  880:			
        -:  881:    case mine:
    #####:  882:   	  playMine(state, choice1, choice2, handPos);
    $$$$$:  882-block  0
call    0 never executed
        -:  883:			
        -:  884:    case remodel:
    #####:  885:      playRemodel(state, choice1, choice2, handPos);
    $$$$$:  885-block  0
call    0 never executed
        -:  886:		
        -:  887:    case smithy:
        7:  888:      playSmithy(state, handPos);
        7:  888-block  0
call    0 returned 100%
        -:  889:		
        -:  890:    case village:
     3014:  891:      playVillage(state, handPos);
     3014:  891-block  0
call    0 returned 100%
        -:  892:		
        -:  893:    case baron:
     3014:  894:      state->numBuys++;//Increase buys by 1!
     3014:  895:      if (choice1 > 0){//Boolean true or going to discard an estate
     3014:  895-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  896:	int p = 0;//Iterator for hand!
    #####:  897:	int card_not_discarded = 1;//Flag for discard set!
    #####:  898:	while(card_not_discarded){
    $$$$$:  898-block  0
    $$$$$:  898-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:  898-block  2
    #####:  899:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    $$$$$:  899-block  0
branch  0 never executed
branch  1 never executed
    #####:  900:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  901:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  902:	    state->discardCount[currentPlayer]++;
    #####:  903:	    for (;p < state->handCount[currentPlayer]; p++){
    $$$$$:  903-block  0
    $$$$$:  903-block  1
    $$$$$:  903-block  2
branch  0 never executed
branch  1 never executed
    #####:  904:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  905:	    }
    #####:  906:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  907:	    state->handCount[currentPlayer]--;
    #####:  908:	    card_not_discarded = 0;//Exit the loop
    $$$$$:  908-block  0
        -:  909:	  }
    #####:  910:	  else if (p > state->handCount[currentPlayer]){
    $$$$$:  910-block  0
branch  0 never executed
branch  1 never executed
        -:  911:	    if(DEBUG) {
        -:  912:	      printf("No estate cards in your hand, invalid choice\n");
        -:  913:	      printf("Must gain an estate if there are any\n");
        -:  914:	    }
    #####:  915:	    if (supplyCount(estate, state) > 0){
    $$$$$:  915-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  916:	      gainCard(estate, state, 0, currentPlayer);
    $$$$$:  916-block  0
call    0 never executed
    #####:  917:	      state->supplyCount[estate]--;//Decrement estates
    #####:  918:	      if (supplyCount(estate, state) == 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  919:		isGameOver(state);
    $$$$$:  919-block  0
call    0 never executed
        -:  920:	      }
        -:  921:	    }
    #####:  922:	    card_not_discarded = 0;//Exit the loop
    $$$$$:  922-block  0
        -:  923:	  }
        -:  924:			    
        -:  925:	  else{
    #####:  926:	    p++;//Next card
    $$$$$:  926-block  0
        -:  927:	  }
        -:  928:	}
        -:  929:      }
        -:  930:			    
        -:  931:      else{
     3014:  932:	if (supplyCount(estate, state) > 0){
     3014:  932-block  0
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
     3014:  933:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
     3014:  933-block  0
call    0 returned 100%
     3014:  934:	  state->supplyCount[estate]--;//Decrement Estates
     3014:  935:	  if (supplyCount(estate, state) == 0){
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:  936:	    isGameOver(state);
    $$$$$:  936-block  0
call    0 never executed
        -:  937:	  }
        -:  938:	}
        -:  939:      }
        -:  940:	    
        -:  941:      
     3014:  942:      return 0;
     3014:  942-block  0
        -:  943:		
        -:  944:    case great_hall:
        -:  945:      //+1 Card
    #####:  946:      drawCard(currentPlayer, state);
    $$$$$:  946-block  0
call    0 never executed
        -:  947:			
        -:  948:      //+1 Actions
    #####:  949:      state->numActions++;
        -:  950:			
        -:  951:      //discard card from hand
    #####:  952:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####:  953:      return 0;
        -:  954:		
        -:  955:    case minion:
        -:  956:      //+1 action
    #####:  957:      state->numActions++;
        -:  958:			
        -:  959:      //discard card from hand
    #####:  960:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$:  960-block  0
call    0 never executed
        -:  961:			
    #####:  962:      if (choice1)		//+2 coins
branch  0 never executed
branch  1 never executed
        -:  963:	{
    #####:  964:	  state->coins = state->coins + 2;
    $$$$$:  964-block  0
        -:  965:	}
        -:  966:			
    #####:  967:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
    $$$$$:  967-block  0
branch  0 never executed
branch  1 never executed
        -:  968:	{
        -:  969:	  //discard hand
    #####:  970:	  while(numHandCards(state) > 0)
    $$$$$:  970-block  0
    $$$$$:  970-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  971:	    {
    #####:  972:	      discardCard(handPos, currentPlayer, state, 0);
    $$$$$:  972-block  0
call    0 never executed
        -:  973:	    }
        -:  974:				
        -:  975:	  //draw 4
    #####:  976:	  for (i = 0; i < 4; i++)
    $$$$$:  976-block  0
    $$$$$:  976-block  1
branch  0 never executed
branch  1 never executed
        -:  977:	    {
    #####:  978:	      drawCard(currentPlayer, state);
    $$$$$:  978-block  0
call    0 never executed
        -:  979:	    }
        -:  980:				
        -:  981:	  //other players discard hand and redraw if hand size > 4
    #####:  982:	  for (i = 0; i < state->numPlayers; i++)
    $$$$$:  982-block  0
    $$$$$:  982-block  1
    $$$$$:  982-block  2
branch  0 never executed
branch  1 never executed
        -:  983:	    {
    #####:  984:	      if (i != currentPlayer)
    $$$$$:  984-block  0
branch  0 never executed
branch  1 never executed
        -:  985:		{
    #####:  986:		  if ( state->handCount[i] > 4 )
    $$$$$:  986-block  0
branch  0 never executed
branch  1 never executed
        -:  987:		    {
        -:  988:		      //discard hand
    #####:  989:		      while( state->handCount[i] > 0 )
    $$$$$:  989-block  0
    $$$$$:  989-block  1
branch  0 never executed
branch  1 never executed
        -:  990:			{
    #####:  991:			  discardCard(handPos, i, state, 0);
    $$$$$:  991-block  0
call    0 never executed
        -:  992:			}
        -:  993:							
        -:  994:		      //draw 4
    #####:  995:		      for (j = 0; j < 4; j++)
    $$$$$:  995-block  0
    $$$$$:  995-block  1
branch  0 never executed
branch  1 never executed
        -:  996:			{
    #####:  997:			  drawCard(i, state);
    $$$$$:  997-block  0
call    0 never executed
        -:  998:			}
        -:  999:		    }
        -: 1000:		}
        -: 1001:	    }
        -: 1002:				
        -: 1003:	}
    #####: 1004:      return 0;
    $$$$$: 1004-block  0
        -: 1005:		
        -: 1006:    case steward:
       21: 1007:      if (choice1 == 1)
       21: 1007-block  0
branch  0 taken 33% (fallthrough)
branch  1 taken 67%
        -: 1008:	{
        -: 1009:	  //+2 cards
        7: 1010:	  drawCard(currentPlayer, state);
        7: 1010-block  0
call    0 returned 100%
        7: 1011:	  drawCard(currentPlayer, state);
call    0 returned 100%
        -: 1012:	}
       14: 1013:      else if (choice1 == 2)
       14: 1013-block  0
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
        -: 1014:	{
        -: 1015:	  //+2 coins
        7: 1016:	  state->coins = state->coins + 2;
        7: 1016-block  0
        -: 1017:	}
        -: 1018:      else
        -: 1019:	{
        -: 1020:	  //trash 2 cards in hand
        7: 1021:	  discardCard(choice2, currentPlayer, state, 1);
        7: 1021-block  0
call    0 returned 100%
        7: 1022:	  discardCard(choice3, currentPlayer, state, 1);
call    0 returned 100%
        -: 1023:	}
        -: 1024:			
        -: 1025:      //discard card from hand
       21: 1026:      discardCard(handPos, currentPlayer, state, 0);
       21: 1026-block  0
call    0 returned 100%
       21: 1027:      return 0;
        -: 1028:		
        -: 1029:    case tribute:
    #####: 1030:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    $$$$$: 1030-block  0
branch  0 never executed
branch  1 never executed
    #####: 1031:	if (state->deckCount[nextPlayer] > 0){
    $$$$$: 1031-block  0
branch  0 never executed
branch  1 never executed
    #####: 1032:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1033:	  state->deckCount[nextPlayer]--;
    $$$$$: 1033-block  0
        -: 1034:	}
    #####: 1035:	else if (state->discardCount[nextPlayer] > 0){
    $$$$$: 1035-block  0
branch  0 never executed
branch  1 never executed
    #####: 1036:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1037:	  state->discardCount[nextPlayer]--;
    $$$$$: 1037-block  0
        -: 1038:	}
        -: 1039:	else{
        -: 1040:	  //No Card to Reveal
        -: 1041:	  if (DEBUG){
        -: 1042:	    printf("No cards to reveal\n");
        -: 1043:	  }
        -: 1044:	}
        -: 1045:      }
        -: 1046:	    
        -: 1047:      else{
    #####: 1048:	if (state->deckCount[nextPlayer] == 0){
    $$$$$: 1048-block  0
branch  0 never executed
branch  1 never executed
    #####: 1049:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    $$$$$: 1049-block  0
    $$$$$: 1049-block  1
    $$$$$: 1049-block  2
branch  0 never executed
branch  1 never executed
    #####: 1050:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1051:	    state->deckCount[nextPlayer]++;
    #####: 1052:	    state->discard[nextPlayer][i] = -1;
    #####: 1053:	    state->discardCount[nextPlayer]--;
        -: 1054:	  }
        -: 1055:			    
    #####: 1056:	  shuffle(nextPlayer,state);//Shuffle the deck
    $$$$$: 1056-block  0
call    0 never executed
        -: 1057:	} 
    #####: 1058:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1059:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1060:	state->deckCount[nextPlayer]--;
    #####: 1061:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1062:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1063:	state->deckCount[nextPlayer]--;
    $$$$$: 1063-block  0
        -: 1064:      }    
        -: 1065:		       
    #####: 1066:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one 
    $$$$$: 1066-block  0
branch  0 never executed
branch  1 never executed
    #####: 1067:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1068:	state->playedCardCount++;
    #####: 1069:	tributeRevealedCards[1] = -1;
    $$$$$: 1069-block  0
        -: 1070:      }
        -: 1071:
    #####: 1072:      for (i = 0; i <= 2; i ++){
    $$$$$: 1072-block  0
    $$$$$: 1072-block  1
    $$$$$: 1072-block  2
branch  0 never executed
branch  1 never executed
    #####: 1073:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    $$$$$: 1073-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1073-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1073-block  2
branch  4 never executed
branch  5 never executed
    #####: 1074:	  state->coins += 2;
    $$$$$: 1074-block  0
        -: 1075:	}
        -: 1076:		    
    #####: 1077:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    $$$$$: 1077-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1077-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1077-block  2
branch  4 never executed
branch  5 never executed
    $$$$$: 1077-block  3
branch  6 never executed
branch  7 never executed
    $$$$$: 1077-block  4
branch  8 never executed
branch  9 never executed
    #####: 1078:	  drawCard(currentPlayer, state);
    $$$$$: 1078-block  0
call    0 never executed
    #####: 1079:	  drawCard(currentPlayer, state);
call    0 never executed
        -: 1080:	}
        -: 1081:	else{//Action Card
    #####: 1082:	  state->numActions = state->numActions + 2;
    $$$$$: 1082-block  0
        -: 1083:	}
        -: 1084:      }
        -: 1085:	    
    #####: 1086:      return 0;
    $$$$$: 1086-block  0
        -: 1087:		
        -: 1088:    case ambassador:
    #####: 1089:      j = 0;		//used to check if player has enough cards to discard
        -: 1090:
    #####: 1091:      if (choice2 > 2 || choice2 < 0)
    $$$$$: 1091-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1091-block  1
branch  2 never executed
branch  3 never executed
        -: 1092:	{
    #####: 1093:	  return -1;				
    $$$$$: 1093-block  0
        -: 1094:	}
        -: 1095:
    #####: 1096:      if (choice1 == handPos)
    $$$$$: 1096-block  0
branch  0 never executed
branch  1 never executed
        -: 1097:	{
    #####: 1098:	  return -1;
    $$$$$: 1098-block  0
        -: 1099:	}
        -: 1100:
    #####: 1101:      for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1101-block  0
    $$$$$: 1101-block  1
    $$$$$: 1101-block  2
branch  0 never executed
branch  1 never executed
        -: 1102:	{
    #####: 1103:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
    $$$$$: 1103-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1103-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1103-block  2
branch  4 never executed
branch  5 never executed
        -: 1104:	    {
    #####: 1105:	      j++;
    $$$$$: 1105-block  0
        -: 1106:	    }
        -: 1107:	}
    #####: 1108:      if (j < choice2)
    $$$$$: 1108-block  0
branch  0 never executed
branch  1 never executed
        -: 1109:	{
    #####: 1110:	  return -1;				
    $$$$$: 1110-block  0
        -: 1111:	}
        -: 1112:
        -: 1113:      if (DEBUG) 
        -: 1114:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1115:
        -: 1116:      //increase supply count for choosen card by amount being discarded
    #####: 1117:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1118:			
        -: 1119:      //each other player gains a copy of revealed card
    #####: 1120:      for (i = 0; i < state->numPlayers; i++)
    $$$$$: 1120-block  0
    $$$$$: 1120-block  1
    $$$$$: 1120-block  2
branch  0 never executed
branch  1 never executed
        -: 1121:	{
    #####: 1122:	  if (i != currentPlayer)
    $$$$$: 1122-block  0
branch  0 never executed
branch  1 never executed
        -: 1123:	    {
    #####: 1124:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
    $$$$$: 1124-block  0
call    0 never executed
        -: 1125:	    }
        -: 1126:	}
        -: 1127:
        -: 1128:      //discard played card from hand
    #####: 1129:      discardCard(handPos, currentPlayer, state, 0);			
    $$$$$: 1129-block  0
call    0 never executed
        -: 1130:
        -: 1131:      //trash copies of cards returned to supply
    #####: 1132:      for (j = 0; j < choice2; j++)
    $$$$$: 1132-block  0
    $$$$$: 1132-block  1
branch  0 never executed
branch  1 never executed
        -: 1133:	{
    #####: 1134:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1134-block  0
    $$$$$: 1134-block  1
    $$$$$: 1134-block  2
branch  0 never executed
branch  1 never executed
        -: 1135:	    {
    #####: 1136:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
    $$$$$: 1136-block  0
branch  0 never executed
branch  1 never executed
        -: 1137:		{
    #####: 1138:		  discardCard(i, currentPlayer, state, 1);
    $$$$$: 1138-block  0
call    0 never executed
    #####: 1139:		  break;
        -: 1140:		}
        -: 1141:	    }
        -: 1142:	}			
        -: 1143:
    #####: 1144:      return 0;
    $$$$$: 1144-block  0
        -: 1145:		
        -: 1146:    case cutpurse:
        -: 1147:
    #####: 1148:      updateCoins(currentPlayer, state, 2);
    $$$$$: 1148-block  0
call    0 never executed
    #####: 1149:      for (i = 0; i < state->numPlayers; i++)
    $$$$$: 1149-block  0
    $$$$$: 1149-block  1
branch  0 never executed
branch  1 never executed
        -: 1150:	{
    #####: 1151:	  if (i != currentPlayer)
    $$$$$: 1151-block  0
branch  0 never executed
branch  1 never executed
        -: 1152:	    {
    #####: 1153:	      for (j = 0; j < state->handCount[i]; j++)
    $$$$$: 1153-block  0
    $$$$$: 1153-block  1
    $$$$$: 1153-block  2
branch  0 never executed
branch  1 never executed
        -: 1154:		{
    #####: 1155:		  if (state->hand[i][j] == copper)
    $$$$$: 1155-block  0
branch  0 never executed
branch  1 never executed
        -: 1156:		    {
    #####: 1157:		      discardCard(j, i, state, 0);
    $$$$$: 1157-block  0
call    0 never executed
    #####: 1158:		      break;
        -: 1159:		    }
    #####: 1160:		  if (j == state->handCount[i])
    $$$$$: 1160-block  0
branch  0 never executed
branch  1 never executed
        -: 1161:		    {
    #####: 1162:		      for (k = 0; k < state->handCount[i]; k++)
    $$$$$: 1162-block  0
    $$$$$: 1162-block  1
    $$$$$: 1162-block  2
branch  0 never executed
branch  1 never executed
        -: 1163:			{
        -: 1164:			  if (DEBUG)
        -: 1165:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1166:			}	
    #####: 1167:		      break;
    $$$$$: 1167-block  0
        -: 1168:		    }		
        -: 1169:		}
        -: 1170:					
        -: 1171:	    }
        -: 1172:				
        -: 1173:	}				
        -: 1174:
        -: 1175:      //discard played card from hand
    #####: 1176:      discardCard(handPos, currentPlayer, state, 0);			
    $$$$$: 1176-block  0
call    0 never executed
        -: 1177:
    #####: 1178:      return 0;
        -: 1179:
        -: 1180:		
        -: 1181:    case embargo: 
        -: 1182:      //+2 Coins
    #####: 1183:      state->coins = state->coins + 2;
        -: 1184:			
        -: 1185:      //see if selected pile is in play
    #####: 1186:      if ( state->supplyCount[choice1] == -1 )
    $$$$$: 1186-block  0
branch  0 never executed
branch  1 never executed
        -: 1187:	{
    #####: 1188:	  return -1;
    $$$$$: 1188-block  0
        -: 1189:	}
        -: 1190:			
        -: 1191:      //add embargo token to selected supply pile
    #####: 1192:      state->embargoTokens[choice1]++;
        -: 1193:			
        -: 1194:      //trash card
    #####: 1195:      discardCard(handPos, currentPlayer, state, 1);		
    $$$$$: 1195-block  0
call    0 never executed
    #####: 1196:      return 0;
        -: 1197:		
        -: 1198:    case outpost:
        -: 1199:      //set outpost flag
    #####: 1200:      state->outpostPlayed++;
        -: 1201:			
        -: 1202:      //discard card
    #####: 1203:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$: 1203-block  0
call    0 never executed
    #####: 1204:      return 0;
        -: 1205:		
        -: 1206:    case salvager:
        -: 1207:      //+1 buy
    #####: 1208:      state->numBuys++;
        -: 1209:			
    #####: 1210:      if (choice1)
    $$$$$: 1210-block  0
branch  0 never executed
branch  1 never executed
        -: 1211:	{
        -: 1212:	  //gain coins equal to trashed card
    #####: 1213:	  state->coins = state->coins + getCost( handCard(choice1, state) );
    $$$$$: 1213-block  0
call    0 never executed
call    1 never executed
        -: 1214:	  //trash card
    #####: 1215:	  discardCard(choice1, currentPlayer, state, 1);	
call    0 never executed
        -: 1216:	}
        -: 1217:			
        -: 1218:      //discard card
    #####: 1219:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$: 1219-block  0
call    0 never executed
    #####: 1220:      return 0;
        -: 1221:		
        -: 1222:    case sea_hag:
    #####: 1223:      for (i = 0; i < state->numPlayers; i++){
    $$$$$: 1223-block  0
    $$$$$: 1223-block  1
    $$$$$: 1223-block  2
branch  0 never executed
branch  1 never executed
    #####: 1224:	if (i != currentPlayer){
    $$$$$: 1224-block  0
branch  0 never executed
branch  1 never executed
    #####: 1225:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1226:	  state->discardCount[i]++;
    #####: 1227:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
    $$$$$: 1227-block  0
        -: 1228:	}
        -: 1229:      }
    #####: 1230:      return 0;
    $$$$$: 1230-block  0
        -: 1231:		
        -: 1232:    case treasure_map:
        -: 1233:      //search hand for another treasure_map
    #####: 1234:      index = -1;
    #####: 1235:      for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1235-block  0
    $$$$$: 1235-block  1
    $$$$$: 1235-block  2
branch  0 never executed
branch  1 never executed
        -: 1236:	{
    #####: 1237:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
    $$$$$: 1237-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1237-block  1
branch  2 never executed
branch  3 never executed
        -: 1238:	    {
    #####: 1239:	      index = i;
    #####: 1240:	      break;
    $$$$$: 1240-block  0
        -: 1241:	    }
        -: 1242:	}
    #####: 1243:      if (index > -1)
    $$$$$: 1243-block  0
branch  0 never executed
branch  1 never executed
        -: 1244:	{
        -: 1245:	  //trash both treasure cards
    #####: 1246:	  discardCard(handPos, currentPlayer, state, 1);
    $$$$$: 1246-block  0
call    0 never executed
    #####: 1247:	  discardCard(index, currentPlayer, state, 1);
call    0 never executed
        -: 1248:
        -: 1249:	  //gain 4 Gold cards
    #####: 1250:	  for (i = 0; i < 4; i++)
    $$$$$: 1250-block  0
branch  0 never executed
branch  1 never executed
        -: 1251:	    {
    #####: 1252:	      gainCard(gold, state, 1, currentPlayer);
    $$$$$: 1252-block  0
call    0 never executed
        -: 1253:	    }
        -: 1254:				
        -: 1255:	  //return success
    #####: 1256:	  return 1;
    $$$$$: 1256-block  0
        -: 1257:	}
        -: 1258:			
        -: 1259:      //no second treasure_map found in hand
    #####: 1260:      return -1;
    $$$$$: 1260-block  0
        -: 1261:    }
        -: 1262:	
     7056: 1263:  return -1;
    $$$$$: 1263-block  0
     7056: 1263-block  1
        -: 1264:}
        -: 1265:
function discardCard called 7133 returned 100% blocks executed 89%
     7133: 1266:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
     7133: 1266-block  0
        -: 1267:{
        -: 1268:	
        -: 1269:  //if card is not trashed, added to Played pile 
     7133: 1270:  if (trashFlag < 1)
     7133: 1270-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
        -: 1271:    {
        -: 1272:      //add card to played pile
     7105: 1273:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos]; 
     7105: 1274:      state->playedCardCount++;
     7105: 1274-block  0
        -: 1275:    }
        -: 1276:	
        -: 1277:  //set played card to -1
     7133: 1278:  state->hand[currentPlayer][handPos] = -1;
        -: 1279:	
        -: 1280:  //remove card from player's hand
     7133: 1281:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
     7133: 1281-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1282:    {
        -: 1283:      //reduce number of cards in hand
       19: 1284:      state->handCount[currentPlayer]--;
       19: 1284-block  0
        -: 1285:    }
     7114: 1286:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
     7114: 1286-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -: 1287:    {
        -: 1288:      //reduce number of cards in hand
    #####: 1289:      state->handCount[currentPlayer]--;
    $$$$$: 1289-block  0
        -: 1290:    }
        -: 1291:  else 	
        -: 1292:    {
        -: 1293:      //replace discarded card with last card in hand
     7114: 1294:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1295:      //set last card to -1
     7114: 1296:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1297:      //reduce number of cards in hand
     7114: 1298:      state->handCount[currentPlayer]--;
     7114: 1298-block  0
        -: 1299:    }
        -: 1300:	
     7133: 1301:  return 0;
     7133: 1301-block  0
        -: 1302:}
        -: 1303:
function gainCard called 3042 returned 100% blocks executed 100%
     3042: 1304:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
     3042: 1304-block  0
        -: 1305:{
        -: 1306:  //Note: supplyPos is enum of choosen card
        -: 1307:	
        -: 1308:  //check if supply pile is empty (0) or card is not used in game (-1)
     3042: 1309:  if ( supplyCount(supplyPos, state) < 1 )
     3042: 1309-block  0
call    0 returned 100%
branch  1 taken 1% (fallthrough)
branch  2 taken 99%
        -: 1310:    {
        7: 1311:      return -1;
        7: 1311-block  0
        -: 1312:    }
        -: 1313:	
        -: 1314:  //added card for [whoseTurn] current player:
        -: 1315:  // toFlag = 0 : add to discard
        -: 1316:  // toFlag = 1 : add to deck
        -: 1317:  // toFlag = 2 : add to hand
        -: 1318:
     3035: 1319:  if (toFlag == 1)
     3035: 1319-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1320:    {
        7: 1321:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
        7: 1322:      state->deckCount[player]++;
        7: 1322-block  0
        -: 1323:    }
     3028: 1324:  else if (toFlag == 2)
     3028: 1324-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1325:    {
        7: 1326:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
        7: 1327:      state->handCount[player]++;
        7: 1327-block  0
        -: 1328:    }
        -: 1329:  else
        -: 1330:    {
     3021: 1331:      state->discard[player][ state->discardCount[player] ] = supplyPos;
     3021: 1332:      state->discardCount[player]++;
     3021: 1332-block  0
        -: 1333:    }
        -: 1334:	
        -: 1335:  //decrease number in supply pile
     3035: 1336:  state->supplyCount[supplyPos]--;
        -: 1337:	 
     3035: 1338:  return 0;
     3035: 1338-block  0
        -: 1339:}
        -: 1340:
function updateCoins called 7203 returned 100% blocks executed 100%
     7203: 1341:int updateCoins(int player, struct gameState *state, int bonus)
     7203: 1341-block  0
        -: 1342:{
        -: 1343:  int i;
        -: 1344:	
        -: 1345:  //reset coin count
     7203: 1346:  state->coins = 0;
        -: 1347:
        -: 1348:  //add coins for each Treasure card in player's hand
    43218: 1349:  for (i = 0; i < state->handCount[player]; i++)
     7203: 1349-block  0
    36015: 1349-block  1
    43218: 1349-block  2
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        -: 1350:    {
    36015: 1351:      if (state->hand[player][i] == copper)
    36015: 1351-block  0
branch  0 taken 70% (fallthrough)
branch  1 taken 30%
        -: 1352:	{
    25330: 1353:	  state->coins += 1;
    25330: 1353-block  0
        -: 1354:	}
    10685: 1355:      else if (state->hand[player][i] == silver)
    10685: 1355-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1356:	{
       35: 1357:	  state->coins += 2;
       35: 1357-block  0
        -: 1358:	}
    10650: 1359:      else if (state->hand[player][i] == gold)
    10650: 1359-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1360:	{
       35: 1361:	  state->coins += 3;
       35: 1361-block  0
        -: 1362:	}	
        -: 1363:    }	
        -: 1364:
        -: 1365:  //add bonus
     7203: 1366:  state->coins += bonus;
        -: 1367:
     7203: 1368:  return 0;
     7203: 1368-block  0
        -: 1369:}
        -: 1370:
        -: 1371:
        -: 1372:/************************************************
        -: 1373:Start of function unit tests
        -: 1374:*************************************************/
        -: 1375:
function testUpdateCoins called 0 returned 0% blocks executed 0%
    #####: 1376:int testUpdateCoins(int player, struct gameState *state, int bonus) {
    $$$$$: 1376-block  0
        -: 1377:  
    #####: 1378:}
        -: 1379:
        -: 1380:
        -: 1381://end of dominion.c
        -: 1382:
----------------- Random Testing Card: adventurer ----------------
Iteration 0
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 1
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 2
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 3
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 4
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 5
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 6
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 7
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 8
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 9
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 10
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 11
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 12
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 13
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 14
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 15
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 16
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 17
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 18
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 19
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 20
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 21
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 22
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 23
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 24
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 25
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 26
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 27
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 28
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 29
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 30
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 31
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 32
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 33
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 34
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 35
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 36
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 37
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 38
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 39
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 40
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 41
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 42
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 43
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 44
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 45
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 46
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 47
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 48
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 49
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 50
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 51
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 52
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 53
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 54
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 55
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 56
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 57
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 58
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 59
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 60
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 61
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 62
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 63
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 64
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 65
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 66
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 67
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 68
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 69
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 70
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 71
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 72
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 73
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 74
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 75
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 76
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 77
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 78
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 79
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 80
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 81
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 82
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 83
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 84
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 85
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 86
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 87
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 88
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 89
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 90
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 91
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 92
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 93
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 94
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 95
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 96
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 97
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 98
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 99
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 100
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 101
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 102
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 103
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 104
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 105
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 106
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 107
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 108
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 109
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 110
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 111
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 112
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 113
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 114
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 115
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 116
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 117
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 118
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 119
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 120
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 121
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 122
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 123
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 124
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 125
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 126
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 127
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 128
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 129
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 130
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 131
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 132
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 133
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 134
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 135
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 136
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 137
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 138
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 139
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 140
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 141
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 142
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 143
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 144
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 145
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 146
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 147
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 148
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 149
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 150
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 151
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 152
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 153
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 154
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 155
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 156
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 157
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 158
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 159
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 160
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 161
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 162
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 163
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 164
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 165
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 166
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 167
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 168
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 169
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 170
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 171
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 172
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 173
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 174
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 175
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 176
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 177
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 178
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 179
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 180
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 181
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 182
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 183
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 184
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 185
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 186
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 187
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 188
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 189
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 190
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 191
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 192
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 193
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 194
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 195
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 196
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 197
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 198
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 199
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 200
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 201
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 202
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 203
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 204
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 205
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 206
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 207
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 208
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 209
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 210
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 211
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 212
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 213
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 214
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 215
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 216
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 217
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 218
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 219
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 220
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 221
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 222
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 223
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 224
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 225
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 226
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 227
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 228
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 229
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 230
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 231
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 232
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 233
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 234
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 235
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 236
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 237
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 238
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 239
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 240
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 241
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 242
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 243
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 244
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 245
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 246
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 247
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 248
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 249
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 250
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 251
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 252
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 253
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 254
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 255
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 256
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 257
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 258
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 259
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 260
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 261
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 262
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 263
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 264
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 265
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 266
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 267
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 268
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 269
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 270
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 271
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 272
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 273
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 274
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 275
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 276
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 277
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 278
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 279
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 280
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 281
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 282
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 283
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 284
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 285
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 286
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 287
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 288
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 289
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 290
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 291
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 292
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 293
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 294
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 295
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 296
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 297
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 298
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 299
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 300
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 301
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 302
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 303
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 304
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 305
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 306
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 307
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 308
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 309
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 310
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 311
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 312
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 313
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 314
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 315
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 316
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 317
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 318
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 319
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 320
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 321
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 322
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 323
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 324
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 325
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 326
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 327
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 328
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 329
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 330
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 331
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 332
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 333
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 334
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 335
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 336
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 337
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 338
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 339
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 340
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 341
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 342
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 343
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 344
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 345
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 346
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 347
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 348
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 349
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 350
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 351
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 352
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 353
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 354
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 355
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 356
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 357
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 358
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 359
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 360
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 361
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 362
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 363
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 364
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 365
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 366
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 367
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 368
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 369
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 370
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 371
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 372
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 373
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 374
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 375
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 376
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 377
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 378
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 379
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 380
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 381
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 382
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 383
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 384
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 385
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 386
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 387
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 388
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 389
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 390
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 391
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 392
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 393
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 394
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 395
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 396
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 397
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 398
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 399
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 400
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 401
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 402
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 403
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 404
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 405
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 406
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 407
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 408
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 409
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 410
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 411
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 412
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 413
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 414
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 415
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 416
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 417
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 418
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 419
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 420
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 421
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 422
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 423
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 424
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 425
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 426
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 427
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 428
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 429
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 430
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 431
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 432
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 433
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 434
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 435
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 436
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 437
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 438
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 439
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 440
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 441
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 442
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 443
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 444
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 445
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 446
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 447
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 448
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 449
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 450
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 451
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 452
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 453
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 454
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 455
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 456
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 457
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 458
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 459
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 460
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 461
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 462
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 463
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 464
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 465
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 466
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 467
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 468
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 469
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 470
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 471
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 472
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 473
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 474
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 475
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 476
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 477
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 478
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 479
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 480
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 481
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 482
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 483
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 484
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 485
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 486
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 487
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 488
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 489
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 490
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 491
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 492
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 493
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 494
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 495
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 496
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 497
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 498
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 499
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 500
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 501
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 502
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 503
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 504
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 505
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 506
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 507
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 508
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 509
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 510
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 511
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 512
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 513
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 514
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 515
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 516
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 517
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 518
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 519
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 520
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 521
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 522
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 523
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 524
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 525
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 526
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 527
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 528
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 529
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 530
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 531
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 532
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 533
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 534
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 535
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 536
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 537
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 538
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 539
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 540
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 541
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 542
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 543
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 544
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 545
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 546
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 547
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 548
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 549
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 550
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 551
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 552
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 553
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 554
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 555
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 556
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 557
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 558
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 559
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 560
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 561
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 562
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 563
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 564
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 565
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 566
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 567
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 568
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 569
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 570
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 571
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 572
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 573
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 574
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 575
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 576
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 577
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 578
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 579
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 580
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 581
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 582
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 583
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 584
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 585
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 586
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 587
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 588
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 589
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 590
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 591
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 592
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 593
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 594
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 595
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 596
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 597
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 598
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 599
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 600
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 601
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 602
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 603
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 604
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 605
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 606
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 607
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 608
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 609
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 610
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 611
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 612
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 613
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 614
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 615
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 616
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 617
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 618
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 619
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 620
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 621
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 622
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 623
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 624
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 625
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 626
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 627
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 628
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 629
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 630
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 631
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 632
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 633
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 634
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 635
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 636
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 637
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 638
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 639
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 640
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 641
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 642
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 643
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 644
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 645
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 646
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 647
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 648
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 649
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 650
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 651
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 652
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 653
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 654
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 655
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 656
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 657
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 658
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 659
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 660
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 661
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 662
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 663
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 664
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 665
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 666
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 667
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 668
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 669
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 670
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 671
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 672
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 673
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 674
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 675
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 676
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 677
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 678
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 679
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 680
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 681
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 682
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 683
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 684
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 685
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 686
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 687
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 688
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 689
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 690
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 691
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 692
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 693
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 694
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 695
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 696
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 697
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 698
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 699
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 700
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 701
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 702
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 703
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 704
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 705
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 706
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 707
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 708
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 709
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 710
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 711
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 712
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 713
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 714
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 715
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 716
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 717
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 718
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 719
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 720
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 721
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 722
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 723
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 724
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 725
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 726
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 727
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 728
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 729
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 730
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 731
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 732
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 733
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 734
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 735
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 736
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 737
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 738
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 739
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 740
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 741
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 742
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 743
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 744
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 745
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 746
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 747
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 748
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 749
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 750
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 751
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 752
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 753
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 754
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 755
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 756
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 757
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 758
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 759
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 760
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 761
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 762
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 763
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 764
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 765
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 766
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 767
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 768
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 769
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 770
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 771
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 772
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 773
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 774
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 775
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 776
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 777
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 778
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 779
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 780
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 781
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 782
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 783
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 784
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 785
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 786
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 787
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 788
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 789
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 790
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 791
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 792
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 793
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 794
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 795
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 796
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 797
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 798
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 799
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 800
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 801
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 802
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 803
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 804
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 805
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 806
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 807
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 808
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 809
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 810
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 811
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 812
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 813
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 814
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 815
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 816
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 817
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 818
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 819
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 820
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 821
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 822
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 823
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 824
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 825
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 826
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 827
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 828
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 829
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 830
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 831
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 832
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 833
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 834
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 835
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 836
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 837
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 838
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 839
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 840
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 841
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 842
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 843
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 844
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 845
TEST 3 FAILURE
Iteration 846
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 847
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 848
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 849
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 850
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 851
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 852
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 853
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 854
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 855
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 856
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 857
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 858
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 859
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 860
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 861
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 862
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 863
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 864
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 865
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 866
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 867
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 868
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 869
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 870
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 871
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 872
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 873
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 874
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 875
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 876
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 877
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 878
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 879
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 880
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 881
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 882
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 883
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 884
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 885
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 886
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 887
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 888
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 889
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 890
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 891
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 892
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 893
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 894
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 895
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 896
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 897
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 898
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 899
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 900
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 901
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 902
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 903
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 904
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 905
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 906
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 907
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 908
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 909
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 910
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 911
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 912
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 913
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 914
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 915
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 916
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 917
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 918
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 919
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 920
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 921
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 922
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 923
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 924
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 925
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 926
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 927
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 928
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 929
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 930
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 931
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 932
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 933
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 934
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 935
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 936
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 937
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 938
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 939
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 940
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 941
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 942
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 943
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 944
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 945
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 946
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 947
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 948
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 949
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 950
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 951
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 952
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 953
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 954
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 955
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 956
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 957
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 958
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 959
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 960
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 961
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 962
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 963
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 964
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 965
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 966
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 967
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 968
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 969
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 970
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 971
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 972
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 973
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 974
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 975
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 976
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 977
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 978
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 979
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 980
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 981
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 982
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 983
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 984
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 985
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 986
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 987
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 988
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 989
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 990
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 991
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 992
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 993
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 994
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 995
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 996
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 997
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 998
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 999
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
File 'dominion.c'
Lines executed:38.80% of 567
Branches executed:37.17% of 417
Taken at least once:29.98% of 417
Calls executed:33.00% of 100
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:74
        -:    0:Programs:15
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
function compare called 15543598 returned 100% blocks executed 100%
 15543598:    8:int compare(const void* a, const void* b) {
 15543598:    8-block  0
 15543598:    9:  if (*(int*)a > *(int*)b)
 15543598:    9-block  0
branch  0 taken 13% (fallthrough)
branch  1 taken 87%
  2075670:   10:    return 1;
  2075670:   10-block  0
 13467928:   11:  if (*(int*)a < *(int*)b)
 13467928:   11-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
   121460:   12:    return -1;
   121460:   12-block  0
 13346468:   13:  return 0;
 13346468:   13-block  0
        -:   14:}
        -:   15:
function newGame called 0 returned 0% blocks executed 0%
    #####:   16:struct gameState* newGame() {
    $$$$$:   16-block  0
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
    $$$$$:   18-block  0
        -:   19:}
        -:   20:
function kingdomCards called 0 returned 0% blocks executed 0%
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
    $$$$$:   21-block  0
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
    $$$$$:   34-block  0
        -:   35:}
        -:   36:
function initializeGame called 9204 returned 100% blocks executed 94%
     9204:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
     9204:   37-block  0
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;			
        -:   43:  //set up random number generator
     9204:   44:  SelectStream(1);
     9204:   44-block  0
call    0 returned 100%
     9204:   45:  PutSeed((long)randomSeed);
call    0 returned 100%
        -:   46:  
        -:   47:  //check number of players
     9204:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
     9204:   48-block  0
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:   49:    {
    #####:   50:      return -1;
    $$$$$:   50-block  0
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
     9204:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
   101244:   57:  for (i = 0; i < 10; i++)
     9204:   57-block  0
    92040:   57-block  1
   101244:   57-block  2
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
        -:   58:    {
  1012440:   59:      for (j = 0; j < 10; j++)
    92040:   59-block  0
   920400:   59-block  1
  1012440:   59-block  2
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
        -:   60:        {
   920400:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
   920400:   61-block  0
branch  0 taken 90% (fallthrough)
branch  1 taken 10%
   828360:   61-block  1
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:   62:	    {
    #####:   63:	      return -1;
    $$$$$:   63-block  0
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
     9204:   73:  if (numPlayers == 2)
     9204:   73-block  0
branch  0 taken 34% (fallthrough)
branch  1 taken 66%
        -:   74:    {
     3161:   75:      state->supplyCount[curse] = 10;
     3161:   75-block  0
        -:   76:    }
     6043:   77:  else if (numPlayers == 3)
     6043:   77-block  0
branch  0 taken 49% (fallthrough)
branch  1 taken 51%
        -:   78:    {
     2977:   79:      state->supplyCount[curse] = 20;
     2977:   79-block  0
        -:   80:    }
        -:   81:  else
        -:   82:    {
     3066:   83:      state->supplyCount[curse] = 30;
     3066:   83-block  0
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
     9204:   87:  if (numPlayers == 2)
     9204:   87-block  0
branch  0 taken 34% (fallthrough)
branch  1 taken 66%
        -:   88:    {
     3161:   89:      state->supplyCount[estate] = 8;
     3161:   90:      state->supplyCount[duchy] = 8;
     3161:   91:      state->supplyCount[province] = 8;
     3161:   91-block  0
        -:   92:    }
        -:   93:  else
        -:   94:    {
     6043:   95:      state->supplyCount[estate] = 12;
     6043:   96:      state->supplyCount[duchy] = 12;
     6043:   97:      state->supplyCount[province] = 12;
     6043:   97-block  0
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
     9204:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
     9204:  102:  state->supplyCount[silver] = 40;
     9204:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
   193284:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
     9204:  106-block  0
   184080:  106-block  1
   193284:  106-block  2
branch  0 taken 95%
branch  1 taken 5% (fallthrough)
        -:  107:    {
  1518660:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
   184080:  108-block  0
  1334580:  108-block  1
  1518660:  108-block  2
branch  0 taken 94%
branch  1 taken 6% (fallthrough)
        -:  109:	{
  1426620:  110:	  if (kingdomCards[j] == i)
  1426620:  110-block  0
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    92040:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
    92040:  113-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
    91900:  113-block  1
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
        -:  114:		{
      560:  115:		  if (numPlayers == 2){ 
      280:  115-block  0
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
      280:  115-block  1
      280:  116:		    state->supplyCount[i] = 8; 
      280:  116-block  0
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
    $$$$$:  118-block  0
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    91760:  122:		  state->supplyCount[i] = 10;
    91760:  122-block  0
        -:  123:		}
    92040:  124:	      break;
    92040:  124-block  0
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
  1334580:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    36721:  138:  for (i = 0; i < numPlayers; i++)
     9204:  138-block  0
    27517:  138-block  1
    36721:  138-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  139:    {
    27517:  140:      state->deckCount[i] = 0;
   110068:  141:      for (j = 0; j < 3; j++)
    27517:  141-block  0
    82551:  141-block  1
   110068:  141-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  142:	{
    82551:  143:	  state->deck[i][j] = estate;
    82551:  144:	  state->deckCount[i]++;
        -:  145:	}
   220136:  146:      for (j = 3; j < 10; j++)
    27517:  146-block  0
   192619:  146-block  1
   220136:  146-block  2
branch  0 taken 88%
branch  1 taken 13% (fallthrough)
        -:  147:	{
   192619:  148:	  state->deck[i][j] = copper;	  state->deckCount[i]++;		
        -:  149:	}
        -:  150:    }
        -:  151:
        -:  152:  //shuffle player decks
    36721:  153:  for (i = 0; i < numPlayers; i++)
     9204:  153-block  0
    27517:  153-block  1
    36721:  153-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  154:    {
    27517:  155:      if ( shuffle(i, state) < 0 )
    27517:  155-block  0
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
        -:  156:	{
    #####:  157:	  return -1;
    $$$$$:  157-block  0
        -:  158:	}
        -:  159:    }
        -:  160:
        -:  161:  //draw player hands
    36721:  162:  for (i = 0; i < numPlayers; i++)
     9204:  162-block  0
    27517:  162-block  1
    36721:  162-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  163:    {  
        -:  164:      //initialize hand size to zero
    27517:  165:      state->handCount[i] = 0;
    27517:  166:      state->discardCount[i] = 0;
        -:  167:      //draw 5 cards
        -:  168:      // for (j = 0; j < 5; j++)
        -:  169:      //	{
        -:  170:      //	  drawCard(i, state);
        -:  171:      //	}
        -:  172:    }
        -:  173:  
        -:  174:  //set embargo tokens to 0 for all supply piles
   257712:  175:  for (i = 0; i <= treasure_map; i++)
     9204:  175-block  0
   248508:  175-block  1
   257712:  175-block  2
branch  0 taken 96%
branch  1 taken 4% (fallthrough)
        -:  176:    {
   248508:  177:      state->embargoTokens[i] = 0;
        -:  178:    }
        -:  179:
        -:  180:  //initialize first player's turn
     9204:  181:  state->outpostPlayed = 0;
     9204:  182:  state->phase = 0;
     9204:  183:  state->numActions = 1;
     9204:  184:  state->numBuys = 1;
     9204:  185:  state->playedCardCount = 0;
     9204:  186:  state->whoseTurn = 0;
     9204:  187:  state->handCount[state->whoseTurn] = 0;
        -:  188:  //int it; move to top
        -:  189:
        -:  190:  //Moved draw cards to here, only drawing at the start of a turn
    55224:  191:  for (it = 0; it < 5; it++){
     9204:  191-block  0
    55224:  191-block  1
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
    46020:  192:    drawCard(state->whoseTurn, state);
    46020:  192-block  0
call    0 returned 100%
        -:  193:  }
        -:  194:
     9204:  195:  updateCoins(state->whoseTurn, state, 0);
     9204:  195-block  0
call    0 returned 100%
        -:  196:
     9204:  197:  return 0;
        -:  198:}
        -:  199:
function shuffle called 3009387 returned 100% blocks executed 100%
  3009387:  200:int shuffle(int player, struct gameState *state) {
  3009387:  200-block  0
        -:  201: 
        -:  202:
        -:  203:  int newDeck[MAX_DECK];
  3009387:  204:  int newDeckPos = 0;
        -:  205:  int card;
        -:  206:  int i;
        -:  207:
  3009387:  208:  if (state->deckCount[player] < 1)
  3009387:  208-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
  2968729:  209:    return -1;
  2968729:  209-block  0
    40658:  210:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare); 
    40658:  210-block  0
call    0 returned 100%
        -:  211:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  212:
  3615702:  213:  while (state->deckCount[player] > 0) {
  3615702:  213-block  0
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
  3575044:  214:    card = floor(Random() * state->deckCount[player]);
  3575044:  214-block  0
call    0 returned 100%
  3575044:  215:    newDeck[newDeckPos] = state->deck[player][card];
  3575044:  216:    newDeckPos++;
279390719:  217:    for (i = card; i < state->deckCount[player]-1; i++) {
275815675:  217-block  0
279390719:  217-block  1
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
275815675:  218:      state->deck[player][i] = state->deck[player][i+1];
        -:  219:    }
  3575044:  220:    state->deckCount[player]--;
  3575044:  220-block  0
        -:  221:  }
  3615702:  222:  for (i = 0; i < newDeckPos; i++) {
    40658:  222-block  0
  3575044:  222-block  1
  3615702:  222-block  2
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
  3575044:  223:    state->deck[player][i] = newDeck[i];
  3575044:  224:    state->deckCount[player]++;
        -:  225:  }
        -:  226:
  3009387:  227:  return 0;
    40658:  227-block  0
  3009387:  227-block  1
        -:  228:}
        -:  229:
function playCard called 0 returned 0% blocks executed 0%
    #####:  230:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state) 
    $$$$$:  230-block  0
        -:  231:{	
        -:  232:  int card;
    #####:  233:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  234:
        -:  235:  //check if it is the right phase
    #####:  236:  if (state->phase != 0)
    $$$$$:  236-block  0
branch  0 never executed
branch  1 never executed
        -:  237:    {
    #####:  238:      return -1;
    $$$$$:  238-block  0
        -:  239:    }
        -:  240:	
        -:  241:  //check if player has enough actions
    #####:  242:  if ( state->numActions < 1 )
    $$$$$:  242-block  0
branch  0 never executed
branch  1 never executed
        -:  243:    {
    #####:  244:      return -1;
    $$$$$:  244-block  0
        -:  245:    }
        -:  246:	
        -:  247:  //get card played
    #####:  248:  card = handCard(handPos, state);
    $$$$$:  248-block  0
call    0 never executed
        -:  249:	
        -:  250:  //check if selected card is an action
    #####:  251:  if ( card < adventurer || card > treasure_map )
branch  0 never executed
branch  1 never executed
    $$$$$:  251-block  0
branch  2 never executed
branch  3 never executed
        -:  252:    {
    #####:  253:      return -1;
    $$$$$:  253-block  0
        -:  254:    }
        -:  255:	
        -:  256:  //play card
    #####:  257:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
    $$$$$:  257-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  258:    {
    #####:  259:      return -1;
    $$$$$:  259-block  0
        -:  260:    }
        -:  261:	
        -:  262:  //reduce number of actions
    #####:  263:  state->numActions--;
        -:  264:
        -:  265:  //update coins (Treasure cards may be added with card draws)
    #####:  266:  updateCoins(state->whoseTurn, state, coin_bonus);
    $$$$$:  266-block  0
call    0 never executed
        -:  267:	
    #####:  268:  return 0;
    $$$$$:  268-block  0
        -:  269:}
        -:  270:
function buyCard called 0 returned 0% blocks executed 0%
    #####:  271:int buyCard(int supplyPos, struct gameState *state) {
    $$$$$:  271-block  0
    $$$$$:  271-block  1
        -:  272:  int who;
        -:  273:  if (DEBUG){
        -:  274:    printf("Entering buyCard...\n");
        -:  275:  }
        -:  276:
        -:  277:  // I don't know what to do about the phase thing.
        -:  278:
    #####:  279:  who = state->whoseTurn;
        -:  280:
    #####:  281:  if (state->numBuys < 1){
    $$$$$:  281-block  0
branch  0 never executed
branch  1 never executed
        -:  282:    if (DEBUG)
        -:  283:      printf("You do not have any buys left\n");
    #####:  284:    return -1;
    $$$$$:  284-block  0
    #####:  285:  } else if (supplyCount(supplyPos, state) <1){
    $$$$$:  285-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  286:    if (DEBUG)
        -:  287:      printf("There are not any of that type of card left\n");
    #####:  288:    return -1;
    $$$$$:  288-block  0
    #####:  289:  } else if (state->coins < getCost(supplyPos)){
    $$$$$:  289-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  290:    if (DEBUG) 
        -:  291:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  292:    return -1;
    $$$$$:  292-block  0
        -:  293:  } else {
    #####:  294:    state->phase=1;
        -:  295:    //state->supplyCount[supplyPos]--;
    #####:  296:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
    $$$$$:  296-block  0
call    0 never executed
        -:  297:  
    #####:  298:    state->coins = (state->coins) - (getCost(supplyPos));
call    0 never executed
    #####:  299:    state->numBuys--;
        -:  300:    if (DEBUG)
        -:  301:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  302:  }
        -:  303:
        -:  304:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  305:  //state->discardCount[who]++;
        -:  306:    
    #####:  307:  return 0;
    $$$$$:  307-block  0
        -:  308:}
        -:  309:
function numHandCards called 0 returned 0% blocks executed 0%
    #####:  310:int numHandCards(struct gameState *state) {
    $$$$$:  310-block  0
    #####:  311:  return state->handCount[ whoseTurn(state) ];
    $$$$$:  311-block  0
call    0 never executed
        -:  312:}
        -:  313:
function handCard called 0 returned 0% blocks executed 0%
    #####:  314:int handCard(int handPos, struct gameState *state) {
    $$$$$:  314-block  0
    #####:  315:  int currentPlayer = whoseTurn(state);
    $$$$$:  315-block  0
call    0 never executed
    #####:  316:  return state->hand[currentPlayer][handPos];
        -:  317:}
        -:  318:
function supplyCount called 12080 returned 100% blocks executed 100%
    12080:  319:int supplyCount(int card, struct gameState *state) {
    12080:  319-block  0
    12080:  320:  return state->supplyCount[card];
    12080:  320-block  0
        -:  321:}
        -:  322:
function fullDeckCount called 0 returned 0% blocks executed 0%
    #####:  323:int fullDeckCount(int player, int card, struct gameState *state) {
    $$$$$:  323-block  0
        -:  324:  int i;
    #####:  325:  int count = 0;
        -:  326:
    #####:  327:  for (i = 0; i < state->deckCount[player]; i++)
    $$$$$:  327-block  0
    $$$$$:  327-block  1
    $$$$$:  327-block  2
branch  0 never executed
branch  1 never executed
        -:  328:    {
    #####:  329:      if (state->deck[player][i] == card) count++;
    $$$$$:  329-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  329-block  1
        -:  330:    }
        -:  331:
    #####:  332:  for (i = 0; i < state->handCount[player]; i++)
    $$$$$:  332-block  0
    $$$$$:  332-block  1
    $$$$$:  332-block  2
branch  0 never executed
branch  1 never executed
        -:  333:    {
    #####:  334:      if (state->hand[player][i] == card) count++;
    $$$$$:  334-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  334-block  1
        -:  335:    }
        -:  336:
    #####:  337:  for (i = 0; i < state->discardCount[player]; i++)
    $$$$$:  337-block  0
    $$$$$:  337-block  1
    $$$$$:  337-block  2
branch  0 never executed
branch  1 never executed
        -:  338:    {
    #####:  339:      if (state->discard[player][i] == card) count++;
    $$$$$:  339-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  339-block  1
        -:  340:    }
        -:  341:
    #####:  342:  return count;
    $$$$$:  342-block  0
        -:  343:}
        -:  344:
function whoseTurn called 18112 returned 100% blocks executed 100%
    18112:  345:int whoseTurn(struct gameState *state) {
    18112:  345-block  0
    18112:  346:  return state->whoseTurn;
    18112:  346-block  0
        -:  347:}
        -:  348:
function endTurn called 0 returned 0% blocks executed 0%
    #####:  349:int endTurn(struct gameState *state) {
    $$$$$:  349-block  0
        -:  350:  int k;
        -:  351:  int i;
    #####:  352:  int currentPlayer = whoseTurn(state);
    $$$$$:  352-block  0
call    0 never executed
        -:  353:  
        -:  354:  //Discard hand
    #####:  355:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    $$$$$:  355-block  0
    $$$$$:  355-block  1
branch  0 never executed
branch  1 never executed
    #####:  356:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  357:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  358:  }
    #####:  359:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  360:    
        -:  361:  //Code for determining the player
    #####:  362:  if (currentPlayer < (state->numPlayers - 1)){ 
    $$$$$:  362-block  0
branch  0 never executed
branch  1 never executed
    #####:  363:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
    $$$$$:  363-block  0
        -:  364:  }
        -:  365:  else{
    #####:  366:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
    $$$$$:  366-block  0
        -:  367:  }
        -:  368:
    #####:  369:  state->outpostPlayed = 0;
    #####:  370:  state->phase = 0;
    #####:  371:  state->numActions = 1;
    #####:  372:  state->coins = 0;
    #####:  373:  state->numBuys = 1;
    #####:  374:  state->playedCardCount = 0;
    #####:  375:  state->handCount[state->whoseTurn] = 0;
        -:  376:
        -:  377:  //int k; move to top
        -:  378:  //Next player draws hand
    #####:  379:  for (k = 0; k < 5; k++){
    $$$$$:  379-block  0
    $$$$$:  379-block  1
branch  0 never executed
branch  1 never executed
    #####:  380:    drawCard(state->whoseTurn, state);//Draw a card
    $$$$$:  380-block  0
call    0 never executed
        -:  381:  }
        -:  382:
        -:  383:  //Update money
    #####:  384:  updateCoins(state->whoseTurn, state , 0);
    $$$$$:  384-block  0
call    0 never executed
        -:  385:
    #####:  386:  return 0;
        -:  387:}
        -:  388:
function isGameOver called 0 returned 0% blocks executed 0%
    #####:  389:int isGameOver(struct gameState *state) {
    $$$$$:  389-block  0
        -:  390:  int i;
        -:  391:  int j;
        -:  392:	
        -:  393:  //if stack of Province cards is empty, the game ends
    #####:  394:  if (state->supplyCount[province] == 0)
    $$$$$:  394-block  0
branch  0 never executed
branch  1 never executed
        -:  395:    {
    #####:  396:      return 1;
    $$$$$:  396-block  0
        -:  397:    }
        -:  398:
        -:  399:  //if three supply pile are at 0, the game ends
    #####:  400:  j = 0;
    #####:  401:  for (i = 0; i < 25; i++)
    $$$$$:  401-block  0
    $$$$$:  401-block  1
    $$$$$:  401-block  2
branch  0 never executed
branch  1 never executed
        -:  402:    {
    #####:  403:      if (state->supplyCount[i] == 0)
    $$$$$:  403-block  0
branch  0 never executed
branch  1 never executed
        -:  404:	{
    #####:  405:	  j++;
    $$$$$:  405-block  0
        -:  406:	}
        -:  407:    }
    #####:  408:  if ( j >= 3)
    $$$$$:  408-block  0
branch  0 never executed
branch  1 never executed
        -:  409:    {
    #####:  410:      return 1;
    $$$$$:  410-block  0
        -:  411:    }
        -:  412:
    #####:  413:  return 0;
    $$$$$:  413-block  0
        -:  414:}
        -:  415:
function scoreFor called 40 returned 100% blocks executed 38%
       40:  416:int scoreFor (int player, struct gameState *state) {
       40:  416-block  0
        -:  417:
        -:  418:  int i;
       40:  419:  int score = 0;
        -:  420:  //score from hand
      240:  421:  for (i = 0; i < state->handCount[player]; i++)
       40:  421-block  0
      200:  421-block  1
      240:  421-block  2
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        -:  422:    {
      200:  423:      if (state->hand[player][i] == curse) { score = score - 1; };
      200:  423-block  0
branch  0 taken 20% (fallthrough)
branch  1 taken 80%
       40:  423-block  1
      200:  424:      if (state->hand[player][i] == estate) { score = score + 1; };
      200:  424-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        8:  424-block  1
      200:  425:      if (state->hand[player][i] == duchy) { score = score + 3; };
      200:  425-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        8:  425-block  1
      200:  426:      if (state->hand[player][i] == province) { score = score + 6; };
      200:  426-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        8:  426-block  1
      200:  427:      if (state->hand[player][i] == great_hall) { score = score + 1; };
      200:  427-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    $$$$$:  427-block  1
      200:  428:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
      200:  428-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    $$$$$:  428-block  1
call    2 never executed
        -:  429:    }
        -:  430:
        -:  431:  //score from discard
       40:  432:  for (i = 0; i < state->discardCount[player]; i++)
       40:  432-block  0
    $$$$$:  432-block  1
       40:  432-block  2
branch  0 taken 0%
branch  1 taken 100% (fallthrough)
        -:  433:    {
    #####:  434:      if (state->discard[player][i] == curse) { score = score - 1; };
    $$$$$:  434-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  434-block  1
    #####:  435:      if (state->discard[player][i] == estate) { score = score + 1; };
    $$$$$:  435-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  435-block  1
    #####:  436:      if (state->discard[player][i] == duchy) { score = score + 3; };
    $$$$$:  436-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  436-block  1
    #####:  437:      if (state->discard[player][i] == province) { score = score + 6; };
    $$$$$:  437-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  437-block  1
    #####:  438:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    $$$$$:  438-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  438-block  1
    #####:  439:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
    $$$$$:  439-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  439-block  1
call    2 never executed
        -:  440:    }
        -:  441:
        -:  442:  //score from deck
       40:  443:  for (i = 0; i < state->discardCount[player]; i++)
       40:  443-block  0
    $$$$$:  443-block  1
       40:  443-block  2
branch  0 taken 0%
branch  1 taken 100% (fallthrough)
        -:  444:    {
    #####:  445:      if (state->deck[player][i] == curse) { score = score - 1; };
    $$$$$:  445-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  445-block  1
    #####:  446:      if (state->deck[player][i] == estate) { score = score + 1; };
    $$$$$:  446-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  446-block  1
    #####:  447:      if (state->deck[player][i] == duchy) { score = score + 3; };
    $$$$$:  447-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  447-block  1
    #####:  448:      if (state->deck[player][i] == province) { score = score + 6; };
    $$$$$:  448-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  448-block  1
    #####:  449:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    $$$$$:  449-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  449-block  1
    #####:  450:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
    $$$$$:  450-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  450-block  1
call    2 never executed
        -:  451:    }
        -:  452:
       40:  453:  return score;
       40:  453-block  0
        -:  454:}
        -:  455:
function getWinners called 0 returned 0% blocks executed 0%
    #####:  456:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
    $$$$$:  456-block  0
        -:  457:  int i;	
        -:  458:  int j;
        -:  459:  int highScore;
        -:  460:  int currentPlayer;
        -:  461:
        -:  462:  //get score for each player
    #####:  463:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  463-block  0
    $$$$$:  463-block  1
    $$$$$:  463-block  2
branch  0 never executed
branch  1 never executed
        -:  464:    {
        -:  465:      //set unused player scores to -9999
    #####:  466:      if (i >= state->numPlayers)
    $$$$$:  466-block  0
branch  0 never executed
branch  1 never executed
        -:  467:	{
    #####:  468:	  players[i] = -9999;
    $$$$$:  468-block  0
        -:  469:	}
        -:  470:      else
        -:  471:	{
    #####:  472:	  players[i] = scoreFor (i, state);
    $$$$$:  472-block  0
call    0 never executed
        -:  473:	}
        -:  474:    }
        -:  475:
        -:  476:  //find highest score
    #####:  477:  j = 0;
    #####:  478:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  478-block  0
    $$$$$:  478-block  1
    $$$$$:  478-block  2
branch  0 never executed
branch  1 never executed
        -:  479:    {
    #####:  480:      if (players[i] > players[j])
    $$$$$:  480-block  0
branch  0 never executed
branch  1 never executed
        -:  481:	{
    #####:  482:	  j = i;
    $$$$$:  482-block  0
        -:  483:	}
        -:  484:    }
    #####:  485:  highScore = players[j];
        -:  486:
        -:  487:  //add 1 to players who had less turns
    #####:  488:  currentPlayer = whoseTurn(state);
    $$$$$:  488-block  0
call    0 never executed
    #####:  489:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  489-block  0
    $$$$$:  489-block  1
branch  0 never executed
branch  1 never executed
        -:  490:    {
    #####:  491:      if ( players[i] == highScore && i > currentPlayer )
    $$$$$:  491-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  491-block  1
branch  2 never executed
branch  3 never executed
        -:  492:	{
    #####:  493:	  players[i]++;
    $$$$$:  493-block  0
        -:  494:	}
        -:  495:    }
        -:  496:
        -:  497:  //find new highest score
    #####:  498:  j = 0;
    #####:  499:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  499-block  0
    $$$$$:  499-block  1
    $$$$$:  499-block  2
branch  0 never executed
branch  1 never executed
        -:  500:    {
    #####:  501:      if ( players[i] > players[j] )
    $$$$$:  501-block  0
branch  0 never executed
branch  1 never executed
        -:  502:	{
    #####:  503:	  j = i;
    $$$$$:  503-block  0
        -:  504:	}
        -:  505:    }
    #####:  506:  highScore = players[j];
        -:  507:
        -:  508:  //set winners in array to 1 and rest to 0
    #####:  509:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  509-block  0
    $$$$$:  509-block  1
    $$$$$:  509-block  2
branch  0 never executed
branch  1 never executed
        -:  510:    {
    #####:  511:      if ( players[i] == highScore )
    $$$$$:  511-block  0
branch  0 never executed
branch  1 never executed
        -:  512:	{
    #####:  513:	  players[i] = 1;
    $$$$$:  513-block  0
        -:  514:	}
        -:  515:      else
        -:  516:	{
    #####:  517:	  players[i] = 0;
    $$$$$:  517-block  0
        -:  518:	}
        -:  519:    }
        -:  520:
    #####:  521:  return 0;
    $$$$$:  521-block  0
        -:  522:}
        -:  523:
function drawCard called 5350875 returned 100% blocks executed 100%
  5350875:  524:int drawCard(int player, struct gameState *state)
  5350875:  524-block  0
        -:  525:{	int count;
        -:  526:  int deckCounter;
  5350875:  527:  if (state->deckCount[player] <= 0){//Deck is empty
  5350875:  527-block  0
branch  0 taken 28% (fallthrough)
branch  1 taken 72%
        -:  528:    
        -:  529:    //Step 1 Shuffle the discard pile back into a deck
        -:  530:    int i;
        -:  531:    //Move discard to deck
  4796407:  532:    for (i = 0; i < state->discardCount[player];i++){
  1496533:  532-block  0
  3299874:  532-block  1
  4796407:  532-block  2
branch  0 taken 69%
branch  1 taken 31% (fallthrough)
  3299874:  533:      state->deck[player][i] = state->discard[player][i];
  3299874:  534:      state->discard[player][i] = -1;
        -:  535:    }
        -:  536:
  1496533:  537:    state->deckCount[player] = state->discardCount[player];
  1496533:  538:    state->discardCount[player] = 0;//Reset discard
        -:  539:
        -:  540:    //Shufffle the deck
  1496533:  541:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
  1496533:  541-block  0
call    0 returned 100%
        -:  542:   
        -:  543:    if (DEBUG){//Debug statements
        -:  544:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  545:    }
        -:  546:    
  1496533:  547:    state->discardCount[player] = 0;
        -:  548:
        -:  549:    //Step 2 Draw Card
  1496533:  550:    count = state->handCount[player];//Get current player's hand count
        -:  551:    
        -:  552:    if (DEBUG){//Debug statements
        -:  553:      printf("Current hand count: %d\n", count);
        -:  554:    }
        -:  555:    
  1496533:  556:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  557:
  1496533:  558:    if (deckCounter == 0)
  1496533:  558-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
  1483392:  559:      return -1;
  1483392:  559-block  0
        -:  560:
    13141:  561:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    13141:  562:    state->deckCount[player]--;
    13141:  563:    state->handCount[player]++;//Increment hand count
    13141:  563-block  0
        -:  564:  }
        -:  565:
        -:  566:  else{
  3854342:  567:    int count = state->handCount[player];//Get current hand count for player
  3854342:  567-block  0
        -:  568:    int deckCounter;
        -:  569:    if (DEBUG){//Debug statements
        -:  570:      printf("Current hand count: %d\n", count);
        -:  571:    }
        -:  572:
  3854342:  573:    deckCounter = state->deckCount[player];//Create holder for the deck count
  3854342:  574:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
  3854342:  575:    state->deckCount[player]--;
  3854342:  576:    state->handCount[player]++;//Increment hand count
  3854342:  576-block  0
        -:  577:  }
        -:  578:
  3867483:  579:  return 0;
  3867483:  579-block  0
        -:  580:}
        -:  581:
function getCost called 0 returned 0% blocks executed 0%
    #####:  582:int getCost(int cardNumber)
    $$$$$:  582-block  0
        -:  583:{
    #####:  584:  switch( cardNumber ) 
    $$$$$:  584-block  0
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
branch 18 never executed
branch 19 never executed
branch 20 never executed
branch 21 never executed
branch 22 never executed
branch 23 never executed
branch 24 never executed
branch 25 never executed
branch 26 never executed
branch 27 never executed
        -:  585:    {
        -:  586:    case curse:
    #####:  587:      return 0;
    $$$$$:  587-block  0
        -:  588:    case estate:
    #####:  589:      return 2;
    $$$$$:  589-block  0
        -:  590:    case duchy:
    #####:  591:      return 5;
    $$$$$:  591-block  0
        -:  592:    case province:
    #####:  593:      return 8;
    $$$$$:  593-block  0
        -:  594:    case copper:
    #####:  595:      return 0;
    $$$$$:  595-block  0
        -:  596:    case silver:
    #####:  597:      return 3;
    $$$$$:  597-block  0
        -:  598:    case gold:
    #####:  599:      return 6;
    $$$$$:  599-block  0
        -:  600:    case adventurer:
    #####:  601:      return 6;
    $$$$$:  601-block  0
        -:  602:    case council_room:
    #####:  603:      return 5;
    $$$$$:  603-block  0
        -:  604:    case feast:
    #####:  605:      return 4;
    $$$$$:  605-block  0
        -:  606:    case gardens:
    #####:  607:      return 4;
    $$$$$:  607-block  0
        -:  608:    case mine:
    #####:  609:      return 5;
    $$$$$:  609-block  0
        -:  610:    case remodel:
    #####:  611:      return 4;
    $$$$$:  611-block  0
        -:  612:    case smithy:
    #####:  613:      return 4;
    $$$$$:  613-block  0
        -:  614:    case village:
    #####:  615:      return 3;
    $$$$$:  615-block  0
        -:  616:    case baron:
    #####:  617:      return 4;
    $$$$$:  617-block  0
        -:  618:    case great_hall:
    #####:  619:      return 3;
    $$$$$:  619-block  0
        -:  620:    case minion:
    #####:  621:      return 5;
    $$$$$:  621-block  0
        -:  622:    case steward:
    #####:  623:      return 3;
    $$$$$:  623-block  0
        -:  624:    case tribute:
    #####:  625:      return 5;
    $$$$$:  625-block  0
        -:  626:    case ambassador:
    #####:  627:      return 3;
    $$$$$:  627-block  0
        -:  628:    case cutpurse:
    #####:  629:      return 4;
    $$$$$:  629-block  0
        -:  630:    case embargo: 
    #####:  631:      return 2;
    $$$$$:  631-block  0
        -:  632:    case outpost:
    #####:  633:      return 5;
    $$$$$:  633-block  0
        -:  634:    case salvager:
    #####:  635:      return 4;
    $$$$$:  635-block  0
        -:  636:    case sea_hag:
    #####:  637:      return 4;
    $$$$$:  637-block  0
        -:  638:    case treasure_map:
    #####:  639:      return 4;
    $$$$$:  639-block  0
        -:  640:    }
        -:  641:	
    #####:  642:  return -1;
    $$$$$:  642-block  0
        -:  643:}
        -:  644:
        -:  645:/****************************************************************************************************
        -:  646:* Start of card functions
        -:  647:*****************************************************************************************************/
        -:  648:
function playSmithy called 8 returned 100% blocks executed 100%
        8:  649:int playSmithy(struct gameState *state, int handPos) {
        8:  649-block  0
        -:  650:	//+3 Cards
        8:  651:	int currentPlayer = whoseTurn(state);
        8:  651-block  0
call    0 returned 100%
        -:  652:	int i;
       40:  653:    for (i = 0; i <= 3; i++)
       40:  653-block  0
branch  0 taken 80%
branch  1 taken 20% (fallthrough)
        -:  654:	{
       32:  655:		drawCard(currentPlayer, state);
       32:  655-block  0
call    0 returned 100%
        -:  656:	}
        -:  657:			
        -:  658:	//discard card from hand
        8:  659:	discardCard(handPos, currentPlayer, state, 1);
        8:  659-block  0
call    0 returned 100%
        8:  660:	return 0;
        -:  661:}
        -:  662:
function playAdventurer called 5024 returned 100% blocks executed 100%
     5024:  663:int playAdventurer(struct gameState *state) {
     5024:  663-block  0
     5024:  664:	int currentPlayer = whoseTurn(state);
     5024:  664-block  0
call    0 returned 100%
     5024:  665:	int drawntreasure =0;
        -:  666:	int cardDrawn;
        -:  667:	int temphand[MAX_HAND]; 
     5024:  668:	int z = 0;
        -:  669:
  5275622:  670:	while(drawntreasure<2){
  5275622:  670-block  0
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
  5270598:  671:		if (state->deckCount[currentPlayer] <1){//if the deck is empty we need to shuffle discard and add to deck
  5270598:  671-block  0
branch  0 taken 28% (fallthrough)
branch  1 taken 72%
  1485337:  672:		  shuffle(currentPlayer, state);
  1485337:  672-block  0
call    0 returned 100%
        -:  673:		}
  5270598:  674:		drawCard(currentPlayer, state);
  5270598:  674-block  0
call    0 returned 100%
  5270598:  675:		cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-2];//top card of hand is most recently drawn card.
  5270598:  676:		if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold) {
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
  5260719:  676-block  0
branch  2 taken 99% (fallthrough)
branch  3 taken 1%
  5260608:  676-block  1
branch  4 taken 1% (fallthrough)
branch  5 taken 99%
    10048:  677:		  drawntreasure++;
    10048:  677-block  0
        -:  678:    }
        -:  679:		else{
  5260550:  680:      z++;
  5260550:  681:		  temphand[z]=cardDrawn;
  5260550:  682:		  state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
  5260550:  682-block  0
        -:  683:    }
        -:  684:  }
  1273892:  685:  while(z>=0){
     5024:  685-block  0
  1273892:  685-block  1
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
  1268868:  686:    state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
  1268868:  687:    z=z-1;
  1268868:  687-block  0
        -:  688:  }
     5024:  689:  return 0;
     5024:  689-block  0
        -:  690:}
        -:  691:
function playMine called 0 returned 0% blocks executed 0%
    #####:  692:int playMine(struct gameState *state, int choice1, int choice2, int handPos) {
    $$$$$:  692-block  0
    #####:  693:	int currentPlayer = whoseTurn(state);
    $$$$$:  693-block  0
call    0 never executed
        -:  694:	int i, j;
    #####:  695:	int z = 0;
    #####:  696:	j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  697:
    #####:  698:	if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold)
branch  0 never executed
branch  1 never executed
    $$$$$:  698-block  0
branch  2 never executed
branch  3 never executed
        -:  699:	{
    #####:  700:	  return -1;
    $$$$$:  700-block  0
        -:  701:	}
        -:  702:
    #####:  703:	if (choice2 > z || choice2 < curse)
    $$$$$:  703-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  703-block  1
branch  2 never executed
branch  3 never executed
        -:  704:	{
    #####:  705:		return -1;
    $$$$$:  705-block  0
        -:  706:	}
        -:  707:
    #####:  708:	if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) )
    $$$$$:  708-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  709:	{
    #####:  710:		return -1;
    $$$$$:  710-block  0
        -:  711:	}
        -:  712:
    #####:  713:	gainCard(choice1, state, 2, currentPlayer);
    $$$$$:  713-block  0
call    0 never executed
        -:  714:
        -:  715:	//discard card from hand
    #####:  716:	discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  717:
        -:  718:	//discard trashed card
    #####:  719:	for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$:  719-block  0
    $$$$$:  719-block  1
branch  0 never executed
branch  1 never executed
        -:  720:	{
    #####:  721:		if (state->hand[currentPlayer][i] == j)
    $$$$$:  721-block  0
branch  0 never executed
branch  1 never executed
        -:  722:		{
    #####:  723:			discardCard(i, currentPlayer, state, 0);			
    $$$$$:  723-block  0
call    0 never executed
    #####:  724:			break;
        -:  725:		}
        -:  726:	}
        -:  727:		
    #####:  728:	return 0;
    $$$$$:  728-block  0
        -:  729:}
        -:  730:
function playVillage called 4016 returned 100% blocks executed 100%
     4016:  731:int playVillage(struct gameState *state, int handPos) {
     4016:  731-block  0
     4016:  732:	int currentPlayer = whoseTurn(state);
     4016:  732-block  0
call    0 returned 100%
        -:  733:
        -:  734:	//+1 Card
     4016:  735:	drawCard(currentPlayer, state);
call    0 returned 100%
        -:  736:
        -:  737:	//+2 Actions
     4016:  738:	state->numActions = state->numActions + 2;
        -:  739:
        -:  740:	//discard played card from hand
     4016:  741:	discardCard(handPos, currentPlayer, state, 0);
call    0 returned 100%
     4016:  742:	return 0;
        -:  743:}
        -:  744:
function playRemodel called 0 returned 0% blocks executed 0%
    #####:  745:int playRemodel(struct gameState *state, int choice1, int choice2, int handPos) {
    $$$$$:  745-block  0
        -:  746:	int i, j;
    #####:  747:	int currentPlayer = whoseTurn(state);
    $$$$$:  747-block  0
call    0 never executed
        -:  748: 
        -:  749:
    #####:  750:	j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  751:
    #####:  752:	if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  753:	{
    #####:  754:		return -1;
    $$$$$:  754-block  0
        -:  755:	}
        -:  756:
    #####:  757:	gainCard(choice2, state, 0, currentPlayer);
    $$$$$:  757-block  0
call    0 never executed
        -:  758:
        -:  759:	//discard card from hand
    #####:  760:	discardCard(handPos+1, currentPlayer, state, 0);
call    0 never executed
        -:  761:
        -:  762:	//discard trashed card
    #####:  763:	for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$:  763-block  0
    $$$$$:  763-block  1
branch  0 never executed
branch  1 never executed
        -:  764:		{
    #####:  765:		if (state->hand[currentPlayer][i] == j)
    $$$$$:  765-block  0
branch  0 never executed
branch  1 never executed
        -:  766:		{
    #####:  767:			discardCard(i+1, currentPlayer, state, 0);			
    $$$$$:  767-block  0
call    0 never executed
    #####:  768:			break;
        -:  769:		}
        -:  770:	}
        -:  771:
    #####:  772:	return 0;
    $$$$$:  772-block  0
        -:  773:}
        -:  774:
function cardEffect called 9064 returned 100% blocks executed 17%
     9064:  775:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
     9064:  775-block  0
        -:  776:{
        -:  777:  int i;
        -:  778:  int j;
        -:  779:  int k;
        -:  780:  int x;
        -:  781:  int index;
     9064:  782:  int currentPlayer = whoseTurn(state);
     9064:  782-block  0
call    0 returned 100%
     9064:  783:  int nextPlayer = currentPlayer + 1;
        -:  784:
     9064:  785:  int tributeRevealedCards[2] = {-1, -1};
        -:  786:  int temphand[MAX_HAND];// moved above the if statement
     9064:  787:  int drawntreasure=0;
        -:  788:  int cardDrawn;
     9064:  789:  int z = 0;// this is the counter for the temp hand
     9064:  790:  if (nextPlayer > (state->numPlayers - 1)){
branch  0 taken 35% (fallthrough)
branch  1 taken 65%
     3217:  791:    nextPlayer = 0;
     3217:  791-block  0
        -:  792:  }
        -:  793:  
        -:  794:	
        -:  795:  //uses switch to select card and perform actions
     9064:  796:  switch( card ) 
     9064:  796-block  0
branch  0 taken 55%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
branch  5 taken 0%
branch  6 taken 1%
branch  7 taken 44%
branch  8 taken 0%
branch  9 taken 0%
branch 10 taken 0%
branch 11 taken 1%
branch 12 taken 0%
branch 13 taken 0%
branch 14 taken 0%
branch 15 taken 0%
branch 16 taken 0%
branch 17 taken 0%
branch 18 taken 0%
branch 19 taken 0%
branch 20 taken 0%
        -:  797:    {
        -:  798:    case adventurer:
     5024:  799:      playAdventurer(state);
     5024:  799-block  0
call    0 returned 100%
        -:  800:			
        -:  801:    case council_room:
        -:  802:      //+4 Cards
    25120:  803:      for (i = 0; i < 4; i++)
     5024:  803-block  0
    25120:  803-block  1
branch  0 taken 80%
branch  1 taken 20% (fallthrough)
        -:  804:	{
    20096:  805:	  drawCard(currentPlayer, state);
    20096:  805-block  0
call    0 returned 100%
        -:  806:	}
        -:  807:			
        -:  808:      //+1 Buy
     5024:  809:      state->numBuys++;
        -:  810:			
        -:  811:      //Each other player draws a card
    20145:  812:      for (i = 0; i < state->numPlayers; i++)
     5024:  812-block  0
    15121:  812-block  1
    20145:  812-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  813:	{
    15121:  814:	  if ( i != currentPlayer )
    15121:  814-block  0
branch  0 taken 67% (fallthrough)
branch  1 taken 33%
        -:  815:	    {
    10097:  816:	      drawCard(i, state);
    10097:  816-block  0
call    0 returned 100%
        -:  817:	    }
        -:  818:	}
        -:  819:			
        -:  820:      //put played card in played card pile
     5024:  821:      discardCard(handPos, currentPlayer, state, 0);
     5024:  821-block  0
call    0 returned 100%
        -:  822:			
     5024:  823:      return 0;
        -:  824:			
        -:  825:    case feast:
        -:  826:      //gain card with cost up to 5
        -:  827:      //Backup hand
    #####:  828:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    $$$$$:  828-block  0
    $$$$$:  828-block  1
    $$$$$:  828-block  2
branch  0 never executed
branch  1 never executed
    #####:  829:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  830:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  831:      }
        -:  832:      //Backup hand
        -:  833:
        -:  834:      //Update Coins for Buy
    #####:  835:      updateCoins(currentPlayer, state, 5);
    $$$$$:  835-block  0
call    0 never executed
    #####:  836:      x = 1;//Condition to loop on
    #####:  837:      while( x == 1) {//Buy one card
    $$$$$:  837-block  0
branch  0 never executed
branch  1 never executed
    #####:  838:	if (supplyCount(choice1, state) <= 0){
    $$$$$:  838-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  839:	  if (DEBUG)
        -:  840:	    printf("None of that card left, sorry!\n");
        -:  841:
        -:  842:	  if (DEBUG){
        -:  843:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  844:	  }
        -:  845:	}
    #####:  846:	else if (state->coins < getCost(choice1)){
    $$$$$:  846-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  847:	  printf("That card is too expensive!\n");
    $$$$$:  847-block  0
call    0 never executed
        -:  848:
        -:  849:	  if (DEBUG){
        -:  850:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  851:	  }
        -:  852:	}
        -:  853:	else{
        -:  854:
        -:  855:	  if (DEBUG){
        -:  856:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  857:	  }
        -:  858:
    #####:  859:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    $$$$$:  859-block  0
call    0 never executed
    #####:  860:	  x = 0;//No more buying cards
        -:  861:
        -:  862:	  if (DEBUG){
        -:  863:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  864:	  }
        -:  865:
        -:  866:	}
        -:  867:      }     
        -:  868:
        -:  869:      //Reset Hand
    #####:  870:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    $$$$$:  870-block  0
    $$$$$:  870-block  1
    $$$$$:  870-block  2
branch  0 never executed
branch  1 never executed
    #####:  871:	state->hand[currentPlayer][i] = temphand[i];
    #####:  872:	temphand[i] = -1;
        -:  873:      }
        -:  874:      //Reset Hand
        -:  875:      			
    #####:  876:      return 0;
    $$$$$:  876-block  0
        -:  877:			
        -:  878:    case gardens:
    #####:  879:      return -1;
    $$$$$:  879-block  0
        -:  880:			
        -:  881:    case mine:
    #####:  882:   	  playMine(state, choice1, choice2, handPos);
    $$$$$:  882-block  0
call    0 never executed
        -:  883:			
        -:  884:    case remodel:
    #####:  885:      playRemodel(state, choice1, choice2, handPos);
    $$$$$:  885-block  0
call    0 never executed
        -:  886:		
        -:  887:    case smithy:
        8:  888:      playSmithy(state, handPos);
        8:  888-block  0
call    0 returned 100%
        -:  889:		
        -:  890:    case village:
     4016:  891:      playVillage(state, handPos);
     4016:  891-block  0
call    0 returned 100%
        -:  892:		
        -:  893:    case baron:
     4016:  894:      state->numBuys++;//Increase buys by 1!
     4016:  895:      if (choice1 > 0){//Boolean true or going to discard an estate
     4016:  895-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  896:	int p = 0;//Iterator for hand!
    #####:  897:	int card_not_discarded = 1;//Flag for discard set!
    #####:  898:	while(card_not_discarded){
    $$$$$:  898-block  0
    $$$$$:  898-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:  898-block  2
    #####:  899:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    $$$$$:  899-block  0
branch  0 never executed
branch  1 never executed
    #####:  900:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  901:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  902:	    state->discardCount[currentPlayer]++;
    #####:  903:	    for (;p < state->handCount[currentPlayer]; p++){
    $$$$$:  903-block  0
    $$$$$:  903-block  1
    $$$$$:  903-block  2
branch  0 never executed
branch  1 never executed
    #####:  904:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  905:	    }
    #####:  906:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  907:	    state->handCount[currentPlayer]--;
    #####:  908:	    card_not_discarded = 0;//Exit the loop
    $$$$$:  908-block  0
        -:  909:	  }
    #####:  910:	  else if (p > state->handCount[currentPlayer]){
    $$$$$:  910-block  0
branch  0 never executed
branch  1 never executed
        -:  911:	    if(DEBUG) {
        -:  912:	      printf("No estate cards in your hand, invalid choice\n");
        -:  913:	      printf("Must gain an estate if there are any\n");
        -:  914:	    }
    #####:  915:	    if (supplyCount(estate, state) > 0){
    $$$$$:  915-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  916:	      gainCard(estate, state, 0, currentPlayer);
    $$$$$:  916-block  0
call    0 never executed
    #####:  917:	      state->supplyCount[estate]--;//Decrement estates
    #####:  918:	      if (supplyCount(estate, state) == 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  919:		isGameOver(state);
    $$$$$:  919-block  0
call    0 never executed
        -:  920:	      }
        -:  921:	    }
    #####:  922:	    card_not_discarded = 0;//Exit the loop
    $$$$$:  922-block  0
        -:  923:	  }
        -:  924:			    
        -:  925:	  else{
    #####:  926:	    p++;//Next card
    $$$$$:  926-block  0
        -:  927:	  }
        -:  928:	}
        -:  929:      }
        -:  930:			    
        -:  931:      else{
     4016:  932:	if (supplyCount(estate, state) > 0){
     4016:  932-block  0
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
     4016:  933:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
     4016:  933-block  0
call    0 returned 100%
     4016:  934:	  state->supplyCount[estate]--;//Decrement Estates
     4016:  935:	  if (supplyCount(estate, state) == 0){
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:  936:	    isGameOver(state);
    $$$$$:  936-block  0
call    0 never executed
        -:  937:	  }
        -:  938:	}
        -:  939:      }
        -:  940:	    
        -:  941:      
     4016:  942:      return 0;
     4016:  942-block  0
        -:  943:		
        -:  944:    case great_hall:
        -:  945:      //+1 Card
    #####:  946:      drawCard(currentPlayer, state);
    $$$$$:  946-block  0
call    0 never executed
        -:  947:			
        -:  948:      //+1 Actions
    #####:  949:      state->numActions++;
        -:  950:			
        -:  951:      //discard card from hand
    #####:  952:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####:  953:      return 0;
        -:  954:		
        -:  955:    case minion:
        -:  956:      //+1 action
    #####:  957:      state->numActions++;
        -:  958:			
        -:  959:      //discard card from hand
    #####:  960:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$:  960-block  0
call    0 never executed
        -:  961:			
    #####:  962:      if (choice1)		//+2 coins
branch  0 never executed
branch  1 never executed
        -:  963:	{
    #####:  964:	  state->coins = state->coins + 2;
    $$$$$:  964-block  0
        -:  965:	}
        -:  966:			
    #####:  967:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
    $$$$$:  967-block  0
branch  0 never executed
branch  1 never executed
        -:  968:	{
        -:  969:	  //discard hand
    #####:  970:	  while(numHandCards(state) > 0)
    $$$$$:  970-block  0
    $$$$$:  970-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  971:	    {
    #####:  972:	      discardCard(handPos, currentPlayer, state, 0);
    $$$$$:  972-block  0
call    0 never executed
        -:  973:	    }
        -:  974:				
        -:  975:	  //draw 4
    #####:  976:	  for (i = 0; i < 4; i++)
    $$$$$:  976-block  0
    $$$$$:  976-block  1
branch  0 never executed
branch  1 never executed
        -:  977:	    {
    #####:  978:	      drawCard(currentPlayer, state);
    $$$$$:  978-block  0
call    0 never executed
        -:  979:	    }
        -:  980:				
        -:  981:	  //other players discard hand and redraw if hand size > 4
    #####:  982:	  for (i = 0; i < state->numPlayers; i++)
    $$$$$:  982-block  0
    $$$$$:  982-block  1
    $$$$$:  982-block  2
branch  0 never executed
branch  1 never executed
        -:  983:	    {
    #####:  984:	      if (i != currentPlayer)
    $$$$$:  984-block  0
branch  0 never executed
branch  1 never executed
        -:  985:		{
    #####:  986:		  if ( state->handCount[i] > 4 )
    $$$$$:  986-block  0
branch  0 never executed
branch  1 never executed
        -:  987:		    {
        -:  988:		      //discard hand
    #####:  989:		      while( state->handCount[i] > 0 )
    $$$$$:  989-block  0
    $$$$$:  989-block  1
branch  0 never executed
branch  1 never executed
        -:  990:			{
    #####:  991:			  discardCard(handPos, i, state, 0);
    $$$$$:  991-block  0
call    0 never executed
        -:  992:			}
        -:  993:							
        -:  994:		      //draw 4
    #####:  995:		      for (j = 0; j < 4; j++)
    $$$$$:  995-block  0
    $$$$$:  995-block  1
branch  0 never executed
branch  1 never executed
        -:  996:			{
    #####:  997:			  drawCard(i, state);
    $$$$$:  997-block  0
call    0 never executed
        -:  998:			}
        -:  999:		    }
        -: 1000:		}
        -: 1001:	    }
        -: 1002:				
        -: 1003:	}
    #####: 1004:      return 0;
    $$$$$: 1004-block  0
        -: 1005:		
        -: 1006:    case steward:
       24: 1007:      if (choice1 == 1)
       24: 1007-block  0
branch  0 taken 33% (fallthrough)
branch  1 taken 67%
        -: 1008:	{
        -: 1009:	  //+2 cards
        8: 1010:	  drawCard(currentPlayer, state);
        8: 1010-block  0
call    0 returned 100%
        8: 1011:	  drawCard(currentPlayer, state);
call    0 returned 100%
        -: 1012:	}
       16: 1013:      else if (choice1 == 2)
       16: 1013-block  0
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
        -: 1014:	{
        -: 1015:	  //+2 coins
        8: 1016:	  state->coins = state->coins + 2;
        8: 1016-block  0
        -: 1017:	}
        -: 1018:      else
        -: 1019:	{
        -: 1020:	  //trash 2 cards in hand
        8: 1021:	  discardCard(choice2, currentPlayer, state, 1);
        8: 1021-block  0
call    0 returned 100%
        8: 1022:	  discardCard(choice3, currentPlayer, state, 1);
call    0 returned 100%
        -: 1023:	}
        -: 1024:			
        -: 1025:      //discard card from hand
       24: 1026:      discardCard(handPos, currentPlayer, state, 0);
       24: 1026-block  0
call    0 returned 100%
       24: 1027:      return 0;
        -: 1028:		
        -: 1029:    case tribute:
    #####: 1030:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    $$$$$: 1030-block  0
branch  0 never executed
branch  1 never executed
    #####: 1031:	if (state->deckCount[nextPlayer] > 0){
    $$$$$: 1031-block  0
branch  0 never executed
branch  1 never executed
    #####: 1032:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1033:	  state->deckCount[nextPlayer]--;
    $$$$$: 1033-block  0
        -: 1034:	}
    #####: 1035:	else if (state->discardCount[nextPlayer] > 0){
    $$$$$: 1035-block  0
branch  0 never executed
branch  1 never executed
    #####: 1036:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1037:	  state->discardCount[nextPlayer]--;
    $$$$$: 1037-block  0
        -: 1038:	}
        -: 1039:	else{
        -: 1040:	  //No Card to Reveal
        -: 1041:	  if (DEBUG){
        -: 1042:	    printf("No cards to reveal\n");
        -: 1043:	  }
        -: 1044:	}
        -: 1045:      }
        -: 1046:	    
        -: 1047:      else{
    #####: 1048:	if (state->deckCount[nextPlayer] == 0){
    $$$$$: 1048-block  0
branch  0 never executed
branch  1 never executed
    #####: 1049:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    $$$$$: 1049-block  0
    $$$$$: 1049-block  1
    $$$$$: 1049-block  2
branch  0 never executed
branch  1 never executed
    #####: 1050:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1051:	    state->deckCount[nextPlayer]++;
    #####: 1052:	    state->discard[nextPlayer][i] = -1;
    #####: 1053:	    state->discardCount[nextPlayer]--;
        -: 1054:	  }
        -: 1055:			    
    #####: 1056:	  shuffle(nextPlayer,state);//Shuffle the deck
    $$$$$: 1056-block  0
call    0 never executed
        -: 1057:	} 
    #####: 1058:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1059:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1060:	state->deckCount[nextPlayer]--;
    #####: 1061:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1062:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1063:	state->deckCount[nextPlayer]--;
    $$$$$: 1063-block  0
        -: 1064:      }    
        -: 1065:		       
    #####: 1066:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one 
    $$$$$: 1066-block  0
branch  0 never executed
branch  1 never executed
    #####: 1067:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1068:	state->playedCardCount++;
    #####: 1069:	tributeRevealedCards[1] = -1;
    $$$$$: 1069-block  0
        -: 1070:      }
        -: 1071:
    #####: 1072:      for (i = 0; i <= 2; i ++){
    $$$$$: 1072-block  0
    $$$$$: 1072-block  1
    $$$$$: 1072-block  2
branch  0 never executed
branch  1 never executed
    #####: 1073:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    $$$$$: 1073-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1073-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1073-block  2
branch  4 never executed
branch  5 never executed
    #####: 1074:	  state->coins += 2;
    $$$$$: 1074-block  0
        -: 1075:	}
        -: 1076:		    
    #####: 1077:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    $$$$$: 1077-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1077-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1077-block  2
branch  4 never executed
branch  5 never executed
    $$$$$: 1077-block  3
branch  6 never executed
branch  7 never executed
    $$$$$: 1077-block  4
branch  8 never executed
branch  9 never executed
    #####: 1078:	  drawCard(currentPlayer, state);
    $$$$$: 1078-block  0
call    0 never executed
    #####: 1079:	  drawCard(currentPlayer, state);
call    0 never executed
        -: 1080:	}
        -: 1081:	else{//Action Card
    #####: 1082:	  state->numActions = state->numActions + 2;
    $$$$$: 1082-block  0
        -: 1083:	}
        -: 1084:      }
        -: 1085:	    
    #####: 1086:      return 0;
    $$$$$: 1086-block  0
        -: 1087:		
        -: 1088:    case ambassador:
    #####: 1089:      j = 0;		//used to check if player has enough cards to discard
        -: 1090:
    #####: 1091:      if (choice2 > 2 || choice2 < 0)
    $$$$$: 1091-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1091-block  1
branch  2 never executed
branch  3 never executed
        -: 1092:	{
    #####: 1093:	  return -1;				
    $$$$$: 1093-block  0
        -: 1094:	}
        -: 1095:
    #####: 1096:      if (choice1 == handPos)
    $$$$$: 1096-block  0
branch  0 never executed
branch  1 never executed
        -: 1097:	{
    #####: 1098:	  return -1;
    $$$$$: 1098-block  0
        -: 1099:	}
        -: 1100:
    #####: 1101:      for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1101-block  0
    $$$$$: 1101-block  1
    $$$$$: 1101-block  2
branch  0 never executed
branch  1 never executed
        -: 1102:	{
    #####: 1103:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
    $$$$$: 1103-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1103-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1103-block  2
branch  4 never executed
branch  5 never executed
        -: 1104:	    {
    #####: 1105:	      j++;
    $$$$$: 1105-block  0
        -: 1106:	    }
        -: 1107:	}
    #####: 1108:      if (j < choice2)
    $$$$$: 1108-block  0
branch  0 never executed
branch  1 never executed
        -: 1109:	{
    #####: 1110:	  return -1;				
    $$$$$: 1110-block  0
        -: 1111:	}
        -: 1112:
        -: 1113:      if (DEBUG) 
        -: 1114:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1115:
        -: 1116:      //increase supply count for choosen card by amount being discarded
    #####: 1117:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1118:			
        -: 1119:      //each other player gains a copy of revealed card
    #####: 1120:      for (i = 0; i < state->numPlayers; i++)
    $$$$$: 1120-block  0
    $$$$$: 1120-block  1
    $$$$$: 1120-block  2
branch  0 never executed
branch  1 never executed
        -: 1121:	{
    #####: 1122:	  if (i != currentPlayer)
    $$$$$: 1122-block  0
branch  0 never executed
branch  1 never executed
        -: 1123:	    {
    #####: 1124:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
    $$$$$: 1124-block  0
call    0 never executed
        -: 1125:	    }
        -: 1126:	}
        -: 1127:
        -: 1128:      //discard played card from hand
    #####: 1129:      discardCard(handPos, currentPlayer, state, 0);			
    $$$$$: 1129-block  0
call    0 never executed
        -: 1130:
        -: 1131:      //trash copies of cards returned to supply
    #####: 1132:      for (j = 0; j < choice2; j++)
    $$$$$: 1132-block  0
    $$$$$: 1132-block  1
branch  0 never executed
branch  1 never executed
        -: 1133:	{
    #####: 1134:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1134-block  0
    $$$$$: 1134-block  1
    $$$$$: 1134-block  2
branch  0 never executed
branch  1 never executed
        -: 1135:	    {
    #####: 1136:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
    $$$$$: 1136-block  0
branch  0 never executed
branch  1 never executed
        -: 1137:		{
    #####: 1138:		  discardCard(i, currentPlayer, state, 1);
    $$$$$: 1138-block  0
call    0 never executed
    #####: 1139:		  break;
        -: 1140:		}
        -: 1141:	    }
        -: 1142:	}			
        -: 1143:
    #####: 1144:      return 0;
    $$$$$: 1144-block  0
        -: 1145:		
        -: 1146:    case cutpurse:
        -: 1147:
    #####: 1148:      updateCoins(currentPlayer, state, 2);
    $$$$$: 1148-block  0
call    0 never executed
    #####: 1149:      for (i = 0; i < state->numPlayers; i++)
    $$$$$: 1149-block  0
    $$$$$: 1149-block  1
branch  0 never executed
branch  1 never executed
        -: 1150:	{
    #####: 1151:	  if (i != currentPlayer)
    $$$$$: 1151-block  0
branch  0 never executed
branch  1 never executed
        -: 1152:	    {
    #####: 1153:	      for (j = 0; j < state->handCount[i]; j++)
    $$$$$: 1153-block  0
    $$$$$: 1153-block  1
    $$$$$: 1153-block  2
branch  0 never executed
branch  1 never executed
        -: 1154:		{
    #####: 1155:		  if (state->hand[i][j] == copper)
    $$$$$: 1155-block  0
branch  0 never executed
branch  1 never executed
        -: 1156:		    {
    #####: 1157:		      discardCard(j, i, state, 0);
    $$$$$: 1157-block  0
call    0 never executed
    #####: 1158:		      break;
        -: 1159:		    }
    #####: 1160:		  if (j == state->handCount[i])
    $$$$$: 1160-block  0
branch  0 never executed
branch  1 never executed
        -: 1161:		    {
    #####: 1162:		      for (k = 0; k < state->handCount[i]; k++)
    $$$$$: 1162-block  0
    $$$$$: 1162-block  1
    $$$$$: 1162-block  2
branch  0 never executed
branch  1 never executed
        -: 1163:			{
        -: 1164:			  if (DEBUG)
        -: 1165:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1166:			}	
    #####: 1167:		      break;
    $$$$$: 1167-block  0
        -: 1168:		    }		
        -: 1169:		}
        -: 1170:					
        -: 1171:	    }
        -: 1172:				
        -: 1173:	}				
        -: 1174:
        -: 1175:      //discard played card from hand
    #####: 1176:      discardCard(handPos, currentPlayer, state, 0);			
    $$$$$: 1176-block  0
call    0 never executed
        -: 1177:
    #####: 1178:      return 0;
        -: 1179:
        -: 1180:		
        -: 1181:    case embargo: 
        -: 1182:      //+2 Coins
    #####: 1183:      state->coins = state->coins + 2;
        -: 1184:			
        -: 1185:      //see if selected pile is in play
    #####: 1186:      if ( state->supplyCount[choice1] == -1 )
    $$$$$: 1186-block  0
branch  0 never executed
branch  1 never executed
        -: 1187:	{
    #####: 1188:	  return -1;
    $$$$$: 1188-block  0
        -: 1189:	}
        -: 1190:			
        -: 1191:      //add embargo token to selected supply pile
    #####: 1192:      state->embargoTokens[choice1]++;
        -: 1193:			
        -: 1194:      //trash card
    #####: 1195:      discardCard(handPos, currentPlayer, state, 1);		
    $$$$$: 1195-block  0
call    0 never executed
    #####: 1196:      return 0;
        -: 1197:		
        -: 1198:    case outpost:
        -: 1199:      //set outpost flag
    #####: 1200:      state->outpostPlayed++;
        -: 1201:			
        -: 1202:      //discard card
    #####: 1203:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$: 1203-block  0
call    0 never executed
    #####: 1204:      return 0;
        -: 1205:		
        -: 1206:    case salvager:
        -: 1207:      //+1 buy
    #####: 1208:      state->numBuys++;
        -: 1209:			
    #####: 1210:      if (choice1)
    $$$$$: 1210-block  0
branch  0 never executed
branch  1 never executed
        -: 1211:	{
        -: 1212:	  //gain coins equal to trashed card
    #####: 1213:	  state->coins = state->coins + getCost( handCard(choice1, state) );
    $$$$$: 1213-block  0
call    0 never executed
call    1 never executed
        -: 1214:	  //trash card
    #####: 1215:	  discardCard(choice1, currentPlayer, state, 1);	
call    0 never executed
        -: 1216:	}
        -: 1217:			
        -: 1218:      //discard card
    #####: 1219:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$: 1219-block  0
call    0 never executed
    #####: 1220:      return 0;
        -: 1221:		
        -: 1222:    case sea_hag:
    #####: 1223:      for (i = 0; i < state->numPlayers; i++){
    $$$$$: 1223-block  0
    $$$$$: 1223-block  1
    $$$$$: 1223-block  2
branch  0 never executed
branch  1 never executed
    #####: 1224:	if (i != currentPlayer){
    $$$$$: 1224-block  0
branch  0 never executed
branch  1 never executed
    #####: 1225:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1226:	  state->discardCount[i]++;
    #####: 1227:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
    $$$$$: 1227-block  0
        -: 1228:	}
        -: 1229:      }
    #####: 1230:      return 0;
    $$$$$: 1230-block  0
        -: 1231:		
        -: 1232:    case treasure_map:
        -: 1233:      //search hand for another treasure_map
    #####: 1234:      index = -1;
    #####: 1235:      for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1235-block  0
    $$$$$: 1235-block  1
    $$$$$: 1235-block  2
branch  0 never executed
branch  1 never executed
        -: 1236:	{
    #####: 1237:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
    $$$$$: 1237-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1237-block  1
branch  2 never executed
branch  3 never executed
        -: 1238:	    {
    #####: 1239:	      index = i;
    #####: 1240:	      break;
    $$$$$: 1240-block  0
        -: 1241:	    }
        -: 1242:	}
    #####: 1243:      if (index > -1)
    $$$$$: 1243-block  0
branch  0 never executed
branch  1 never executed
        -: 1244:	{
        -: 1245:	  //trash both treasure cards
    #####: 1246:	  discardCard(handPos, currentPlayer, state, 1);
    $$$$$: 1246-block  0
call    0 never executed
    #####: 1247:	  discardCard(index, currentPlayer, state, 1);
call    0 never executed
        -: 1248:
        -: 1249:	  //gain 4 Gold cards
    #####: 1250:	  for (i = 0; i < 4; i++)
    $$$$$: 1250-block  0
branch  0 never executed
branch  1 never executed
        -: 1251:	    {
    #####: 1252:	      gainCard(gold, state, 1, currentPlayer);
    $$$$$: 1252-block  0
call    0 never executed
        -: 1253:	    }
        -: 1254:				
        -: 1255:	  //return success
    #####: 1256:	  return 1;
    $$$$$: 1256-block  0
        -: 1257:	}
        -: 1258:			
        -: 1259:      //no second treasure_map found in hand
    #####: 1260:      return -1;
    $$$$$: 1260-block  0
        -: 1261:    }
        -: 1262:	
     9064: 1263:  return -1;
    $$$$$: 1263-block  0
     9064: 1263-block  1
        -: 1264:}
        -: 1265:
function discardCard called 9151 returned 100% blocks executed 89%
     9151: 1266:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
     9151: 1266-block  0
        -: 1267:{
        -: 1268:	
        -: 1269:  //if card is not trashed, added to Played pile 
     9151: 1270:  if (trashFlag < 1)
     9151: 1270-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
        -: 1271:    {
        -: 1272:      //add card to played pile
     9119: 1273:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos]; 
     9119: 1274:      state->playedCardCount++;
     9119: 1274-block  0
        -: 1275:    }
        -: 1276:	
        -: 1277:  //set played card to -1
     9151: 1278:  state->hand[currentPlayer][handPos] = -1;
        -: 1279:	
        -: 1280:  //remove card from player's hand
     9151: 1281:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
     9151: 1281-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1282:    {
        -: 1283:      //reduce number of cards in hand
       26: 1284:      state->handCount[currentPlayer]--;
       26: 1284-block  0
        -: 1285:    }
     9125: 1286:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
     9125: 1286-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -: 1287:    {
        -: 1288:      //reduce number of cards in hand
    #####: 1289:      state->handCount[currentPlayer]--;
    $$$$$: 1289-block  0
        -: 1290:    }
        -: 1291:  else 	
        -: 1292:    {
        -: 1293:      //replace discarded card with last card in hand
     9125: 1294:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1295:      //set last card to -1
     9125: 1296:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1297:      //reduce number of cards in hand
     9125: 1298:      state->handCount[currentPlayer]--;
     9125: 1298-block  0
        -: 1299:    }
        -: 1300:	
     9151: 1301:  return 0;
     9151: 1301-block  0
        -: 1302:}
        -: 1303:
function gainCard called 4048 returned 100% blocks executed 100%
     4048: 1304:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
     4048: 1304-block  0
        -: 1305:{
        -: 1306:  //Note: supplyPos is enum of choosen card
        -: 1307:	
        -: 1308:  //check if supply pile is empty (0) or card is not used in game (-1)
     4048: 1309:  if ( supplyCount(supplyPos, state) < 1 )
     4048: 1309-block  0
call    0 returned 100%
branch  1 taken 1% (fallthrough)
branch  2 taken 99%
        -: 1310:    {
        8: 1311:      return -1;
        8: 1311-block  0
        -: 1312:    }
        -: 1313:	
        -: 1314:  //added card for [whoseTurn] current player:
        -: 1315:  // toFlag = 0 : add to discard
        -: 1316:  // toFlag = 1 : add to deck
        -: 1317:  // toFlag = 2 : add to hand
        -: 1318:
     4040: 1319:  if (toFlag == 1)
     4040: 1319-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1320:    {
        8: 1321:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
        8: 1322:      state->deckCount[player]++;
        8: 1322-block  0
        -: 1323:    }
     4032: 1324:  else if (toFlag == 2)
     4032: 1324-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1325:    {
        8: 1326:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
        8: 1327:      state->handCount[player]++;
        8: 1327-block  0
        -: 1328:    }
        -: 1329:  else
        -: 1330:    {
     4024: 1331:      state->discard[player][ state->discardCount[player] ] = supplyPos;
     4024: 1332:      state->discardCount[player]++;
     4024: 1332-block  0
        -: 1333:    }
        -: 1334:	
        -: 1335:  //decrease number in supply pile
     4040: 1336:  state->supplyCount[supplyPos]--;
        -: 1337:	 
     4040: 1338:  return 0;
     4040: 1338-block  0
        -: 1339:}
        -: 1340:
function updateCoins called 9240 returned 100% blocks executed 100%
     9240: 1341:int updateCoins(int player, struct gameState *state, int bonus)
     9240: 1341-block  0
        -: 1342:{
        -: 1343:  int i;
        -: 1344:	
        -: 1345:  //reset coin count
     9240: 1346:  state->coins = 0;
        -: 1347:
        -: 1348:  //add coins for each Treasure card in player's hand
    55440: 1349:  for (i = 0; i < state->handCount[player]; i++)
     9240: 1349-block  0
    46200: 1349-block  1
    55440: 1349-block  2
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        -: 1350:    {
    46200: 1351:      if (state->hand[player][i] == copper)
    46200: 1351-block  0
branch  0 taken 70% (fallthrough)
branch  1 taken 30%
        -: 1352:	{
    32415: 1353:	  state->coins += 1;
    32415: 1353-block  0
        -: 1354:	}
    13785: 1355:      else if (state->hand[player][i] == silver)
    13785: 1355-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1356:	{
       45: 1357:	  state->coins += 2;
       45: 1357-block  0
        -: 1358:	}
    13740: 1359:      else if (state->hand[player][i] == gold)
    13740: 1359-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1360:	{
       45: 1361:	  state->coins += 3;
       45: 1361-block  0
        -: 1362:	}	
        -: 1363:    }	
        -: 1364:
        -: 1365:  //add bonus
     9240: 1366:  state->coins += bonus;
        -: 1367:
     9240: 1368:  return 0;
     9240: 1368-block  0
        -: 1369:}
        -: 1370:
        -: 1371:
        -: 1372:/************************************************
        -: 1373:Start of function unit tests
        -: 1374:*************************************************/
        -: 1375:
function testUpdateCoins called 0 returned 0% blocks executed 0%
    #####: 1376:int testUpdateCoins(int player, struct gameState *state, int bonus) {
    $$$$$: 1376-block  0
        -: 1377:  
    #####: 1378:}
        -: 1379:
        -: 1380:
        -: 1381://end of dominion.c
        -: 1382:
----------------- Random Testing Card: adventurer ----------------
Iteration 0
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 1
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 2
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 3
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 4
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 5
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 6
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 7
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 8
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 9
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 10
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 11
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 12
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 13
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 14
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 15
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 16
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 17
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 18
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 19
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 20
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 21
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 22
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 23
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 24
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 25
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 26
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 27
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 28
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 29
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 30
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 31
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 32
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 33
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 34
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 35
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 36
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 37
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 38
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 39
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 40
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 41
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 42
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 43
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 44
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 45
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 46
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 47
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 48
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 49
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 50
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 51
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 52
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 53
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 54
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 55
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 56
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 57
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 58
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 59
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 60
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 61
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 62
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 63
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 64
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 65
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 66
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 67
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 68
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 69
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 70
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 71
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 72
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 73
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 74
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 75
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 76
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 77
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 78
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 79
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 80
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 81
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 82
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 83
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 84
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 85
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 86
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 87
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 88
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 89
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 90
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 91
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 92
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 93
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 94
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 95
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 96
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 97
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 98
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 99
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 100
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 101
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 102
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 103
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 104
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 105
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 106
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 107
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 108
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 109
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 110
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 111
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 112
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 113
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 114
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 115
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 116
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 117
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 118
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 119
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 120
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 121
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 122
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 123
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 124
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 125
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 126
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 127
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 128
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 129
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 130
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 131
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 132
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 133
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 134
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 135
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 136
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 137
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 138
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 139
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 140
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 141
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 142
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 143
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 144
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 145
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 146
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 147
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 148
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 149
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 150
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 151
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 152
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 153
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 154
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 155
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 156
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 157
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 158
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 159
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 160
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 161
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 162
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 163
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 164
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 165
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 166
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 167
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 168
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 169
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 170
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 171
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 172
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 173
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 174
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 175
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 176
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 177
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 178
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 179
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 180
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 181
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 182
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 183
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 184
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 185
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 186
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 187
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 188
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 189
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 190
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 191
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 192
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 193
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 194
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 195
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 196
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 197
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 198
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 199
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 200
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 201
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 202
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 203
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 204
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 205
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 206
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 207
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 208
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 209
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 210
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 211
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 212
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 213
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 214
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 215
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 216
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 217
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 218
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 219
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 220
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 221
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 222
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 223
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 224
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 225
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 226
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 227
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 228
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 229
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 230
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 231
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 232
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 233
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 234
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 235
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 236
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 237
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 238
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 239
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 240
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 241
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 242
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 243
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 244
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 245
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 246
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 247
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 248
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 249
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 250
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 251
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 252
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 253
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 254
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 255
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 256
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 257
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 258
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 259
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 260
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 261
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 262
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 263
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 264
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 265
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 266
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 267
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 268
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 269
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 270
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 271
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 272
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 273
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 274
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 275
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 276
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 277
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 278
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 279
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 280
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 281
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 282
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 283
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 284
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 285
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 286
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 287
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 288
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 289
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 290
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 291
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 292
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 293
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 294
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 295
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 296
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 297
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 298
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 299
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 300
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 301
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 302
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 303
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 304
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 305
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 306
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 307
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 308
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 309
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 310
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 311
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 312
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 313
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 314
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 315
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 316
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 317
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 318
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 319
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 320
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 321
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 322
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 323
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 324
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 325
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 326
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 327
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 328
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 329
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 330
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 331
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 332
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 333
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 334
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 335
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 336
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 337
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 338
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 339
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 340
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 341
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 342
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 343
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 344
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 345
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 346
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 347
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 348
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 349
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 350
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 351
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 352
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 353
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 354
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 355
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 356
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 357
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 358
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 359
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 360
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 361
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 362
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 363
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 364
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 365
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 366
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 367
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 368
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 369
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 370
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 371
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 372
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 373
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 374
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 375
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 376
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 377
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 378
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 379
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 380
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 381
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 382
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 383
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 384
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 385
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 386
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 387
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 388
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 389
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 390
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 391
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 392
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 393
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 394
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 395
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 396
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 397
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 398
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 399
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 400
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 401
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 402
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 403
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 404
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 405
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 406
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 407
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 408
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 409
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 410
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 411
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 412
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 413
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 414
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 415
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 416
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 417
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 418
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 419
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 420
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 421
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 422
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 423
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 424
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 425
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 426
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 427
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 428
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 429
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 430
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 431
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 432
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 433
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 434
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 435
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 436
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 437
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 438
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 439
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 440
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 441
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 442
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 443
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 444
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 445
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 446
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 447
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 448
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 449
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 450
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 451
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 452
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 453
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 454
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 455
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 456
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 457
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 458
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 459
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 460
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 461
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 462
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 463
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 464
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 465
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 466
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 467
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 468
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 469
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 470
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 471
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 472
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 473
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 474
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 475
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 476
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 477
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 478
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 479
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 480
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 481
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 482
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 483
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 484
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 485
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 486
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 487
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 488
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 489
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 490
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 491
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 492
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 493
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 494
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 495
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 496
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 497
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 498
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 499
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 500
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 501
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 502
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 503
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 504
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 505
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 506
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 507
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 508
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 509
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 510
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 511
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 512
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 513
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 514
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 515
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 516
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 517
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 518
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 519
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 520
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 521
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 522
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 523
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 524
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 525
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 526
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 527
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 528
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 529
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 530
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 531
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 532
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 533
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 534
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 535
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 536
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 537
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 538
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 539
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 540
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 541
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 542
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 543
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 544
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 545
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 546
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 547
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 548
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 549
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 550
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 551
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 552
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 553
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 554
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 555
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 556
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 557
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 558
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 559
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 560
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 561
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 562
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 563
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 564
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 565
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 566
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 567
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 568
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 569
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 570
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 571
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 572
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 573
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 574
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 575
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 576
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 577
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 578
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 579
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 580
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 581
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 582
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 583
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 584
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 585
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 586
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 587
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 588
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 589
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 590
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 591
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 592
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 593
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 594
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 595
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 596
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 597
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 598
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 599
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 600
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 601
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 602
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 603
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 604
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 605
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 606
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 607
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 608
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 609
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 610
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 611
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 612
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 613
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 614
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 615
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 616
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 617
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 618
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 619
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 620
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 621
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 622
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 623
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 624
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 625
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 626
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 627
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 628
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 629
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 630
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 631
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 632
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 633
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 634
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 635
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 636
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 637
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 638
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 639
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 640
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 641
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 642
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 643
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 644
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 645
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 646
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 647
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 648
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 649
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 650
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 651
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 652
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 653
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 654
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 655
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 656
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 657
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 658
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 659
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 660
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 661
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 662
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 663
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 664
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 665
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 666
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 667
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 668
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 669
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 670
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 671
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 672
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 673
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 674
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 675
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 676
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 677
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 678
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 679
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 680
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 681
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 682
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 683
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 684
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 685
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 686
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 687
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 688
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 689
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 690
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 691
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 692
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 693
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 694
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 695
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 696
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 697
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 698
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 699
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 700
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 701
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 702
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 703
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 704
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 705
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 706
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 707
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 708
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 709
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 710
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 711
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 712
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 713
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 714
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 715
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 716
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 717
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 718
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 719
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 720
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 721
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 722
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 723
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 724
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 725
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 726
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 727
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 728
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 729
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 730
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 731
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 732
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 733
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 734
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 735
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 736
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 737
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 738
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 739
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 740
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 741
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 742
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 743
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 744
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 745
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 746
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 747
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 748
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 749
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 750
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 751
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 752
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 753
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 754
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 755
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 756
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 757
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 758
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 759
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 760
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 761
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 762
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 763
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 764
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 765
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 766
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 767
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 768
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 769
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 770
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 771
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 772
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 773
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 774
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 775
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 776
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 777
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 778
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 779
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 780
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 781
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 782
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 783
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 784
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 785
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 786
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 787
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 788
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 789
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 790
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 791
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 792
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 793
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 794
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 795
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 796
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 797
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 798
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 799
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 800
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 801
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 802
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 803
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 804
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 805
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 806
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 807
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 808
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 809
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 810
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 811
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 812
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 813
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 814
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 815
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 816
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 817
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 818
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 819
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 820
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 821
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 822
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 823
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 824
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 825
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 826
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 827
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 828
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 829
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 830
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 831
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 832
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 833
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 834
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 835
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 836
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 837
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 838
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 839
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 840
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 841
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 842
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 843
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 844
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 845
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 846
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 847
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 848
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 849
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 850
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 851
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 852
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 853
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 854
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 855
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 856
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 857
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 858
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 859
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 860
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 861
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 862
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 863
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 864
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 865
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 866
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 867
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 868
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 869
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 870
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 871
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 872
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 873
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 874
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 875
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 876
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 877
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 878
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 879
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 880
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 881
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 882
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 883
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 884
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 885
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 886
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 887
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 888
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 889
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 890
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 891
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 892
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 893
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 894
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 895
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 896
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 897
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 898
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 899
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 900
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 901
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 902
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 903
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 904
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 905
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 906
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 907
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 908
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 909
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 910
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 911
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 912
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 913
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 914
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 915
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 916
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 917
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 918
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 919
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 920
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 921
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 922
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 923
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 924
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 925
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 926
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 927
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 928
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 929
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 930
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 931
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 932
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 933
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 934
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 935
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 936
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 937
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 938
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 939
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 940
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 941
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 942
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 943
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 944
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 945
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 946
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 947
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 948
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 949
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 950
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 951
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 952
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 953
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 954
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 955
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 956
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 957
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 958
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 959
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 960
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 961
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 962
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 963
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 964
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 965
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 966
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 967
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 968
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 969
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 970
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 971
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 972
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 973
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 974
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 975
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 976
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 977
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 978
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 979
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 980
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 981
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 982
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 983
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 984
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 985
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 986
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 987
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 988
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 989
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 990
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 991
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 992
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 993
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 994
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 995
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 996
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 997
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 998
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 999
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
File 'dominion.c'
Lines executed:41.62% of 567
Branches executed:45.32% of 417
Taken at least once:31.41% of 417
Calls executed:40.00% of 100
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:10
        -:    0:Programs:10
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
function compare called 74877 returned 100% blocks executed 100%
    74877:    8:int compare(const void* a, const void* b) {
    74877:    8-block  0
    74877:    9:  if (*(int*)a > *(int*)b)
    74877:    9-block  0
branch  0 taken 8% (fallthrough)
branch  1 taken 92%
     6097:   10:    return 1;
     6097:   10-block  0
    68780:   11:  if (*(int*)a < *(int*)b)
    68780:   11-block  0
branch  0 taken 18% (fallthrough)
branch  1 taken 82%
    12191:   12:    return -1;
    12191:   12-block  0
    56589:   13:  return 0;
    56589:   13-block  0
        -:   14:}
        -:   15:
function newGame called 0 returned 0% blocks executed 0%
    #####:   16:struct gameState* newGame() {
    $$$$$:   16-block  0
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
    $$$$$:   18-block  0
        -:   19:}
        -:   20:
function kingdomCards called 0 returned 0% blocks executed 0%
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
    $$$$$:   21-block  0
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
    $$$$$:   34-block  0
        -:   35:}
        -:   36:
function initializeGame called 1026 returned 100% blocks executed 94%
     1026:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
     1026:   37-block  0
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;			
        -:   43:  //set up random number generator
     1026:   44:  SelectStream(1);
     1026:   44-block  0
call    0 returned 100%
     1026:   45:  PutSeed((long)randomSeed);
call    0 returned 100%
        -:   46:  
        -:   47:  //check number of players
     1026:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
     1026:   48-block  0
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:   49:    {
    #####:   50:      return -1;
    $$$$$:   50-block  0
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
     1026:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    11286:   57:  for (i = 0; i < 10; i++)
     1026:   57-block  0
    10260:   57-block  1
    11286:   57-block  2
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
        -:   58:    {
   112860:   59:      for (j = 0; j < 10; j++)
    10260:   59-block  0
   102600:   59-block  1
   112860:   59-block  2
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
        -:   60:        {
   102600:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
   102600:   61-block  0
branch  0 taken 90% (fallthrough)
branch  1 taken 10%
    92340:   61-block  1
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:   62:	    {
    #####:   63:	      return -1;
    $$$$$:   63-block  0
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
     1026:   73:  if (numPlayers == 2)
     1026:   73-block  0
branch  0 taken 36% (fallthrough)
branch  1 taken 64%
        -:   74:    {
      370:   75:      state->supplyCount[curse] = 10;
      370:   75-block  0
        -:   76:    }
      656:   77:  else if (numPlayers == 3)
      656:   77-block  0
branch  0 taken 49% (fallthrough)
branch  1 taken 51%
        -:   78:    {
      323:   79:      state->supplyCount[curse] = 20;
      323:   79-block  0
        -:   80:    }
        -:   81:  else
        -:   82:    {
      333:   83:      state->supplyCount[curse] = 30;
      333:   83-block  0
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
     1026:   87:  if (numPlayers == 2)
     1026:   87-block  0
branch  0 taken 36% (fallthrough)
branch  1 taken 64%
        -:   88:    {
      370:   89:      state->supplyCount[estate] = 8;
      370:   90:      state->supplyCount[duchy] = 8;
      370:   91:      state->supplyCount[province] = 8;
      370:   91-block  0
        -:   92:    }
        -:   93:  else
        -:   94:    {
      656:   95:      state->supplyCount[estate] = 12;
      656:   96:      state->supplyCount[duchy] = 12;
      656:   97:      state->supplyCount[province] = 12;
      656:   97-block  0
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
     1026:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
     1026:  102:  state->supplyCount[silver] = 40;
     1026:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    21546:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
     1026:  106-block  0
    20520:  106-block  1
    21546:  106-block  2
branch  0 taken 95%
branch  1 taken 5% (fallthrough)
        -:  107:    {
   169290:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
    20520:  108-block  0
   148770:  108-block  1
   169290:  108-block  2
branch  0 taken 94%
branch  1 taken 6% (fallthrough)
        -:  109:	{
   159030:  110:	  if (kingdomCards[j] == i)
   159030:  110-block  0
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    10260:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
    10260:  113-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
    10243:  113-block  1
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
        -:  114:		{
       68:  115:		  if (numPlayers == 2){ 
       34:  115-block  0
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
       34:  115-block  1
       34:  116:		    state->supplyCount[i] = 8; 
       34:  116-block  0
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
    $$$$$:  118-block  0
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    10226:  122:		  state->supplyCount[i] = 10;
    10226:  122-block  0
        -:  123:		}
    10260:  124:	      break;
    10260:  124-block  0
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
   148770:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
     4067:  138:  for (i = 0; i < numPlayers; i++)
     1026:  138-block  0
     3041:  138-block  1
     4067:  138-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  139:    {
     3041:  140:      state->deckCount[i] = 0;
    12164:  141:      for (j = 0; j < 3; j++)
     3041:  141-block  0
     9123:  141-block  1
    12164:  141-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  142:	{
     9123:  143:	  state->deck[i][j] = estate;
     9123:  144:	  state->deckCount[i]++;
        -:  145:	}
    24328:  146:      for (j = 3; j < 10; j++)
     3041:  146-block  0
    21287:  146-block  1
    24328:  146-block  2
branch  0 taken 88%
branch  1 taken 13% (fallthrough)
        -:  147:	{
    21287:  148:	  state->deck[i][j] = copper;	  state->deckCount[i]++;		
        -:  149:	}
        -:  150:    }
        -:  151:
        -:  152:  //shuffle player decks
     4067:  153:  for (i = 0; i < numPlayers; i++)
     1026:  153-block  0
     3041:  153-block  1
     4067:  153-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  154:    {
     3041:  155:      if ( shuffle(i, state) < 0 )
     3041:  155-block  0
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
        -:  156:	{
    #####:  157:	  return -1;
    $$$$$:  157-block  0
        -:  158:	}
        -:  159:    }
        -:  160:
        -:  161:  //draw player hands
     4067:  162:  for (i = 0; i < numPlayers; i++)
     1026:  162-block  0
     3041:  162-block  1
     4067:  162-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  163:    {  
        -:  164:      //initialize hand size to zero
     3041:  165:      state->handCount[i] = 0;
     3041:  166:      state->discardCount[i] = 0;
        -:  167:      //draw 5 cards
        -:  168:      // for (j = 0; j < 5; j++)
        -:  169:      //	{
        -:  170:      //	  drawCard(i, state);
        -:  171:      //	}
        -:  172:    }
        -:  173:  
        -:  174:  //set embargo tokens to 0 for all supply piles
    28728:  175:  for (i = 0; i <= treasure_map; i++)
     1026:  175-block  0
    27702:  175-block  1
    28728:  175-block  2
branch  0 taken 96%
branch  1 taken 4% (fallthrough)
        -:  176:    {
    27702:  177:      state->embargoTokens[i] = 0;
        -:  178:    }
        -:  179:
        -:  180:  //initialize first player's turn
     1026:  181:  state->outpostPlayed = 0;
     1026:  182:  state->phase = 0;
     1026:  183:  state->numActions = 1;
     1026:  184:  state->numBuys = 1;
     1026:  185:  state->playedCardCount = 0;
     1026:  186:  state->whoseTurn = 0;
     1026:  187:  state->handCount[state->whoseTurn] = 0;
        -:  188:  //int it; move to top
        -:  189:
        -:  190:  //Moved draw cards to here, only drawing at the start of a turn
     6156:  191:  for (it = 0; it < 5; it++){
     1026:  191-block  0
     6156:  191-block  1
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
     5130:  192:    drawCard(state->whoseTurn, state);
     5130:  192-block  0
call    0 returned 100%
        -:  193:  }
        -:  194:
     1026:  195:  updateCoins(state->whoseTurn, state, 0);
     1026:  195-block  0
call    0 returned 100%
        -:  196:
     1026:  197:  return 0;
        -:  198:}
        -:  199:
function shuffle called 6644 returned 100% blocks executed 100%
     6644:  200:int shuffle(int player, struct gameState *state) {
     6644:  200-block  0
        -:  201: 
        -:  202:
        -:  203:  int newDeck[MAX_DECK];
     6644:  204:  int newDeckPos = 0;
        -:  205:  int card;
        -:  206:  int i;
        -:  207:
     6644:  208:  if (state->deckCount[player] < 1)
     6644:  208-block  0
branch  0 taken 54% (fallthrough)
branch  1 taken 46%
     3577:  209:    return -1;
     3577:  209-block  0
     3067:  210:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare); 
     3067:  210-block  0
call    0 returned 100%
        -:  211:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  212:
    39342:  213:  while (state->deckCount[player] > 0) {
    39342:  213-block  0
branch  0 taken 92%
branch  1 taken 8% (fallthrough)
    36275:  214:    card = floor(Random() * state->deckCount[player]);
    36275:  214-block  0
call    0 returned 100%
    36275:  215:    newDeck[newDeckPos] = state->deck[player][card];
    36275:  216:    newDeckPos++;
   588648:  217:    for (i = card; i < state->deckCount[player]-1; i++) {
   552373:  217-block  0
   588648:  217-block  1
branch  0 taken 94%
branch  1 taken 6% (fallthrough)
   552373:  218:      state->deck[player][i] = state->deck[player][i+1];
        -:  219:    }
    36275:  220:    state->deckCount[player]--;
    36275:  220-block  0
        -:  221:  }
    39342:  222:  for (i = 0; i < newDeckPos; i++) {
     3067:  222-block  0
    36275:  222-block  1
    39342:  222-block  2
branch  0 taken 92%
branch  1 taken 8% (fallthrough)
    36275:  223:    state->deck[player][i] = newDeck[i];
    36275:  224:    state->deckCount[player]++;
        -:  225:  }
        -:  226:
     6644:  227:  return 0;
     3067:  227-block  0
     6644:  227-block  1
        -:  228:}
        -:  229:
function playCard called 0 returned 0% blocks executed 0%
    #####:  230:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state) 
    $$$$$:  230-block  0
        -:  231:{	
        -:  232:  int card;
    #####:  233:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  234:
        -:  235:  //check if it is the right phase
    #####:  236:  if (state->phase != 0)
    $$$$$:  236-block  0
branch  0 never executed
branch  1 never executed
        -:  237:    {
    #####:  238:      return -1;
    $$$$$:  238-block  0
        -:  239:    }
        -:  240:	
        -:  241:  //check if player has enough actions
    #####:  242:  if ( state->numActions < 1 )
    $$$$$:  242-block  0
branch  0 never executed
branch  1 never executed
        -:  243:    {
    #####:  244:      return -1;
    $$$$$:  244-block  0
        -:  245:    }
        -:  246:	
        -:  247:  //get card played
    #####:  248:  card = handCard(handPos, state);
    $$$$$:  248-block  0
call    0 never executed
        -:  249:	
        -:  250:  //check if selected card is an action
    #####:  251:  if ( card < adventurer || card > treasure_map )
branch  0 never executed
branch  1 never executed
    $$$$$:  251-block  0
branch  2 never executed
branch  3 never executed
        -:  252:    {
    #####:  253:      return -1;
    $$$$$:  253-block  0
        -:  254:    }
        -:  255:	
        -:  256:  //play card
    #####:  257:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
    $$$$$:  257-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  258:    {
    #####:  259:      return -1;
    $$$$$:  259-block  0
        -:  260:    }
        -:  261:	
        -:  262:  //reduce number of actions
    #####:  263:  state->numActions--;
        -:  264:
        -:  265:  //update coins (Treasure cards may be added with card draws)
    #####:  266:  updateCoins(state->whoseTurn, state, coin_bonus);
    $$$$$:  266-block  0
call    0 never executed
        -:  267:	
    #####:  268:  return 0;
    $$$$$:  268-block  0
        -:  269:}
        -:  270:
function buyCard called 0 returned 0% blocks executed 0%
    #####:  271:int buyCard(int supplyPos, struct gameState *state) {
    $$$$$:  271-block  0
    $$$$$:  271-block  1
        -:  272:  int who;
        -:  273:  if (DEBUG){
        -:  274:    printf("Entering buyCard...\n");
        -:  275:  }
        -:  276:
        -:  277:  // I don't know what to do about the phase thing.
        -:  278:
    #####:  279:  who = state->whoseTurn;
        -:  280:
    #####:  281:  if (state->numBuys < 1){
    $$$$$:  281-block  0
branch  0 never executed
branch  1 never executed
        -:  282:    if (DEBUG)
        -:  283:      printf("You do not have any buys left\n");
    #####:  284:    return -1;
    $$$$$:  284-block  0
    #####:  285:  } else if (supplyCount(supplyPos, state) <1){
    $$$$$:  285-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  286:    if (DEBUG)
        -:  287:      printf("There are not any of that type of card left\n");
    #####:  288:    return -1;
    $$$$$:  288-block  0
    #####:  289:  } else if (state->coins < getCost(supplyPos)){
    $$$$$:  289-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  290:    if (DEBUG) 
        -:  291:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  292:    return -1;
    $$$$$:  292-block  0
        -:  293:  } else {
    #####:  294:    state->phase=1;
        -:  295:    //state->supplyCount[supplyPos]--;
    #####:  296:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
    $$$$$:  296-block  0
call    0 never executed
        -:  297:  
    #####:  298:    state->coins = (state->coins) - (getCost(supplyPos));
call    0 never executed
    #####:  299:    state->numBuys--;
        -:  300:    if (DEBUG)
        -:  301:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  302:  }
        -:  303:
        -:  304:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  305:  //state->discardCount[who]++;
        -:  306:    
    #####:  307:  return 0;
    $$$$$:  307-block  0
        -:  308:}
        -:  309:
function numHandCards called 0 returned 0% blocks executed 0%
    #####:  310:int numHandCards(struct gameState *state) {
    $$$$$:  310-block  0
    #####:  311:  return state->handCount[ whoseTurn(state) ];
    $$$$$:  311-block  0
call    0 never executed
        -:  312:}
        -:  313:
function handCard called 0 returned 0% blocks executed 0%
    #####:  314:int handCard(int handPos, struct gameState *state) {
    $$$$$:  314-block  0
    #####:  315:  int currentPlayer = whoseTurn(state);
    $$$$$:  315-block  0
call    0 never executed
    #####:  316:  return state->hand[currentPlayer][handPos];
        -:  317:}
        -:  318:
function supplyCount called 14 returned 100% blocks executed 100%
       14:  319:int supplyCount(int card, struct gameState *state) {
       14:  319-block  0
       14:  320:  return state->supplyCount[card];
       14:  320-block  0
        -:  321:}
        -:  322:
function fullDeckCount called 0 returned 0% blocks executed 0%
    #####:  323:int fullDeckCount(int player, int card, struct gameState *state) {
    $$$$$:  323-block  0
        -:  324:  int i;
    #####:  325:  int count = 0;
        -:  326:
    #####:  327:  for (i = 0; i < state->deckCount[player]; i++)
    $$$$$:  327-block  0
    $$$$$:  327-block  1
    $$$$$:  327-block  2
branch  0 never executed
branch  1 never executed
        -:  328:    {
    #####:  329:      if (state->deck[player][i] == card) count++;
    $$$$$:  329-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  329-block  1
        -:  330:    }
        -:  331:
    #####:  332:  for (i = 0; i < state->handCount[player]; i++)
    $$$$$:  332-block  0
    $$$$$:  332-block  1
    $$$$$:  332-block  2
branch  0 never executed
branch  1 never executed
        -:  333:    {
    #####:  334:      if (state->hand[player][i] == card) count++;
    $$$$$:  334-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  334-block  1
        -:  335:    }
        -:  336:
    #####:  337:  for (i = 0; i < state->discardCount[player]; i++)
    $$$$$:  337-block  0
    $$$$$:  337-block  1
    $$$$$:  337-block  2
branch  0 never executed
branch  1 never executed
        -:  338:    {
    #####:  339:      if (state->discard[player][i] == card) count++;
    $$$$$:  339-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  339-block  1
        -:  340:    }
        -:  341:
    #####:  342:  return count;
    $$$$$:  342-block  0
        -:  343:}
        -:  344:
function whoseTurn called 2018 returned 100% blocks executed 100%
     2018:  345:int whoseTurn(struct gameState *state) {
     2018:  345-block  0
     2018:  346:  return state->whoseTurn;
     2018:  346-block  0
        -:  347:}
        -:  348:
function endTurn called 0 returned 0% blocks executed 0%
    #####:  349:int endTurn(struct gameState *state) {
    $$$$$:  349-block  0
        -:  350:  int k;
        -:  351:  int i;
    #####:  352:  int currentPlayer = whoseTurn(state);
    $$$$$:  352-block  0
call    0 never executed
        -:  353:  
        -:  354:  //Discard hand
    #####:  355:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    $$$$$:  355-block  0
    $$$$$:  355-block  1
branch  0 never executed
branch  1 never executed
    #####:  356:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  357:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  358:  }
    #####:  359:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  360:    
        -:  361:  //Code for determining the player
    #####:  362:  if (currentPlayer < (state->numPlayers - 1)){ 
    $$$$$:  362-block  0
branch  0 never executed
branch  1 never executed
    #####:  363:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
    $$$$$:  363-block  0
        -:  364:  }
        -:  365:  else{
    #####:  366:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
    $$$$$:  366-block  0
        -:  367:  }
        -:  368:
    #####:  369:  state->outpostPlayed = 0;
    #####:  370:  state->phase = 0;
    #####:  371:  state->numActions = 1;
    #####:  372:  state->coins = 0;
    #####:  373:  state->numBuys = 1;
    #####:  374:  state->playedCardCount = 0;
    #####:  375:  state->handCount[state->whoseTurn] = 0;
        -:  376:
        -:  377:  //int k; move to top
        -:  378:  //Next player draws hand
    #####:  379:  for (k = 0; k < 5; k++){
    $$$$$:  379-block  0
    $$$$$:  379-block  1
branch  0 never executed
branch  1 never executed
    #####:  380:    drawCard(state->whoseTurn, state);//Draw a card
    $$$$$:  380-block  0
call    0 never executed
        -:  381:  }
        -:  382:
        -:  383:  //Update money
    #####:  384:  updateCoins(state->whoseTurn, state , 0);
    $$$$$:  384-block  0
call    0 never executed
        -:  385:
    #####:  386:  return 0;
        -:  387:}
        -:  388:
function isGameOver called 0 returned 0% blocks executed 0%
    #####:  389:int isGameOver(struct gameState *state) {
    $$$$$:  389-block  0
        -:  390:  int i;
        -:  391:  int j;
        -:  392:	
        -:  393:  //if stack of Province cards is empty, the game ends
    #####:  394:  if (state->supplyCount[province] == 0)
    $$$$$:  394-block  0
branch  0 never executed
branch  1 never executed
        -:  395:    {
    #####:  396:      return 1;
    $$$$$:  396-block  0
        -:  397:    }
        -:  398:
        -:  399:  //if three supply pile are at 0, the game ends
    #####:  400:  j = 0;
    #####:  401:  for (i = 0; i < 25; i++)
    $$$$$:  401-block  0
    $$$$$:  401-block  1
    $$$$$:  401-block  2
branch  0 never executed
branch  1 never executed
        -:  402:    {
    #####:  403:      if (state->supplyCount[i] == 0)
    $$$$$:  403-block  0
branch  0 never executed
branch  1 never executed
        -:  404:	{
    #####:  405:	  j++;
    $$$$$:  405-block  0
        -:  406:	}
        -:  407:    }
    #####:  408:  if ( j >= 3)
    $$$$$:  408-block  0
branch  0 never executed
branch  1 never executed
        -:  409:    {
    #####:  410:      return 1;
    $$$$$:  410-block  0
        -:  411:    }
        -:  412:
    #####:  413:  return 0;
    $$$$$:  413-block  0
        -:  414:}
        -:  415:
function scoreFor called 5 returned 100% blocks executed 38%
        5:  416:int scoreFor (int player, struct gameState *state) {
        5:  416-block  0
        -:  417:
        -:  418:  int i;
        5:  419:  int score = 0;
        -:  420:  //score from hand
       30:  421:  for (i = 0; i < state->handCount[player]; i++)
        5:  421-block  0
       25:  421-block  1
       30:  421-block  2
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        -:  422:    {
       25:  423:      if (state->hand[player][i] == curse) { score = score - 1; };
       25:  423-block  0
branch  0 taken 20% (fallthrough)
branch  1 taken 80%
        5:  423-block  1
       25:  424:      if (state->hand[player][i] == estate) { score = score + 1; };
       25:  424-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        1:  424-block  1
       25:  425:      if (state->hand[player][i] == duchy) { score = score + 3; };
       25:  425-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        1:  425-block  1
       25:  426:      if (state->hand[player][i] == province) { score = score + 6; };
       25:  426-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        1:  426-block  1
       25:  427:      if (state->hand[player][i] == great_hall) { score = score + 1; };
       25:  427-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    $$$$$:  427-block  1
       25:  428:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
       25:  428-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    $$$$$:  428-block  1
call    2 never executed
        -:  429:    }
        -:  430:
        -:  431:  //score from discard
        5:  432:  for (i = 0; i < state->discardCount[player]; i++)
        5:  432-block  0
    $$$$$:  432-block  1
        5:  432-block  2
branch  0 taken 0%
branch  1 taken 100% (fallthrough)
        -:  433:    {
    #####:  434:      if (state->discard[player][i] == curse) { score = score - 1; };
    $$$$$:  434-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  434-block  1
    #####:  435:      if (state->discard[player][i] == estate) { score = score + 1; };
    $$$$$:  435-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  435-block  1
    #####:  436:      if (state->discard[player][i] == duchy) { score = score + 3; };
    $$$$$:  436-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  436-block  1
    #####:  437:      if (state->discard[player][i] == province) { score = score + 6; };
    $$$$$:  437-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  437-block  1
    #####:  438:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    $$$$$:  438-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  438-block  1
    #####:  439:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
    $$$$$:  439-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  439-block  1
call    2 never executed
        -:  440:    }
        -:  441:
        -:  442:  //score from deck
        5:  443:  for (i = 0; i < state->discardCount[player]; i++)
        5:  443-block  0
    $$$$$:  443-block  1
        5:  443-block  2
branch  0 taken 0%
branch  1 taken 100% (fallthrough)
        -:  444:    {
    #####:  445:      if (state->deck[player][i] == curse) { score = score - 1; };
    $$$$$:  445-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  445-block  1
    #####:  446:      if (state->deck[player][i] == estate) { score = score + 1; };
    $$$$$:  446-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  446-block  1
    #####:  447:      if (state->deck[player][i] == duchy) { score = score + 3; };
    $$$$$:  447-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  447-block  1
    #####:  448:      if (state->deck[player][i] == province) { score = score + 6; };
    $$$$$:  448-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  448-block  1
    #####:  449:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    $$$$$:  449-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  449-block  1
    #####:  450:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
    $$$$$:  450-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  450-block  1
call    2 never executed
        -:  451:    }
        -:  452:
        5:  453:  return score;
        5:  453-block  0
        -:  454:}
        -:  455:
function getWinners called 0 returned 0% blocks executed 0%
    #####:  456:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
    $$$$$:  456-block  0
        -:  457:  int i;	
        -:  458:  int j;
        -:  459:  int highScore;
        -:  460:  int currentPlayer;
        -:  461:
        -:  462:  //get score for each player
    #####:  463:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  463-block  0
    $$$$$:  463-block  1
    $$$$$:  463-block  2
branch  0 never executed
branch  1 never executed
        -:  464:    {
        -:  465:      //set unused player scores to -9999
    #####:  466:      if (i >= state->numPlayers)
    $$$$$:  466-block  0
branch  0 never executed
branch  1 never executed
        -:  467:	{
    #####:  468:	  players[i] = -9999;
    $$$$$:  468-block  0
        -:  469:	}
        -:  470:      else
        -:  471:	{
    #####:  472:	  players[i] = scoreFor (i, state);
    $$$$$:  472-block  0
call    0 never executed
        -:  473:	}
        -:  474:    }
        -:  475:
        -:  476:  //find highest score
    #####:  477:  j = 0;
    #####:  478:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  478-block  0
    $$$$$:  478-block  1
    $$$$$:  478-block  2
branch  0 never executed
branch  1 never executed
        -:  479:    {
    #####:  480:      if (players[i] > players[j])
    $$$$$:  480-block  0
branch  0 never executed
branch  1 never executed
        -:  481:	{
    #####:  482:	  j = i;
    $$$$$:  482-block  0
        -:  483:	}
        -:  484:    }
    #####:  485:  highScore = players[j];
        -:  486:
        -:  487:  //add 1 to players who had less turns
    #####:  488:  currentPlayer = whoseTurn(state);
    $$$$$:  488-block  0
call    0 never executed
    #####:  489:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  489-block  0
    $$$$$:  489-block  1
branch  0 never executed
branch  1 never executed
        -:  490:    {
    #####:  491:      if ( players[i] == highScore && i > currentPlayer )
    $$$$$:  491-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  491-block  1
branch  2 never executed
branch  3 never executed
        -:  492:	{
    #####:  493:	  players[i]++;
    $$$$$:  493-block  0
        -:  494:	}
        -:  495:    }
        -:  496:
        -:  497:  //find new highest score
    #####:  498:  j = 0;
    #####:  499:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  499-block  0
    $$$$$:  499-block  1
    $$$$$:  499-block  2
branch  0 never executed
branch  1 never executed
        -:  500:    {
    #####:  501:      if ( players[i] > players[j] )
    $$$$$:  501-block  0
branch  0 never executed
branch  1 never executed
        -:  502:	{
    #####:  503:	  j = i;
    $$$$$:  503-block  0
        -:  504:	}
        -:  505:    }
    #####:  506:  highScore = players[j];
        -:  507:
        -:  508:  //set winners in array to 1 and rest to 0
    #####:  509:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  509-block  0
    $$$$$:  509-block  1
    $$$$$:  509-block  2
branch  0 never executed
branch  1 never executed
        -:  510:    {
    #####:  511:      if ( players[i] == highScore )
    $$$$$:  511-block  0
branch  0 never executed
branch  1 never executed
        -:  512:	{
    #####:  513:	  players[i] = 1;
    $$$$$:  513-block  0
        -:  514:	}
        -:  515:      else
        -:  516:	{
    #####:  517:	  players[i] = 0;
    $$$$$:  517-block  0
        -:  518:	}
        -:  519:    }
        -:  520:
    #####:  521:  return 0;
    $$$$$:  521-block  0
        -:  522:}
        -:  523:
function drawCard called 260584 returned 100% blocks executed 100%
   260584:  524:int drawCard(int player, struct gameState *state)
   260584:  524-block  0
        -:  525:{	int count;
        -:  526:  int deckCounter;
   260584:  527:  if (state->deckCount[player] <= 0){//Deck is empty
   260584:  527-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -:  528:    
        -:  529:    //Step 1 Shuffle the discard pile back into a deck
        -:  530:    int i;
        -:  531:    //Move discard to deck
     7684:  532:    for (i = 0; i < state->discardCount[player];i++){
     1819:  532-block  0
     5865:  532-block  1
     7684:  532-block  2
branch  0 taken 76%
branch  1 taken 24% (fallthrough)
     5865:  533:      state->deck[player][i] = state->discard[player][i];
     5865:  534:      state->discard[player][i] = -1;
        -:  535:    }
        -:  536:
     1819:  537:    state->deckCount[player] = state->discardCount[player];
     1819:  538:    state->discardCount[player] = 0;//Reset discard
        -:  539:
        -:  540:    //Shufffle the deck
     1819:  541:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
     1819:  541-block  0
call    0 returned 100%
        -:  542:   
        -:  543:    if (DEBUG){//Debug statements
        -:  544:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  545:    }
        -:  546:    
     1819:  547:    state->discardCount[player] = 0;
        -:  548:
        -:  549:    //Step 2 Draw Card
     1819:  550:    count = state->handCount[player];//Get current player's hand count
        -:  551:    
        -:  552:    if (DEBUG){//Debug statements
        -:  553:      printf("Current hand count: %d\n", count);
        -:  554:    }
        -:  555:    
     1819:  556:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  557:
     1819:  558:    if (deckCounter == 0)
     1819:  558-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
     1793:  559:      return -1;
     1793:  559-block  0
        -:  560:
       26:  561:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
       26:  562:    state->deckCount[player]--;
       26:  563:    state->handCount[player]++;//Increment hand count
       26:  563-block  0
        -:  564:  }
        -:  565:
        -:  566:  else{
   258765:  567:    int count = state->handCount[player];//Get current hand count for player
   258765:  567-block  0
        -:  568:    int deckCounter;
        -:  569:    if (DEBUG){//Debug statements
        -:  570:      printf("Current hand count: %d\n", count);
        -:  571:    }
        -:  572:
   258765:  573:    deckCounter = state->deckCount[player];//Create holder for the deck count
   258765:  574:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
   258765:  575:    state->deckCount[player]--;
   258765:  576:    state->handCount[player]++;//Increment hand count
   258765:  576-block  0
        -:  577:  }
        -:  578:
   258791:  579:  return 0;
   258791:  579-block  0
        -:  580:}
        -:  581:
function getCost called 2 returned 100% blocks executed 13%
        2:  582:int getCost(int cardNumber)
        2:  582-block  0
        -:  583:{
        2:  584:  switch( cardNumber ) 
        2:  584-block  0
branch  0 taken 0%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 50%
branch  5 taken 0%
branch  6 taken 50%
branch  7 taken 0%
branch  8 taken 0%
branch  9 taken 0%
branch 10 taken 0%
branch 11 taken 0%
branch 12 taken 0%
branch 13 taken 0%
branch 14 taken 0%
branch 15 taken 0%
branch 16 taken 0%
branch 17 taken 0%
branch 18 taken 0%
branch 19 taken 0%
branch 20 taken 0%
branch 21 taken 0%
branch 22 taken 0%
branch 23 taken 0%
branch 24 taken 0%
branch 25 taken 0%
branch 26 taken 0%
branch 27 taken 0%
        -:  585:    {
        -:  586:    case curse:
    #####:  587:      return 0;
    $$$$$:  587-block  0
        -:  588:    case estate:
    #####:  589:      return 2;
    $$$$$:  589-block  0
        -:  590:    case duchy:
    #####:  591:      return 5;
    $$$$$:  591-block  0
        -:  592:    case province:
    #####:  593:      return 8;
    $$$$$:  593-block  0
        -:  594:    case copper:
        1:  595:      return 0;
        1:  595-block  0
        -:  596:    case silver:
    #####:  597:      return 3;
    $$$$$:  597-block  0
        -:  598:    case gold:
        1:  599:      return 6;
        1:  599-block  0
        -:  600:    case adventurer:
    #####:  601:      return 6;
    $$$$$:  601-block  0
        -:  602:    case council_room:
    #####:  603:      return 5;
    $$$$$:  603-block  0
        -:  604:    case feast:
    #####:  605:      return 4;
    $$$$$:  605-block  0
        -:  606:    case gardens:
    #####:  607:      return 4;
    $$$$$:  607-block  0
        -:  608:    case mine:
    #####:  609:      return 5;
    $$$$$:  609-block  0
        -:  610:    case remodel:
    #####:  611:      return 4;
    $$$$$:  611-block  0
        -:  612:    case smithy:
    #####:  613:      return 4;
    $$$$$:  613-block  0
        -:  614:    case village:
    #####:  615:      return 3;
    $$$$$:  615-block  0
        -:  616:    case baron:
    #####:  617:      return 4;
    $$$$$:  617-block  0
        -:  618:    case great_hall:
    #####:  619:      return 3;
    $$$$$:  619-block  0
        -:  620:    case minion:
    #####:  621:      return 5;
    $$$$$:  621-block  0
        -:  622:    case steward:
    #####:  623:      return 3;
    $$$$$:  623-block  0
        -:  624:    case tribute:
    #####:  625:      return 5;
    $$$$$:  625-block  0
        -:  626:    case ambassador:
    #####:  627:      return 3;
    $$$$$:  627-block  0
        -:  628:    case cutpurse:
    #####:  629:      return 4;
    $$$$$:  629-block  0
        -:  630:    case embargo: 
    #####:  631:      return 2;
    $$$$$:  631-block  0
        -:  632:    case outpost:
    #####:  633:      return 5;
    $$$$$:  633-block  0
        -:  634:    case salvager:
    #####:  635:      return 4;
    $$$$$:  635-block  0
        -:  636:    case sea_hag:
    #####:  637:      return 4;
    $$$$$:  637-block  0
        -:  638:    case treasure_map:
    #####:  639:      return 4;
    $$$$$:  639-block  0
        -:  640:    }
        -:  641:	
    #####:  642:  return -1;
    $$$$$:  642-block  0
        -:  643:}
        -:  644:
        -:  645:/****************************************************************************************************
        -:  646:* Start of card functions
        -:  647:*****************************************************************************************************/
        -:  648:
function playSmithy called 2 returned 100% blocks executed 100%
        2:  649:int playSmithy(struct gameState *state, int handPos) {
        2:  649-block  0
        -:  650:	//+3 Cards
        2:  651:	int currentPlayer = whoseTurn(state);
        2:  651-block  0
call    0 returned 100%
        -:  652:	int i;
        8:  653:    for (i = 0; i < 3; i++)
        8:  653-block  0
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  654:	{
        6:  655:		drawCard(currentPlayer, state);
        6:  655-block  0
call    0 returned 100%
        -:  656:	}
        -:  657:			
        -:  658:	//discard card from hand
        2:  659:	discardCard(handPos, currentPlayer, state, 1);
        2:  659-block  0
call    0 returned 100%
        2:  660:	return 0;
        -:  661:}
        -:  662:
function playAdventurer called 1003 returned 100% blocks executed 100%
     1003:  663:int playAdventurer(struct gameState *state) {
     1003:  663-block  0
     1003:  664:	int currentPlayer = whoseTurn(state);
     1003:  664-block  0
call    0 returned 100%
     1003:  665:	int drawntreasure =0;
        -:  666:	int cardDrawn;
        -:  667:	int temphand[MAX_HAND]; 
     1003:  668:	int z = 0;
        -:  669:
   250442:  670:	while(drawntreasure<2){
   250442:  670-block  0
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
   249439:  671:		if (state->deckCount[currentPlayer] <1){//if the deck is empty we need to shuffle discard and add to deck
   249439:  671-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
     1784:  672:		  shuffle(currentPlayer, state);
     1784:  672-block  0
call    0 returned 100%
        -:  673:		}
   249439:  674:		drawCard(currentPlayer, state);
   249439:  674-block  0
call    0 returned 100%
   249439:  675:		cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
   249439:  676:		if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold) {
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
   247443:  676-block  0
branch  2 taken 99% (fallthrough)
branch  3 taken 1%
   247436:  676-block  1
branch  4 taken 1% (fallthrough)
branch  5 taken 99%
     2006:  677:		  drawntreasure++;
     2006:  677-block  0
        -:  678:    }
        -:  679:		else{  
   247433:  680:		  temphand[z]=cardDrawn;
   247433:  681:		  state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
   247433:  682:      z++;
   247433:  682-block  0
        -:  683:    }
        -:  684:  }
   244922:  685:  while(z-1>=0){
     1003:  685-block  0
   244922:  685-block  1
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
   243919:  686:    state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
   243919:  687:    z=z-1;
   243919:  687-block  0
        -:  688:  }
     1003:  689:  return 0;
     1003:  689-block  0
        -:  690:}
        -:  691:
function playMine called 0 returned 0% blocks executed 0%
    #####:  692:int playMine(struct gameState *state, int choice1, int choice2, int handPos) {
    $$$$$:  692-block  0
    #####:  693:	int currentPlayer = whoseTurn(state);
    $$$$$:  693-block  0
call    0 never executed
        -:  694:	int i, j;
    #####:  695:	int z = 0;
    #####:  696:	j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  697:
    #####:  698:	if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold)
branch  0 never executed
branch  1 never executed
    $$$$$:  698-block  0
branch  2 never executed
branch  3 never executed
        -:  699:	{
    #####:  700:	  return -1;
    $$$$$:  700-block  0
        -:  701:	}
        -:  702:
    #####:  703:	if (choice2 > z || choice2 < curse)
    $$$$$:  703-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  703-block  1
branch  2 never executed
branch  3 never executed
        -:  704:	{
    #####:  705:		return -1;
    $$$$$:  705-block  0
        -:  706:	}
        -:  707:
    #####:  708:	if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) )
    $$$$$:  708-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  709:	{
    #####:  710:		return -1;
    $$$$$:  710-block  0
        -:  711:	}
        -:  712:
    #####:  713:	gainCard(choice1, state, 2, currentPlayer);
    $$$$$:  713-block  0
call    0 never executed
        -:  714:
        -:  715:	//discard card from hand
    #####:  716:	discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  717:
        -:  718:	//discard trashed card
    #####:  719:	for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$:  719-block  0
    $$$$$:  719-block  1
branch  0 never executed
branch  1 never executed
        -:  720:	{
    #####:  721:		if (state->hand[currentPlayer][i] == j)
    $$$$$:  721-block  0
branch  0 never executed
branch  1 never executed
        -:  722:		{
    #####:  723:			discardCard(i, currentPlayer, state, 0);			
    $$$$$:  723-block  0
call    0 never executed
    #####:  724:			break;
        -:  725:		}
        -:  726:	}
        -:  727:		
    #####:  728:	return 0;
    $$$$$:  728-block  0
        -:  729:}
        -:  730:
function playVillage called 3 returned 100% blocks executed 100%
        3:  731:int playVillage(struct gameState *state, int handPos) {
        3:  731-block  0
        3:  732:	int currentPlayer = whoseTurn(state);
        3:  732-block  0
call    0 returned 100%
        -:  733:
        -:  734:	//+1 Card
        3:  735:	drawCard(currentPlayer, state);
call    0 returned 100%
        -:  736:
        -:  737:	//+2 Actions
        3:  738:	state->numActions = state->numActions + 2;
        -:  739:
        -:  740:	//discard played card from hand
        3:  741:	discardCard(handPos, currentPlayer, state, 0);
call    0 returned 100%
        3:  742:	return 0;
        -:  743:}
        -:  744:
function playRemodel called 1 returned 100% blocks executed 87%
        1:  745:int playRemodel(struct gameState *state, int choice1, int choice2, int handPos) {
        1:  745-block  0
        -:  746:	int i, j;
        1:  747:	int currentPlayer = whoseTurn(state);
        1:  747-block  0
call    0 returned 100%
        -:  748: 
        -:  749:
        1:  750:	j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  751:
        1:  752:	if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
call    0 returned 100%
call    1 returned 100%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:  753:	{
    #####:  754:		return -1;
    $$$$$:  754-block  0
        -:  755:	}
        -:  756:
        1:  757:	gainCard(choice2, state, 0, currentPlayer);
        1:  757-block  0
call    0 returned 100%
        -:  758:
        -:  759:	//discard card from hand
        1:  760:	discardCard(handPos+1, currentPlayer, state, 0);
call    0 returned 100%
        -:  761:
        -:  762:	//discard trashed card
        1:  763:	for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$:  763-block  0
        1:  763-block  1
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
        -:  764:		{
        1:  765:		if (state->hand[currentPlayer][i] == j)
        1:  765-block  0
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  766:		{
        1:  767:			discardCard(i+1, currentPlayer, state, 0);			
        1:  767-block  0
call    0 returned 100%
        1:  768:			break;
        -:  769:		}
        -:  770:	}
        -:  771:
        1:  772:	return 0;
        1:  772-block  0
        -:  773:}
        -:  774:
function cardEffect called 1009 returned 100% blocks executed 17%
     1009:  775:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
     1009:  775-block  0
        -:  776:{
        -:  777:  int i;
        -:  778:  int j;
        -:  779:  int k;
        -:  780:  int x;
        -:  781:  int index;
     1009:  782:  int currentPlayer = whoseTurn(state);
     1009:  782-block  0
call    0 returned 100%
     1009:  783:  int nextPlayer = currentPlayer + 1;
        -:  784:
     1009:  785:  int tributeRevealedCards[2] = {-1, -1};
        -:  786:  int temphand[MAX_HAND];// moved above the if statement
     1009:  787:  int drawntreasure=0;
        -:  788:  int cardDrawn;
     1009:  789:  int z = 0;// this is the counter for the temp hand
     1009:  790:  if (nextPlayer > (state->numPlayers - 1)){
branch  0 taken 36% (fallthrough)
branch  1 taken 64%
      367:  791:    nextPlayer = 0;
      367:  791-block  0
        -:  792:  }
        -:  793:  
        -:  794:	
        -:  795:  //uses switch to select card and perform actions
     1009:  796:  switch( card ) 
     1009:  796-block  0
branch  0 taken 99%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
branch  5 taken 1%
branch  6 taken 1%
branch  7 taken 1%
branch  8 taken 0%
branch  9 taken 0%
branch 10 taken 0%
branch 11 taken 1%
branch 12 taken 0%
branch 13 taken 0%
branch 14 taken 0%
branch 15 taken 0%
branch 16 taken 0%
branch 17 taken 0%
branch 18 taken 0%
branch 19 taken 0%
branch 20 taken 0%
        -:  797:    {
        -:  798:    case adventurer:
     1003:  799:      playAdventurer(state);
     1003:  799-block  0
call    0 returned 100%
        -:  800:			
        -:  801:    case council_room:
        -:  802:      //+4 Cards
     5015:  803:      for (i = 0; i < 4; i++)
     1003:  803-block  0
     5015:  803-block  1
branch  0 taken 80%
branch  1 taken 20% (fallthrough)
        -:  804:	{
     4012:  805:	  drawCard(currentPlayer, state);
     4012:  805-block  0
call    0 returned 100%
        -:  806:	}
        -:  807:			
        -:  808:      //+1 Buy
     1003:  809:      state->numBuys++;
        -:  810:			
        -:  811:      //Each other player draws a card
     3998:  812:      for (i = 0; i < state->numPlayers; i++)
     1003:  812-block  0
     2995:  812-block  1
     3998:  812-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  813:	{
     2995:  814:	  if ( i != currentPlayer )
     2995:  814-block  0
branch  0 taken 67% (fallthrough)
branch  1 taken 33%
        -:  815:	    {
     1992:  816:	      drawCard(i, state);
     1992:  816-block  0
call    0 returned 100%
        -:  817:	    }
        -:  818:	}
        -:  819:			
        -:  820:      //put played card in played card pile
     1003:  821:      discardCard(handPos, currentPlayer, state, 0);
     1003:  821-block  0
call    0 returned 100%
        -:  822:			
     1003:  823:      return 0;
        -:  824:			
        -:  825:    case feast:
        -:  826:      //gain card with cost up to 5
        -:  827:      //Backup hand
    #####:  828:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    $$$$$:  828-block  0
    $$$$$:  828-block  1
    $$$$$:  828-block  2
branch  0 never executed
branch  1 never executed
    #####:  829:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  830:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  831:      }
        -:  832:      //Backup hand
        -:  833:
        -:  834:      //Update Coins for Buy
    #####:  835:      updateCoins(currentPlayer, state, 5);
    $$$$$:  835-block  0
call    0 never executed
    #####:  836:      x = 1;//Condition to loop on
    #####:  837:      while( x == 1) {//Buy one card
    $$$$$:  837-block  0
branch  0 never executed
branch  1 never executed
    #####:  838:	if (supplyCount(choice1, state) <= 0){
    $$$$$:  838-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  839:	  if (DEBUG)
        -:  840:	    printf("None of that card left, sorry!\n");
        -:  841:
        -:  842:	  if (DEBUG){
        -:  843:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  844:	  }
        -:  845:	}
    #####:  846:	else if (state->coins < getCost(choice1)){
    $$$$$:  846-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  847:	  printf("That card is too expensive!\n");
    $$$$$:  847-block  0
call    0 never executed
        -:  848:
        -:  849:	  if (DEBUG){
        -:  850:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  851:	  }
        -:  852:	}
        -:  853:	else{
        -:  854:
        -:  855:	  if (DEBUG){
        -:  856:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  857:	  }
        -:  858:
    #####:  859:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    $$$$$:  859-block  0
call    0 never executed
    #####:  860:	  x = 0;//No more buying cards
        -:  861:
        -:  862:	  if (DEBUG){
        -:  863:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  864:	  }
        -:  865:
        -:  866:	}
        -:  867:      }     
        -:  868:
        -:  869:      //Reset Hand
    #####:  870:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    $$$$$:  870-block  0
    $$$$$:  870-block  1
    $$$$$:  870-block  2
branch  0 never executed
branch  1 never executed
    #####:  871:	state->hand[currentPlayer][i] = temphand[i];
    #####:  872:	temphand[i] = -1;
        -:  873:      }
        -:  874:      //Reset Hand
        -:  875:      			
    #####:  876:      return 0;
    $$$$$:  876-block  0
        -:  877:			
        -:  878:    case gardens:
    #####:  879:      return -1;
    $$$$$:  879-block  0
        -:  880:			
        -:  881:    case mine:
    #####:  882:   	  playMine(state, choice1, choice2, handPos);
    $$$$$:  882-block  0
call    0 never executed
        -:  883:			
        -:  884:    case remodel:
        1:  885:      playRemodel(state, choice1, choice2, handPos);
        1:  885-block  0
call    0 returned 100%
        -:  886:		
        -:  887:    case smithy:
        2:  888:      playSmithy(state, handPos);
        2:  888-block  0
call    0 returned 100%
        -:  889:		
        -:  890:    case village:
        3:  891:      playVillage(state, handPos);
        3:  891-block  0
call    0 returned 100%
        -:  892:		
        -:  893:    case baron:
        3:  894:      state->numBuys++;//Increase buys by 1!
        3:  895:      if (choice1 > 0){//Boolean true or going to discard an estate
        3:  895-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  896:	int p = 0;//Iterator for hand!
    #####:  897:	int card_not_discarded = 1;//Flag for discard set!
    #####:  898:	while(card_not_discarded){
    $$$$$:  898-block  0
    $$$$$:  898-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:  898-block  2
    #####:  899:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    $$$$$:  899-block  0
branch  0 never executed
branch  1 never executed
    #####:  900:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  901:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  902:	    state->discardCount[currentPlayer]++;
    #####:  903:	    for (;p < state->handCount[currentPlayer]; p++){
    $$$$$:  903-block  0
    $$$$$:  903-block  1
    $$$$$:  903-block  2
branch  0 never executed
branch  1 never executed
    #####:  904:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  905:	    }
    #####:  906:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  907:	    state->handCount[currentPlayer]--;
    #####:  908:	    card_not_discarded = 0;//Exit the loop
    $$$$$:  908-block  0
        -:  909:	  }
    #####:  910:	  else if (p > state->handCount[currentPlayer]){
    $$$$$:  910-block  0
branch  0 never executed
branch  1 never executed
        -:  911:	    if(DEBUG) {
        -:  912:	      printf("No estate cards in your hand, invalid choice\n");
        -:  913:	      printf("Must gain an estate if there are any\n");
        -:  914:	    }
    #####:  915:	    if (supplyCount(estate, state) > 0){
    $$$$$:  915-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  916:	      gainCard(estate, state, 0, currentPlayer);
    $$$$$:  916-block  0
call    0 never executed
    #####:  917:	      state->supplyCount[estate]--;//Decrement estates
    #####:  918:	      if (supplyCount(estate, state) == 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  919:		isGameOver(state);
    $$$$$:  919-block  0
call    0 never executed
        -:  920:	      }
        -:  921:	    }
    #####:  922:	    card_not_discarded = 0;//Exit the loop
    $$$$$:  922-block  0
        -:  923:	  }
        -:  924:			    
        -:  925:	  else{
    #####:  926:	    p++;//Next card
    $$$$$:  926-block  0
        -:  927:	  }
        -:  928:	}
        -:  929:      }
        -:  930:			    
        -:  931:      else{
        3:  932:	if (supplyCount(estate, state) > 0){
        3:  932-block  0
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        3:  933:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
        3:  933-block  0
call    0 returned 100%
        3:  934:	  state->supplyCount[estate]--;//Decrement Estates
        3:  935:	  if (supplyCount(estate, state) == 0){
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:  936:	    isGameOver(state);
    $$$$$:  936-block  0
call    0 never executed
        -:  937:	  }
        -:  938:	}
        -:  939:      }
        -:  940:	    
        -:  941:      
        3:  942:      return 0;
        3:  942-block  0
        -:  943:		
        -:  944:    case great_hall:
        -:  945:      //+1 Card
    #####:  946:      drawCard(currentPlayer, state);
    $$$$$:  946-block  0
call    0 never executed
        -:  947:			
        -:  948:      //+1 Actions
    #####:  949:      state->numActions++;
        -:  950:			
        -:  951:      //discard card from hand
    #####:  952:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####:  953:      return 0;
        -:  954:		
        -:  955:    case minion:
        -:  956:      //+1 action
    #####:  957:      state->numActions++;
        -:  958:			
        -:  959:      //discard card from hand
    #####:  960:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$:  960-block  0
call    0 never executed
        -:  961:			
    #####:  962:      if (choice1)		//+2 coins
branch  0 never executed
branch  1 never executed
        -:  963:	{
    #####:  964:	  state->coins = state->coins + 2;
    $$$$$:  964-block  0
        -:  965:	}
        -:  966:			
    #####:  967:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
    $$$$$:  967-block  0
branch  0 never executed
branch  1 never executed
        -:  968:	{
        -:  969:	  //discard hand
    #####:  970:	  while(numHandCards(state) > 0)
    $$$$$:  970-block  0
    $$$$$:  970-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  971:	    {
    #####:  972:	      discardCard(handPos, currentPlayer, state, 0);
    $$$$$:  972-block  0
call    0 never executed
        -:  973:	    }
        -:  974:				
        -:  975:	  //draw 4
    #####:  976:	  for (i = 0; i < 4; i++)
    $$$$$:  976-block  0
    $$$$$:  976-block  1
branch  0 never executed
branch  1 never executed
        -:  977:	    {
    #####:  978:	      drawCard(currentPlayer, state);
    $$$$$:  978-block  0
call    0 never executed
        -:  979:	    }
        -:  980:				
        -:  981:	  //other players discard hand and redraw if hand size > 4
    #####:  982:	  for (i = 0; i < state->numPlayers; i++)
    $$$$$:  982-block  0
    $$$$$:  982-block  1
    $$$$$:  982-block  2
branch  0 never executed
branch  1 never executed
        -:  983:	    {
    #####:  984:	      if (i != currentPlayer)
    $$$$$:  984-block  0
branch  0 never executed
branch  1 never executed
        -:  985:		{
    #####:  986:		  if ( state->handCount[i] > 4 )
    $$$$$:  986-block  0
branch  0 never executed
branch  1 never executed
        -:  987:		    {
        -:  988:		      //discard hand
    #####:  989:		      while( state->handCount[i] > 0 )
    $$$$$:  989-block  0
    $$$$$:  989-block  1
branch  0 never executed
branch  1 never executed
        -:  990:			{
    #####:  991:			  discardCard(handPos, i, state, 0);
    $$$$$:  991-block  0
call    0 never executed
        -:  992:			}
        -:  993:							
        -:  994:		      //draw 4
    #####:  995:		      for (j = 0; j < 4; j++)
    $$$$$:  995-block  0
    $$$$$:  995-block  1
branch  0 never executed
branch  1 never executed
        -:  996:			{
    #####:  997:			  drawCard(i, state);
    $$$$$:  997-block  0
call    0 never executed
        -:  998:			}
        -:  999:		    }
        -: 1000:		}
        -: 1001:	    }
        -: 1002:				
        -: 1003:	}
    #####: 1004:      return 0;
    $$$$$: 1004-block  0
        -: 1005:		
        -: 1006:    case steward:
        3: 1007:      if (choice1 == 1)
        3: 1007-block  0
branch  0 taken 33% (fallthrough)
branch  1 taken 67%
        -: 1008:	{
        -: 1009:	  //+2 cards
        1: 1010:	  drawCard(currentPlayer, state);
        1: 1010-block  0
call    0 returned 100%
        1: 1011:	  drawCard(currentPlayer, state);
call    0 returned 100%
        -: 1012:	}
        2: 1013:      else if (choice1 == 2)
        2: 1013-block  0
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
        -: 1014:	{
        -: 1015:	  //+2 coins
        1: 1016:	  state->coins = state->coins + 2;
        1: 1016-block  0
        -: 1017:	}
        -: 1018:      else
        -: 1019:	{
        -: 1020:	  //trash 2 cards in hand
        1: 1021:	  discardCard(choice2, currentPlayer, state, 1);
        1: 1021-block  0
call    0 returned 100%
        1: 1022:	  discardCard(choice3, currentPlayer, state, 1);
call    0 returned 100%
        -: 1023:	}
        -: 1024:			
        -: 1025:      //discard card from hand
        3: 1026:      discardCard(handPos, currentPlayer, state, 0);
        3: 1026-block  0
call    0 returned 100%
        3: 1027:      return 0;
        -: 1028:		
        -: 1029:    case tribute:
    #####: 1030:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    $$$$$: 1030-block  0
branch  0 never executed
branch  1 never executed
    #####: 1031:	if (state->deckCount[nextPlayer] > 0){
    $$$$$: 1031-block  0
branch  0 never executed
branch  1 never executed
    #####: 1032:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1033:	  state->deckCount[nextPlayer]--;
    $$$$$: 1033-block  0
        -: 1034:	}
    #####: 1035:	else if (state->discardCount[nextPlayer] > 0){
    $$$$$: 1035-block  0
branch  0 never executed
branch  1 never executed
    #####: 1036:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1037:	  state->discardCount[nextPlayer]--;
    $$$$$: 1037-block  0
        -: 1038:	}
        -: 1039:	else{
        -: 1040:	  //No Card to Reveal
        -: 1041:	  if (DEBUG){
        -: 1042:	    printf("No cards to reveal\n");
        -: 1043:	  }
        -: 1044:	}
        -: 1045:      }
        -: 1046:	    
        -: 1047:      else{
    #####: 1048:	if (state->deckCount[nextPlayer] == 0){
    $$$$$: 1048-block  0
branch  0 never executed
branch  1 never executed
    #####: 1049:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    $$$$$: 1049-block  0
    $$$$$: 1049-block  1
    $$$$$: 1049-block  2
branch  0 never executed
branch  1 never executed
    #####: 1050:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1051:	    state->deckCount[nextPlayer]++;
    #####: 1052:	    state->discard[nextPlayer][i] = -1;
    #####: 1053:	    state->discardCount[nextPlayer]--;
        -: 1054:	  }
        -: 1055:			    
    #####: 1056:	  shuffle(nextPlayer,state);//Shuffle the deck
    $$$$$: 1056-block  0
call    0 never executed
        -: 1057:	} 
    #####: 1058:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1059:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1060:	state->deckCount[nextPlayer]--;
    #####: 1061:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1062:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1063:	state->deckCount[nextPlayer]--;
    $$$$$: 1063-block  0
        -: 1064:      }    
        -: 1065:		       
    #####: 1066:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one 
    $$$$$: 1066-block  0
branch  0 never executed
branch  1 never executed
    #####: 1067:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1068:	state->playedCardCount++;
    #####: 1069:	tributeRevealedCards[1] = -1;
    $$$$$: 1069-block  0
        -: 1070:      }
        -: 1071:
    #####: 1072:      for (i = 0; i <= 2; i ++){
    $$$$$: 1072-block  0
    $$$$$: 1072-block  1
    $$$$$: 1072-block  2
branch  0 never executed
branch  1 never executed
    #####: 1073:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    $$$$$: 1073-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1073-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1073-block  2
branch  4 never executed
branch  5 never executed
    #####: 1074:	  state->coins += 2;
    $$$$$: 1074-block  0
        -: 1075:	}
        -: 1076:		    
    #####: 1077:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    $$$$$: 1077-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1077-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1077-block  2
branch  4 never executed
branch  5 never executed
    $$$$$: 1077-block  3
branch  6 never executed
branch  7 never executed
    $$$$$: 1077-block  4
branch  8 never executed
branch  9 never executed
    #####: 1078:	  drawCard(currentPlayer, state);
    $$$$$: 1078-block  0
call    0 never executed
    #####: 1079:	  drawCard(currentPlayer, state);
call    0 never executed
        -: 1080:	}
        -: 1081:	else{//Action Card
    #####: 1082:	  state->numActions = state->numActions + 2;
    $$$$$: 1082-block  0
        -: 1083:	}
        -: 1084:      }
        -: 1085:	    
    #####: 1086:      return 0;
    $$$$$: 1086-block  0
        -: 1087:		
        -: 1088:    case ambassador:
    #####: 1089:      j = 0;		//used to check if player has enough cards to discard
        -: 1090:
    #####: 1091:      if (choice2 > 2 || choice2 < 0)
    $$$$$: 1091-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1091-block  1
branch  2 never executed
branch  3 never executed
        -: 1092:	{
    #####: 1093:	  return -1;				
    $$$$$: 1093-block  0
        -: 1094:	}
        -: 1095:
    #####: 1096:      if (choice1 == handPos)
    $$$$$: 1096-block  0
branch  0 never executed
branch  1 never executed
        -: 1097:	{
    #####: 1098:	  return -1;
    $$$$$: 1098-block  0
        -: 1099:	}
        -: 1100:
    #####: 1101:      for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1101-block  0
    $$$$$: 1101-block  1
    $$$$$: 1101-block  2
branch  0 never executed
branch  1 never executed
        -: 1102:	{
    #####: 1103:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
    $$$$$: 1103-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1103-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1103-block  2
branch  4 never executed
branch  5 never executed
        -: 1104:	    {
    #####: 1105:	      j++;
    $$$$$: 1105-block  0
        -: 1106:	    }
        -: 1107:	}
    #####: 1108:      if (j < choice2)
    $$$$$: 1108-block  0
branch  0 never executed
branch  1 never executed
        -: 1109:	{
    #####: 1110:	  return -1;				
    $$$$$: 1110-block  0
        -: 1111:	}
        -: 1112:
        -: 1113:      if (DEBUG) 
        -: 1114:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1115:
        -: 1116:      //increase supply count for choosen card by amount being discarded
    #####: 1117:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1118:			
        -: 1119:      //each other player gains a copy of revealed card
    #####: 1120:      for (i = 0; i < state->numPlayers; i++)
    $$$$$: 1120-block  0
    $$$$$: 1120-block  1
    $$$$$: 1120-block  2
branch  0 never executed
branch  1 never executed
        -: 1121:	{
    #####: 1122:	  if (i != currentPlayer)
    $$$$$: 1122-block  0
branch  0 never executed
branch  1 never executed
        -: 1123:	    {
    #####: 1124:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
    $$$$$: 1124-block  0
call    0 never executed
        -: 1125:	    }
        -: 1126:	}
        -: 1127:
        -: 1128:      //discard played card from hand
    #####: 1129:      discardCard(handPos, currentPlayer, state, 0);			
    $$$$$: 1129-block  0
call    0 never executed
        -: 1130:
        -: 1131:      //trash copies of cards returned to supply
    #####: 1132:      for (j = 0; j < choice2; j++)
    $$$$$: 1132-block  0
    $$$$$: 1132-block  1
branch  0 never executed
branch  1 never executed
        -: 1133:	{
    #####: 1134:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1134-block  0
    $$$$$: 1134-block  1
    $$$$$: 1134-block  2
branch  0 never executed
branch  1 never executed
        -: 1135:	    {
    #####: 1136:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
    $$$$$: 1136-block  0
branch  0 never executed
branch  1 never executed
        -: 1137:		{
    #####: 1138:		  discardCard(i, currentPlayer, state, 1);
    $$$$$: 1138-block  0
call    0 never executed
    #####: 1139:		  break;
        -: 1140:		}
        -: 1141:	    }
        -: 1142:	}			
        -: 1143:
    #####: 1144:      return 0;
    $$$$$: 1144-block  0
        -: 1145:		
        -: 1146:    case cutpurse:
        -: 1147:
    #####: 1148:      updateCoins(currentPlayer, state, 2);
    $$$$$: 1148-block  0
call    0 never executed
    #####: 1149:      for (i = 0; i < state->numPlayers; i++)
    $$$$$: 1149-block  0
    $$$$$: 1149-block  1
branch  0 never executed
branch  1 never executed
        -: 1150:	{
    #####: 1151:	  if (i != currentPlayer)
    $$$$$: 1151-block  0
branch  0 never executed
branch  1 never executed
        -: 1152:	    {
    #####: 1153:	      for (j = 0; j < state->handCount[i]; j++)
    $$$$$: 1153-block  0
    $$$$$: 1153-block  1
    $$$$$: 1153-block  2
branch  0 never executed
branch  1 never executed
        -: 1154:		{
    #####: 1155:		  if (state->hand[i][j] == copper)
    $$$$$: 1155-block  0
branch  0 never executed
branch  1 never executed
        -: 1156:		    {
    #####: 1157:		      discardCard(j, i, state, 0);
    $$$$$: 1157-block  0
call    0 never executed
    #####: 1158:		      break;
        -: 1159:		    }
    #####: 1160:		  if (j == state->handCount[i])
    $$$$$: 1160-block  0
branch  0 never executed
branch  1 never executed
        -: 1161:		    {
    #####: 1162:		      for (k = 0; k < state->handCount[i]; k++)
    $$$$$: 1162-block  0
    $$$$$: 1162-block  1
    $$$$$: 1162-block  2
branch  0 never executed
branch  1 never executed
        -: 1163:			{
        -: 1164:			  if (DEBUG)
        -: 1165:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1166:			}	
    #####: 1167:		      break;
    $$$$$: 1167-block  0
        -: 1168:		    }		
        -: 1169:		}
        -: 1170:					
        -: 1171:	    }
        -: 1172:				
        -: 1173:	}				
        -: 1174:
        -: 1175:      //discard played card from hand
    #####: 1176:      discardCard(handPos, currentPlayer, state, 0);			
    $$$$$: 1176-block  0
call    0 never executed
        -: 1177:
    #####: 1178:      return 0;
        -: 1179:
        -: 1180:		
        -: 1181:    case embargo: 
        -: 1182:      //+2 Coins
    #####: 1183:      state->coins = state->coins + 2;
        -: 1184:			
        -: 1185:      //see if selected pile is in play
    #####: 1186:      if ( state->supplyCount[choice1] == -1 )
    $$$$$: 1186-block  0
branch  0 never executed
branch  1 never executed
        -: 1187:	{
    #####: 1188:	  return -1;
    $$$$$: 1188-block  0
        -: 1189:	}
        -: 1190:			
        -: 1191:      //add embargo token to selected supply pile
    #####: 1192:      state->embargoTokens[choice1]++;
        -: 1193:			
        -: 1194:      //trash card
    #####: 1195:      discardCard(handPos, currentPlayer, state, 1);		
    $$$$$: 1195-block  0
call    0 never executed
    #####: 1196:      return 0;
        -: 1197:		
        -: 1198:    case outpost:
        -: 1199:      //set outpost flag
    #####: 1200:      state->outpostPlayed++;
        -: 1201:			
        -: 1202:      //discard card
    #####: 1203:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$: 1203-block  0
call    0 never executed
    #####: 1204:      return 0;
        -: 1205:		
        -: 1206:    case salvager:
        -: 1207:      //+1 buy
    #####: 1208:      state->numBuys++;
        -: 1209:			
    #####: 1210:      if (choice1)
    $$$$$: 1210-block  0
branch  0 never executed
branch  1 never executed
        -: 1211:	{
        -: 1212:	  //gain coins equal to trashed card
    #####: 1213:	  state->coins = state->coins + getCost( handCard(choice1, state) );
    $$$$$: 1213-block  0
call    0 never executed
call    1 never executed
        -: 1214:	  //trash card
    #####: 1215:	  discardCard(choice1, currentPlayer, state, 1);	
call    0 never executed
        -: 1216:	}
        -: 1217:			
        -: 1218:      //discard card
    #####: 1219:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$: 1219-block  0
call    0 never executed
    #####: 1220:      return 0;
        -: 1221:		
        -: 1222:    case sea_hag:
    #####: 1223:      for (i = 0; i < state->numPlayers; i++){
    $$$$$: 1223-block  0
    $$$$$: 1223-block  1
    $$$$$: 1223-block  2
branch  0 never executed
branch  1 never executed
    #####: 1224:	if (i != currentPlayer){
    $$$$$: 1224-block  0
branch  0 never executed
branch  1 never executed
    #####: 1225:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1226:	  state->discardCount[i]++;
    #####: 1227:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
    $$$$$: 1227-block  0
        -: 1228:	}
        -: 1229:      }
    #####: 1230:      return 0;
    $$$$$: 1230-block  0
        -: 1231:		
        -: 1232:    case treasure_map:
        -: 1233:      //search hand for another treasure_map
    #####: 1234:      index = -1;
    #####: 1235:      for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1235-block  0
    $$$$$: 1235-block  1
    $$$$$: 1235-block  2
branch  0 never executed
branch  1 never executed
        -: 1236:	{
    #####: 1237:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
    $$$$$: 1237-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1237-block  1
branch  2 never executed
branch  3 never executed
        -: 1238:	    {
    #####: 1239:	      index = i;
    #####: 1240:	      break;
    $$$$$: 1240-block  0
        -: 1241:	    }
        -: 1242:	}
    #####: 1243:      if (index > -1)
    $$$$$: 1243-block  0
branch  0 never executed
branch  1 never executed
        -: 1244:	{
        -: 1245:	  //trash both treasure cards
    #####: 1246:	  discardCard(handPos, currentPlayer, state, 1);
    $$$$$: 1246-block  0
call    0 never executed
    #####: 1247:	  discardCard(index, currentPlayer, state, 1);
call    0 never executed
        -: 1248:
        -: 1249:	  //gain 4 Gold cards
    #####: 1250:	  for (i = 0; i < 4; i++)
    $$$$$: 1250-block  0
branch  0 never executed
branch  1 never executed
        -: 1251:	    {
    #####: 1252:	      gainCard(gold, state, 1, currentPlayer);
    $$$$$: 1252-block  0
call    0 never executed
        -: 1253:	    }
        -: 1254:				
        -: 1255:	  //return success
    #####: 1256:	  return 1;
    $$$$$: 1256-block  0
        -: 1257:	}
        -: 1258:			
        -: 1259:      //no second treasure_map found in hand
    #####: 1260:      return -1;
    $$$$$: 1260-block  0
        -: 1261:    }
        -: 1262:	
     1009: 1263:  return -1;
    $$$$$: 1263-block  0
     1009: 1263-block  1
        -: 1264:}
        -: 1265:
function discardCard called 1022 returned 100% blocks executed 89%
     1022: 1266:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
     1022: 1266-block  0
        -: 1267:{
        -: 1268:	
        -: 1269:  //if card is not trashed, added to Played pile 
     1022: 1270:  if (trashFlag < 1)
     1022: 1270-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
        -: 1271:    {
        -: 1272:      //add card to played pile
     1017: 1273:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos]; 
     1017: 1274:      state->playedCardCount++;
     1017: 1274-block  0
        -: 1275:    }
        -: 1276:	
        -: 1277:  //set played card to -1
     1022: 1278:  state->hand[currentPlayer][handPos] = -1;
        -: 1279:	
        -: 1280:  //remove card from player's hand
     1022: 1281:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
     1022: 1281-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1282:    {
        -: 1283:      //reduce number of cards in hand
        5: 1284:      state->handCount[currentPlayer]--;
        5: 1284-block  0
        -: 1285:    }
     1017: 1286:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
     1017: 1286-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -: 1287:    {
        -: 1288:      //reduce number of cards in hand
    #####: 1289:      state->handCount[currentPlayer]--;
    $$$$$: 1289-block  0
        -: 1290:    }
        -: 1291:  else 	
        -: 1292:    {
        -: 1293:      //replace discarded card with last card in hand
     1017: 1294:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1295:      //set last card to -1
     1017: 1296:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1297:      //reduce number of cards in hand
     1017: 1298:      state->handCount[currentPlayer]--;
     1017: 1298-block  0
        -: 1299:    }
        -: 1300:	
     1022: 1301:  return 0;
     1022: 1301-block  0
        -: 1302:}
        -: 1303:
function gainCard called 8 returned 100% blocks executed 100%
        8: 1304:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        8: 1304-block  0
        -: 1305:{
        -: 1306:  //Note: supplyPos is enum of choosen card
        -: 1307:	
        -: 1308:  //check if supply pile is empty (0) or card is not used in game (-1)
        8: 1309:  if ( supplyCount(supplyPos, state) < 1 )
        8: 1309-block  0
call    0 returned 100%
branch  1 taken 13% (fallthrough)
branch  2 taken 88%
        -: 1310:    {
        1: 1311:      return -1;
        1: 1311-block  0
        -: 1312:    }
        -: 1313:	
        -: 1314:  //added card for [whoseTurn] current player:
        -: 1315:  // toFlag = 0 : add to discard
        -: 1316:  // toFlag = 1 : add to deck
        -: 1317:  // toFlag = 2 : add to hand
        -: 1318:
        7: 1319:  if (toFlag == 1)
        7: 1319-block  0
branch  0 taken 14% (fallthrough)
branch  1 taken 86%
        -: 1320:    {
        1: 1321:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
        1: 1322:      state->deckCount[player]++;
        1: 1322-block  0
        -: 1323:    }
        6: 1324:  else if (toFlag == 2)
        6: 1324-block  0
branch  0 taken 17% (fallthrough)
branch  1 taken 83%
        -: 1325:    {
        1: 1326:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
        1: 1327:      state->handCount[player]++;
        1: 1327-block  0
        -: 1328:    }
        -: 1329:  else
        -: 1330:    {
        5: 1331:      state->discard[player][ state->discardCount[player] ] = supplyPos;
        5: 1332:      state->discardCount[player]++;
        5: 1332-block  0
        -: 1333:    }
        -: 1334:	
        -: 1335:  //decrease number in supply pile
        7: 1336:  state->supplyCount[supplyPos]--;
        -: 1337:	 
        7: 1338:  return 0;
        7: 1338-block  0
        -: 1339:}
        -: 1340:
function updateCoins called 1030 returned 100% blocks executed 100%
     1030: 1341:int updateCoins(int player, struct gameState *state, int bonus)
     1030: 1341-block  0
        -: 1342:{
        -: 1343:  int i;
        -: 1344:	
        -: 1345:  //reset coin count
     1030: 1346:  state->coins = 0;
        -: 1347:
        -: 1348:  //add coins for each Treasure card in player's hand
     6180: 1349:  for (i = 0; i < state->handCount[player]; i++)
     1030: 1349-block  0
     5150: 1349-block  1
     6180: 1349-block  2
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        -: 1350:    {
     5150: 1351:      if (state->hand[player][i] == copper)
     5150: 1351-block  0
branch  0 taken 70% (fallthrough)
branch  1 taken 30%
        -: 1352:	{
     3585: 1353:	  state->coins += 1;
     3585: 1353-block  0
        -: 1354:	}
     1565: 1355:      else if (state->hand[player][i] == silver)
     1565: 1355-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1356:	{
        5: 1357:	  state->coins += 2;
        5: 1357-block  0
        -: 1358:	}
     1560: 1359:      else if (state->hand[player][i] == gold)
     1560: 1359-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1360:	{
        5: 1361:	  state->coins += 3;
        5: 1361-block  0
        -: 1362:	}	
        -: 1363:    }	
        -: 1364:
        -: 1365:  //add bonus
     1030: 1366:  state->coins += bonus;
        -: 1367:
     1030: 1368:  return 0;
     1030: 1368-block  0
        -: 1369:}
        -: 1370:
        -: 1371:
        -: 1372:/************************************************
        -: 1373:Start of function unit tests
        -: 1374:*************************************************/
        -: 1375:
function testUpdateCoins called 0 returned 0% blocks executed 0%
    #####: 1376:int testUpdateCoins(int player, struct gameState *state, int bonus) {
    $$$$$: 1376-block  0
        -: 1377:  
    #####: 1378:}
        -: 1379:
        -: 1380:
        -: 1381://end of dominion.c
        -: 1382:
----------------- Random Testing Card: adventurer ----------------
Iteration 0
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 1
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 2
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 3
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 4
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 5
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 6
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 7
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 8
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 9
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 10
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 11
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 12
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 13
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 14
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 15
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 16
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 17
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 18
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 19
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 20
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 21
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 22
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 23
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 24
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 25
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 26
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 27
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 28
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 29
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 30
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 31
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 32
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 33
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 34
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 35
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 36
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 37
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 38
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 39
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 40
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 41
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 42
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 43
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 44
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 45
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 46
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 47
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 48
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 49
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 50
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 51
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 52
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 53
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 54
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 55
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 56
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 57
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 58
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 59
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 60
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 61
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 62
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 63
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 64
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 65
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 66
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 67
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 68
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 69
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 70
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 71
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 72
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 73
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 74
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 75
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 76
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 77
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 78
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 79
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 80
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 81
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 82
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 83
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 84
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 85
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 86
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 87
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 88
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 89
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 90
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 91
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 92
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 93
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 94
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 95
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 96
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 97
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 98
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 99
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 100
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 101
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 102
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 103
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 104
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 105
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 106
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 107
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 108
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 109
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 110
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 111
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 112
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 113
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 114
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 115
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 116
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 117
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 118
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 119
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 120
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 121
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 122
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 123
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 124
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 125
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 126
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 127
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 128
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 129
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 130
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 131
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 132
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 133
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 134
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 135
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 136
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 137
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 138
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 139
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 140
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 141
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 142
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 143
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 144
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 145
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 146
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 147
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 148
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 149
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 150
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 151
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 152
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 153
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 154
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 155
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 156
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 157
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 158
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 159
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 160
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 161
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 162
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 163
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 164
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 165
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 166
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 167
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 168
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 169
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 170
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 171
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 172
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 173
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 174
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 175
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 176
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 177
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 178
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 179
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 180
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 181
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 182
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 183
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 184
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 185
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 186
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 187
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 188
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 189
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 190
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 191
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 192
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 193
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 194
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 195
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 196
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 197
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 198
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 199
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 200
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 201
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 202
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 203
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 204
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 205
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 206
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 207
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 208
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 209
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 210
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 211
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 212
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 213
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 214
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 215
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 216
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 217
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 218
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 219
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 220
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 221
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 222
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 223
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 224
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 225
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 226
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 227
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 228
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 229
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 230
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 231
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 232
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 233
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 234
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 235
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 236
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 237
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 238
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 239
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 240
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 241
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 242
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 243
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 244
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 245
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 246
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 247
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 248
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 249
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 250
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 251
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 252
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 253
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 254
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 255
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 256
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 257
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 258
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 259
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 260
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 261
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 262
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 263
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 264
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 265
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 266
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 267
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 268
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 269
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 270
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 271
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 272
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 273
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 274
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 275
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 276
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 277
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 278
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 279
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 280
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 281
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 282
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 283
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 284
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 285
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 286
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 287
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 288
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 289
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 290
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 291
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 292
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 293
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 294
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 295
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 296
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 297
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 298
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 299
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 300
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 301
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 302
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 303
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 304
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 305
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 306
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 307
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 308
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 309
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 310
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 311
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 312
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 313
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 314
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 315
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 316
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 317
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 318
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 319
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 320
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 321
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 322
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 323
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 324
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 325
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 326
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 327
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 328
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 329
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 330
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 331
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 332
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 333
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 334
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 335
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 336
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 337
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 338
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 339
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 340
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 341
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 342
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 343
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 344
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 345
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 346
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 347
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 348
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 349
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 350
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 351
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 352
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 353
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 354
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 355
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 356
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 357
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 358
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 359
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 360
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 361
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 362
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 363
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 364
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 365
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 366
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 367
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 368
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 369
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 370
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 371
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 372
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 373
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 374
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 375
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 376
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 377
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 378
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 379
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 380
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 381
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 382
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 383
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 384
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 385
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 386
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 387
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 388
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 389
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 390
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 391
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 392
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 393
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 394
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 395
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 396
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 397
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 398
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 399
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 400
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 401
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 402
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 403
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 404
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 405
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 406
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 407
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 408
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 409
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 410
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 411
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 412
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 413
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 414
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 415
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 416
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 417
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 418
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 419
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 420
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 421
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 422
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 423
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 424
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 425
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 426
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 427
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 428
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 429
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 430
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 431
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 432
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 433
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 434
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 435
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 436
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 437
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 438
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 439
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 440
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 441
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 442
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 443
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 444
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 445
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 446
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 447
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 448
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 449
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 450
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 451
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 452
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 453
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 454
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 455
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 456
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 457
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 458
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 459
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 460
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 461
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 462
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 463
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 464
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 465
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 466
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 467
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 468
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 469
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 470
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 471
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 472
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 473
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 474
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 475
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 476
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 477
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 478
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 479
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 480
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 481
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 482
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 483
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 484
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 485
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 486
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 487
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 488
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 489
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 490
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 491
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 492
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 493
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 494
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 495
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 496
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 497
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 498
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 499
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 500
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 501
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 502
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 503
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 504
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 505
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 506
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 507
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 508
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 509
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 510
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 511
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 512
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 513
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 514
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 515
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 516
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 517
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 518
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 519
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 520
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 521
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 522
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 523
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 524
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 525
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 526
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 527
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 528
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 529
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 530
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 531
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 532
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 533
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 534
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 535
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 536
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 537
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 538
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 539
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 540
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 541
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 542
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 543
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 544
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 545
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 546
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 547
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 548
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 549
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 550
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 551
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 552
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 553
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 554
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 555
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 556
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 557
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 558
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 559
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 560
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 561
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 562
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 563
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 564
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 565
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 566
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 567
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 568
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 569
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 570
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 571
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 572
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 573
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 574
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 575
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 576
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 577
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 578
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 579
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 580
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 581
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 582
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 583
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 584
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 585
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 586
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 587
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 588
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 589
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 590
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 591
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 592
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 593
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 594
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 595
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 596
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 597
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 598
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 599
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 600
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 601
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 602
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 603
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 604
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 605
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 606
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 607
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 608
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 609
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 610
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 611
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 612
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 613
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 614
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 615
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 616
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 617
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 618
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 619
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 620
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 621
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 622
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 623
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 624
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 625
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 626
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 627
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 628
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 629
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 630
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 631
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 632
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 633
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 634
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 635
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 636
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 637
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 638
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 639
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 640
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 641
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 642
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 643
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 644
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 645
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 646
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 647
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 648
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 649
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 650
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 651
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 652
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 653
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 654
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 655
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 656
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 657
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 658
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 659
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 660
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 661
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 662
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 663
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 664
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 665
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 666
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 667
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 668
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 669
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 670
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 671
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 672
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 673
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 674
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 675
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 676
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 677
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 678
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 679
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 680
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 681
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 682
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 683
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 684
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 685
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 686
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 687
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 688
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 689
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 690
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 691
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 692
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 693
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 694
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 695
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 696
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 697
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 698
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 699
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 700
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 701
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 702
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 703
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 704
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 705
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 706
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 707
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 708
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 709
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 710
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 711
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 712
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 713
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 714
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 715
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 716
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 717
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 718
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 719
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 720
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 721
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 722
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 723
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 724
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 725
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 726
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 727
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 728
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 729
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 730
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 731
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 732
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 733
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 734
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 735
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 736
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 737
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 738
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 739
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 740
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 741
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 742
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 743
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 744
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 745
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 746
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 747
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 748
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 749
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 750
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 751
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 752
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 753
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 754
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 755
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 756
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 757
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 758
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 759
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 760
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 761
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 762
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 763
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 764
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 765
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 766
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 767
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 768
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 769
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 770
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 771
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 772
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 773
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 774
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 775
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 776
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 777
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 778
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 779
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 780
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 781
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 782
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 783
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 784
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 785
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 786
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 787
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 788
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 789
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 790
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 791
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 792
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 793
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 794
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 795
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 796
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 797
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 798
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 799
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 800
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 801
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 802
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 803
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 804
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 805
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 806
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 807
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 808
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 809
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 810
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 811
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 812
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 813
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 814
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 815
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 816
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 817
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 818
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 819
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 820
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 821
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 822
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 823
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 824
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 825
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 826
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 827
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 828
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 829
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 830
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 831
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 832
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 833
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 834
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 835
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 836
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 837
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 838
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 839
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 840
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 841
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 842
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 843
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 844
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 845
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 846
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 847
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 848
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 849
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 850
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 851
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 852
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 853
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 854
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 855
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 856
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 857
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 858
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 859
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 860
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 861
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 862
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 863
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 864
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 865
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 866
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 867
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 868
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 869
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 870
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 871
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 872
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 873
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 874
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 875
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 876
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 877
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 878
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 879
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 880
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 881
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 882
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 883
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 884
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 885
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 886
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 887
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 888
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 889
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 890
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 891
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 892
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 893
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 894
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 895
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 896
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 897
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 898
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 899
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 900
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 901
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 902
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 903
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 904
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 905
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 906
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 907
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 908
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 909
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 910
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 911
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 912
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 913
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 914
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 915
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 916
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 917
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 918
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 919
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 920
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 921
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 922
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 923
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 924
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 925
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 926
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 927
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 928
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 929
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 930
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 931
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 932
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 933
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 934
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 935
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 936
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 937
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 938
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 939
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 940
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 941
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 942
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 943
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 944
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 945
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 946
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 947
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 948
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 949
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 950
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 951
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 952
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 953
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 954
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 955
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 956
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 957
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 958
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 959
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 960
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 961
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 962
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 963
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 964
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 965
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 966
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 967
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 968
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 969
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 970
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 971
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 972
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 973
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 974
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 975
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 976
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 977
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 978
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 979
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 980
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 981
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 982
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 983
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 984
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 985
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 986
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 987
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 988
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 989
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 990
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 991
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 992
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 993
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 994
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 995
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 996
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 997
TEST 1 FAILURE
TEST 3 FAILURE
Iteration 998
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
Iteration 999
TEST 1 FAILURE
TEST 3 FAILURE
TEST 3 FAILURE
File 'dominion.c'
Lines executed:43.74% of 567
Branches executed:46.76% of 417
Taken at least once:32.85% of 417
Calls executed:40.00% of 100
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:22
        -:    0:Programs:12
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
function compare called 204497 returned 100% blocks executed 100%
   204497:    8:int compare(const void* a, const void* b) {
   204497:    8-block  0
   204497:    9:  if (*(int*)a > *(int*)b)
   204497:    9-block  0
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
    12772:   10:    return 1;
    12772:   10-block  0
   191725:   11:  if (*(int*)a < *(int*)b)
   191725:   11-block  0
branch  0 taken 19% (fallthrough)
branch  1 taken 81%
    36422:   12:    return -1;
    36422:   12-block  0
   155303:   13:  return 0;
   155303:   13-block  0
        -:   14:}
        -:   15:
function newGame called 0 returned 0% blocks executed 0%
    #####:   16:struct gameState* newGame() {
    $$$$$:   16-block  0
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
    $$$$$:   18-block  0
        -:   19:}
        -:   20:
function kingdomCards called 0 returned 0% blocks executed 0%
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
    $$$$$:   21-block  0
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
    $$$$$:   34-block  0
        -:   35:}
        -:   36:
function initializeGame called 3053 returned 100% blocks executed 94%
     3053:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
     3053:   37-block  0
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;			
        -:   43:  //set up random number generator
     3053:   44:  SelectStream(1);
     3053:   44-block  0
call    0 returned 100%
     3053:   45:  PutSeed((long)randomSeed);
call    0 returned 100%
        -:   46:  
        -:   47:  //check number of players
     3053:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
     3053:   48-block  0
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:   49:    {
    #####:   50:      return -1;
    $$$$$:   50-block  0
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
     3053:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    33583:   57:  for (i = 0; i < 10; i++)
     3053:   57-block  0
    30530:   57-block  1
    33583:   57-block  2
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
        -:   58:    {
   335830:   59:      for (j = 0; j < 10; j++)
    30530:   59-block  0
   305300:   59-block  1
   335830:   59-block  2
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
        -:   60:        {
   305300:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
   305300:   61-block  0
branch  0 taken 90% (fallthrough)
branch  1 taken 10%
   274770:   61-block  1
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:   62:	    {
    #####:   63:	      return -1;
    $$$$$:   63-block  0
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
     3053:   73:  if (numPlayers == 2)
     3053:   73-block  0
branch  0 taken 35% (fallthrough)
branch  1 taken 65%
        -:   74:    {
     1075:   75:      state->supplyCount[curse] = 10;
     1075:   75-block  0
        -:   76:    }
     1978:   77:  else if (numPlayers == 3)
     1978:   77-block  0
branch  0 taken 49% (fallthrough)
branch  1 taken 51%
        -:   78:    {
      975:   79:      state->supplyCount[curse] = 20;
      975:   79-block  0
        -:   80:    }
        -:   81:  else
        -:   82:    {
     1003:   83:      state->supplyCount[curse] = 30;
     1003:   83-block  0
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
     3053:   87:  if (numPlayers == 2)
     3053:   87-block  0
branch  0 taken 35% (fallthrough)
branch  1 taken 65%
        -:   88:    {
     1075:   89:      state->supplyCount[estate] = 8;
     1075:   90:      state->supplyCount[duchy] = 8;
     1075:   91:      state->supplyCount[province] = 8;
     1075:   91-block  0
        -:   92:    }
        -:   93:  else
        -:   94:    {
     1978:   95:      state->supplyCount[estate] = 12;
     1978:   96:      state->supplyCount[duchy] = 12;
     1978:   97:      state->supplyCount[province] = 12;
     1978:   97-block  0
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
     3053:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
     3053:  102:  state->supplyCount[silver] = 40;
     3053:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    64113:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
     3053:  106-block  0
    61060:  106-block  1
    64113:  106-block  2
branch  0 taken 95%
branch  1 taken 5% (fallthrough)
        -:  107:    {
   503745:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
    61060:  108-block  0
   442685:  108-block  1
   503745:  108-block  2
branch  0 taken 94%
branch  1 taken 6% (fallthrough)
        -:  109:	{
   473215:  110:	  if (kingdomCards[j] == i)
   473215:  110-block  0
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    30530:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
    30530:  113-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
    30496:  113-block  1
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
        -:  114:		{
      136:  115:		  if (numPlayers == 2){ 
       68:  115-block  0
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
       68:  115-block  1
       68:  116:		    state->supplyCount[i] = 8; 
       68:  116-block  0
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
    $$$$$:  118-block  0
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    30462:  122:		  state->supplyCount[i] = 10;
    30462:  122-block  0
        -:  123:		}
    30530:  124:	      break;
    30530:  124-block  0
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
   442685:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    12140:  138:  for (i = 0; i < numPlayers; i++)
     3053:  138-block  0
     9087:  138-block  1
    12140:  138-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  139:    {
     9087:  140:      state->deckCount[i] = 0;
    36348:  141:      for (j = 0; j < 3; j++)
     9087:  141-block  0
    27261:  141-block  1
    36348:  141-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  142:	{
    27261:  143:	  state->deck[i][j] = estate;
    27261:  144:	  state->deckCount[i]++;
        -:  145:	}
    72696:  146:      for (j = 3; j < 10; j++)
     9087:  146-block  0
    63609:  146-block  1
    72696:  146-block  2
branch  0 taken 88%
branch  1 taken 13% (fallthrough)
        -:  147:	{
    63609:  148:	  state->deck[i][j] = copper;	  state->deckCount[i]++;		
        -:  149:	}
        -:  150:    }
        -:  151:
        -:  152:  //shuffle player decks
    12140:  153:  for (i = 0; i < numPlayers; i++)
     3053:  153-block  0
     9087:  153-block  1
    12140:  153-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  154:    {
     9087:  155:      if ( shuffle(i, state) < 0 )
     9087:  155-block  0
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
        -:  156:	{
    #####:  157:	  return -1;
    $$$$$:  157-block  0
        -:  158:	}
        -:  159:    }
        -:  160:
        -:  161:  //draw player hands
    12140:  162:  for (i = 0; i < numPlayers; i++)
     3053:  162-block  0
     9087:  162-block  1
    12140:  162-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  163:    {  
        -:  164:      //initialize hand size to zero
     9087:  165:      state->handCount[i] = 0;
     9087:  166:      state->discardCount[i] = 0;
        -:  167:      //draw 5 cards
        -:  168:      // for (j = 0; j < 5; j++)
        -:  169:      //	{
        -:  170:      //	  drawCard(i, state);
        -:  171:      //	}
        -:  172:    }
        -:  173:  
        -:  174:  //set embargo tokens to 0 for all supply piles
    85484:  175:  for (i = 0; i <= treasure_map; i++)
     3053:  175-block  0
    82431:  175-block  1
    85484:  175-block  2
branch  0 taken 96%
branch  1 taken 4% (fallthrough)
        -:  176:    {
    82431:  177:      state->embargoTokens[i] = 0;
        -:  178:    }
        -:  179:
        -:  180:  //initialize first player's turn
     3053:  181:  state->outpostPlayed = 0;
     3053:  182:  state->phase = 0;
     3053:  183:  state->numActions = 1;
     3053:  184:  state->numBuys = 1;
     3053:  185:  state->playedCardCount = 0;
     3053:  186:  state->whoseTurn = 0;
     3053:  187:  state->handCount[state->whoseTurn] = 0;
        -:  188:  //int it; move to top
        -:  189:
        -:  190:  //Moved draw cards to here, only drawing at the start of a turn
    18318:  191:  for (it = 0; it < 5; it++){
     3053:  191-block  0
    18318:  191-block  1
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
    15265:  192:    drawCard(state->whoseTurn, state);
    15265:  192-block  0
call    0 returned 100%
        -:  193:  }
        -:  194:
     3053:  195:  updateCoins(state->whoseTurn, state, 0);
     3053:  195-block  0
call    0 returned 100%
        -:  196:
     3053:  197:  return 0;
        -:  198:}
        -:  199:
function shuffle called 13927 returned 100% blocks executed 100%
    13927:  200:int shuffle(int player, struct gameState *state) {
    13927:  200-block  0
        -:  201: 
        -:  202:
        -:  203:  int newDeck[MAX_DECK];
    13927:  204:  int newDeckPos = 0;
        -:  205:  int card;
        -:  206:  int i;
        -:  207:
    13927:  208:  if (state->deckCount[player] < 1)
    13927:  208-block  0
branch  0 taken 34% (fallthrough)
branch  1 taken 66%
     4782:  209:    return -1;
     4782:  209-block  0
     9145:  210:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare); 
     9145:  210-block  0
call    0 returned 100%
        -:  211:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  212:
   113993:  213:  while (state->deckCount[player] > 0) {
   113993:  213-block  0
branch  0 taken 92%
branch  1 taken 8% (fallthrough)
   104848:  214:    card = floor(Random() * state->deckCount[player]);
   104848:  214-block  0
call    0 returned 100%
   104848:  215:    newDeck[newDeckPos] = state->deck[player][card];
   104848:  216:    newDeckPos++;
  1504216:  217:    for (i = card; i < state->deckCount[player]-1; i++) {
  1399368:  217-block  0
  1504216:  217-block  1
branch  0 taken 93%
branch  1 taken 7% (fallthrough)
  1399368:  218:      state->deck[player][i] = state->deck[player][i+1];
        -:  219:    }
   104848:  220:    state->deckCount[player]--;
   104848:  220-block  0
        -:  221:  }
   113993:  222:  for (i = 0; i < newDeckPos; i++) {
     9145:  222-block  0
   104848:  222-block  1
   113993:  222-block  2
branch  0 taken 92%
branch  1 taken 8% (fallthrough)
   104848:  223:    state->deck[player][i] = newDeck[i];
   104848:  224:    state->deckCount[player]++;
        -:  225:  }
        -:  226:
    13927:  227:  return 0;
     9145:  227-block  0
    13927:  227-block  1
        -:  228:}
        -:  229:
function playCard called 0 returned 0% blocks executed 0%
    #####:  230:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state) 
    $$$$$:  230-block  0
        -:  231:{	
        -:  232:  int card;
    #####:  233:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  234:
        -:  235:  //check if it is the right phase
    #####:  236:  if (state->phase != 0)
    $$$$$:  236-block  0
branch  0 never executed
branch  1 never executed
        -:  237:    {
    #####:  238:      return -1;
    $$$$$:  238-block  0
        -:  239:    }
        -:  240:	
        -:  241:  //check if player has enough actions
    #####:  242:  if ( state->numActions < 1 )
    $$$$$:  242-block  0
branch  0 never executed
branch  1 never executed
        -:  243:    {
    #####:  244:      return -1;
    $$$$$:  244-block  0
        -:  245:    }
        -:  246:	
        -:  247:  //get card played
    #####:  248:  card = handCard(handPos, state);
    $$$$$:  248-block  0
call    0 never executed
        -:  249:	
        -:  250:  //check if selected card is an action
    #####:  251:  if ( card < adventurer || card > treasure_map )
branch  0 never executed
branch  1 never executed
    $$$$$:  251-block  0
branch  2 never executed
branch  3 never executed
        -:  252:    {
    #####:  253:      return -1;
    $$$$$:  253-block  0
        -:  254:    }
        -:  255:	
        -:  256:  //play card
    #####:  257:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
    $$$$$:  257-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  258:    {
    #####:  259:      return -1;
    $$$$$:  259-block  0
        -:  260:    }
        -:  261:	
        -:  262:  //reduce number of actions
    #####:  263:  state->numActions--;
        -:  264:
        -:  265:  //update coins (Treasure cards may be added with card draws)
    #####:  266:  updateCoins(state->whoseTurn, state, coin_bonus);
    $$$$$:  266-block  0
call    0 never executed
        -:  267:	
    #####:  268:  return 0;
    $$$$$:  268-block  0
        -:  269:}
        -:  270:
function buyCard called 0 returned 0% blocks executed 0%
    #####:  271:int buyCard(int supplyPos, struct gameState *state) {
    $$$$$:  271-block  0
    $$$$$:  271-block  1
        -:  272:  int who;
        -:  273:  if (DEBUG){
        -:  274:    printf("Entering buyCard...\n");
        -:  275:  }
        -:  276:
        -:  277:  // I don't know what to do about the phase thing.
        -:  278:
    #####:  279:  who = state->whoseTurn;
        -:  280:
    #####:  281:  if (state->numBuys < 1){
    $$$$$:  281-block  0
branch  0 never executed
branch  1 never executed
        -:  282:    if (DEBUG)
        -:  283:      printf("You do not have any buys left\n");
    #####:  284:    return -1;
    $$$$$:  284-block  0
    #####:  285:  } else if (supplyCount(supplyPos, state) <1){
    $$$$$:  285-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  286:    if (DEBUG)
        -:  287:      printf("There are not any of that type of card left\n");
    #####:  288:    return -1;
    $$$$$:  288-block  0
    #####:  289:  } else if (state->coins < getCost(supplyPos)){
    $$$$$:  289-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  290:    if (DEBUG) 
        -:  291:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  292:    return -1;
    $$$$$:  292-block  0
        -:  293:  } else {
    #####:  294:    state->phase=1;
        -:  295:    //state->supplyCount[supplyPos]--;
    #####:  296:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
    $$$$$:  296-block  0
call    0 never executed
        -:  297:  
    #####:  298:    state->coins = (state->coins) - (getCost(supplyPos));
call    0 never executed
    #####:  299:    state->numBuys--;
        -:  300:    if (DEBUG)
        -:  301:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  302:  }
        -:  303:
        -:  304:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  305:  //state->discardCount[who]++;
        -:  306:    
    #####:  307:  return 0;
    $$$$$:  307-block  0
        -:  308:}
        -:  309:
function numHandCards called 0 returned 0% blocks executed 0%
    #####:  310:int numHandCards(struct gameState *state) {
    $$$$$:  310-block  0
    #####:  311:  return state->handCount[ whoseTurn(state) ];
    $$$$$:  311-block  0
call    0 never executed
        -:  312:}
        -:  313:
function handCard called 0 returned 0% blocks executed 0%
    #####:  314:int handCard(int handPos, struct gameState *state) {
    $$$$$:  314-block  0
    #####:  315:  int currentPlayer = whoseTurn(state);
    $$$$$:  315-block  0
call    0 never executed
    #####:  316:  return state->hand[currentPlayer][handPos];
        -:  317:}
        -:  318:
function supplyCount called 3029 returned 100% blocks executed 100%
     3029:  319:int supplyCount(int card, struct gameState *state) {
     3029:  319-block  0
     3029:  320:  return state->supplyCount[card];
     3029:  320-block  0
        -:  321:}
        -:  322:
function fullDeckCount called 0 returned 0% blocks executed 0%
    #####:  323:int fullDeckCount(int player, int card, struct gameState *state) {
    $$$$$:  323-block  0
        -:  324:  int i;
    #####:  325:  int count = 0;
        -:  326:
    #####:  327:  for (i = 0; i < state->deckCount[player]; i++)
    $$$$$:  327-block  0
    $$$$$:  327-block  1
    $$$$$:  327-block  2
branch  0 never executed
branch  1 never executed
        -:  328:    {
    #####:  329:      if (state->deck[player][i] == card) count++;
    $$$$$:  329-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  329-block  1
        -:  330:    }
        -:  331:
    #####:  332:  for (i = 0; i < state->handCount[player]; i++)
    $$$$$:  332-block  0
    $$$$$:  332-block  1
    $$$$$:  332-block  2
branch  0 never executed
branch  1 never executed
        -:  333:    {
    #####:  334:      if (state->hand[player][i] == card) count++;
    $$$$$:  334-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  334-block  1
        -:  335:    }
        -:  336:
    #####:  337:  for (i = 0; i < state->discardCount[player]; i++)
    $$$$$:  337-block  0
    $$$$$:  337-block  1
    $$$$$:  337-block  2
branch  0 never executed
branch  1 never executed
        -:  338:    {
    #####:  339:      if (state->discard[player][i] == card) count++;
    $$$$$:  339-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  339-block  1
        -:  340:    }
        -:  341:
    #####:  342:  return count;
    $$$$$:  342-block  0
        -:  343:}
        -:  344:
function whoseTurn called 6040 returned 100% blocks executed 100%
     6040:  345:int whoseTurn(struct gameState *state) {
     6040:  345-block  0
     6040:  346:  return state->whoseTurn;
     6040:  346-block  0
        -:  347:}
        -:  348:
function endTurn called 0 returned 0% blocks executed 0%
    #####:  349:int endTurn(struct gameState *state) {
    $$$$$:  349-block  0
        -:  350:  int k;
        -:  351:  int i;
    #####:  352:  int currentPlayer = whoseTurn(state);
    $$$$$:  352-block  0
call    0 never executed
        -:  353:  
        -:  354:  //Discard hand
    #####:  355:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    $$$$$:  355-block  0
    $$$$$:  355-block  1
branch  0 never executed
branch  1 never executed
    #####:  356:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  357:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  358:  }
    #####:  359:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  360:    
        -:  361:  //Code for determining the player
    #####:  362:  if (currentPlayer < (state->numPlayers - 1)){ 
    $$$$$:  362-block  0
branch  0 never executed
branch  1 never executed
    #####:  363:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
    $$$$$:  363-block  0
        -:  364:  }
        -:  365:  else{
    #####:  366:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
    $$$$$:  366-block  0
        -:  367:  }
        -:  368:
    #####:  369:  state->outpostPlayed = 0;
    #####:  370:  state->phase = 0;
    #####:  371:  state->numActions = 1;
    #####:  372:  state->coins = 0;
    #####:  373:  state->numBuys = 1;
    #####:  374:  state->playedCardCount = 0;
    #####:  375:  state->handCount[state->whoseTurn] = 0;
        -:  376:
        -:  377:  //int k; move to top
        -:  378:  //Next player draws hand
    #####:  379:  for (k = 0; k < 5; k++){
    $$$$$:  379-block  0
    $$$$$:  379-block  1
branch  0 never executed
branch  1 never executed
    #####:  380:    drawCard(state->whoseTurn, state);//Draw a card
    $$$$$:  380-block  0
call    0 never executed
        -:  381:  }
        -:  382:
        -:  383:  //Update money
    #####:  384:  updateCoins(state->whoseTurn, state , 0);
    $$$$$:  384-block  0
call    0 never executed
        -:  385:
    #####:  386:  return 0;
        -:  387:}
        -:  388:
function isGameOver called 0 returned 0% blocks executed 0%
    #####:  389:int isGameOver(struct gameState *state) {
    $$$$$:  389-block  0
        -:  390:  int i;
        -:  391:  int j;
        -:  392:	
        -:  393:  //if stack of Province cards is empty, the game ends
    #####:  394:  if (state->supplyCount[province] == 0)
    $$$$$:  394-block  0
branch  0 never executed
branch  1 never executed
        -:  395:    {
    #####:  396:      return 1;
    $$$$$:  396-block  0
        -:  397:    }
        -:  398:
        -:  399:  //if three supply pile are at 0, the game ends
    #####:  400:  j = 0;
    #####:  401:  for (i = 0; i < 25; i++)
    $$$$$:  401-block  0
    $$$$$:  401-block  1
    $$$$$:  401-block  2
branch  0 never executed
branch  1 never executed
        -:  402:    {
    #####:  403:      if (state->supplyCount[i] == 0)
    $$$$$:  403-block  0
branch  0 never executed
branch  1 never executed
        -:  404:	{
    #####:  405:	  j++;
    $$$$$:  405-block  0
        -:  406:	}
        -:  407:    }
    #####:  408:  if ( j >= 3)
    $$$$$:  408-block  0
branch  0 never executed
branch  1 never executed
        -:  409:    {
    #####:  410:      return 1;
    $$$$$:  410-block  0
        -:  411:    }
        -:  412:
    #####:  413:  return 0;
    $$$$$:  413-block  0
        -:  414:}
        -:  415:
function scoreFor called 10 returned 100% blocks executed 38%
       10:  416:int scoreFor (int player, struct gameState *state) {
       10:  416-block  0
        -:  417:
        -:  418:  int i;
       10:  419:  int score = 0;
        -:  420:  //score from hand
       60:  421:  for (i = 0; i < state->handCount[player]; i++)
       10:  421-block  0
       50:  421-block  1
       60:  421-block  2
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        -:  422:    {
       50:  423:      if (state->hand[player][i] == curse) { score = score - 1; };
       50:  423-block  0
branch  0 taken 20% (fallthrough)
branch  1 taken 80%
       10:  423-block  1
       50:  424:      if (state->hand[player][i] == estate) { score = score + 1; };
       50:  424-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        2:  424-block  1
       50:  425:      if (state->hand[player][i] == duchy) { score = score + 3; };
       50:  425-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        2:  425-block  1
       50:  426:      if (state->hand[player][i] == province) { score = score + 6; };
       50:  426-block  0
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
        2:  426-block  1
       50:  427:      if (state->hand[player][i] == great_hall) { score = score + 1; };
       50:  427-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    $$$$$:  427-block  1
       50:  428:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
       50:  428-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    $$$$$:  428-block  1
call    2 never executed
        -:  429:    }
        -:  430:
        -:  431:  //score from discard
       10:  432:  for (i = 0; i < state->discardCount[player]; i++)
       10:  432-block  0
    $$$$$:  432-block  1
       10:  432-block  2
branch  0 taken 0%
branch  1 taken 100% (fallthrough)
        -:  433:    {
    #####:  434:      if (state->discard[player][i] == curse) { score = score - 1; };
    $$$$$:  434-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  434-block  1
    #####:  435:      if (state->discard[player][i] == estate) { score = score + 1; };
    $$$$$:  435-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  435-block  1
    #####:  436:      if (state->discard[player][i] == duchy) { score = score + 3; };
    $$$$$:  436-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  436-block  1
    #####:  437:      if (state->discard[player][i] == province) { score = score + 6; };
    $$$$$:  437-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  437-block  1
    #####:  438:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    $$$$$:  438-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  438-block  1
    #####:  439:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
    $$$$$:  439-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  439-block  1
call    2 never executed
        -:  440:    }
        -:  441:
        -:  442:  //score from deck
       10:  443:  for (i = 0; i < state->discardCount[player]; i++)
       10:  443-block  0
    $$$$$:  443-block  1
       10:  443-block  2
branch  0 taken 0%
branch  1 taken 100% (fallthrough)
        -:  444:    {
    #####:  445:      if (state->deck[player][i] == curse) { score = score - 1; };
    $$$$$:  445-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  445-block  1
    #####:  446:      if (state->deck[player][i] == estate) { score = score + 1; };
    $$$$$:  446-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  446-block  1
    #####:  447:      if (state->deck[player][i] == duchy) { score = score + 3; };
    $$$$$:  447-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  447-block  1
    #####:  448:      if (state->deck[player][i] == province) { score = score + 6; };
    $$$$$:  448-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  448-block  1
    #####:  449:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    $$$$$:  449-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  449-block  1
    #####:  450:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
    $$$$$:  450-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  450-block  1
call    2 never executed
        -:  451:    }
        -:  452:
       10:  453:  return score;
       10:  453-block  0
        -:  454:}
        -:  455:
function getWinners called 0 returned 0% blocks executed 0%
    #####:  456:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
    $$$$$:  456-block  0
        -:  457:  int i;	
        -:  458:  int j;
        -:  459:  int highScore;
        -:  460:  int currentPlayer;
        -:  461:
        -:  462:  //get score for each player
    #####:  463:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  463-block  0
    $$$$$:  463-block  1
    $$$$$:  463-block  2
branch  0 never executed
branch  1 never executed
        -:  464:    {
        -:  465:      //set unused player scores to -9999
    #####:  466:      if (i >= state->numPlayers)
    $$$$$:  466-block  0
branch  0 never executed
branch  1 never executed
        -:  467:	{
    #####:  468:	  players[i] = -9999;
    $$$$$:  468-block  0
        -:  469:	}
        -:  470:      else
        -:  471:	{
    #####:  472:	  players[i] = scoreFor (i, state);
    $$$$$:  472-block  0
call    0 never executed
        -:  473:	}
        -:  474:    }
        -:  475:
        -:  476:  //find highest score
    #####:  477:  j = 0;
    #####:  478:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  478-block  0
    $$$$$:  478-block  1
    $$$$$:  478-block  2
branch  0 never executed
branch  1 never executed
        -:  479:    {
    #####:  480:      if (players[i] > players[j])
    $$$$$:  480-block  0
branch  0 never executed
branch  1 never executed
        -:  481:	{
    #####:  482:	  j = i;
    $$$$$:  482-block  0
        -:  483:	}
        -:  484:    }
    #####:  485:  highScore = players[j];
        -:  486:
        -:  487:  //add 1 to players who had less turns
    #####:  488:  currentPlayer = whoseTurn(state);
    $$$$$:  488-block  0
call    0 never executed
    #####:  489:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  489-block  0
    $$$$$:  489-block  1
branch  0 never executed
branch  1 never executed
        -:  490:    {
    #####:  491:      if ( players[i] == highScore && i > currentPlayer )
    $$$$$:  491-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  491-block  1
branch  2 never executed
branch  3 never executed
        -:  492:	{
    #####:  493:	  players[i]++;
    $$$$$:  493-block  0
        -:  494:	}
        -:  495:    }
        -:  496:
        -:  497:  //find new highest score
    #####:  498:  j = 0;
    #####:  499:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  499-block  0
    $$$$$:  499-block  1
    $$$$$:  499-block  2
branch  0 never executed
branch  1 never executed
        -:  500:    {
    #####:  501:      if ( players[i] > players[j] )
    $$$$$:  501-block  0
branch  0 never executed
branch  1 never executed
        -:  502:	{
    #####:  503:	  j = i;
    $$$$$:  503-block  0
        -:  504:	}
        -:  505:    }
    #####:  506:  highScore = players[j];
        -:  507:
        -:  508:  //set winners in array to 1 and rest to 0
    #####:  509:  for (i = 0; i < MAX_PLAYERS; i++)
    $$$$$:  509-block  0
    $$$$$:  509-block  1
    $$$$$:  509-block  2
branch  0 never executed
branch  1 never executed
        -:  510:    {
    #####:  511:      if ( players[i] == highScore )
    $$$$$:  511-block  0
branch  0 never executed
branch  1 never executed
        -:  512:	{
    #####:  513:	  players[i] = 1;
    $$$$$:  513-block  0
        -:  514:	}
        -:  515:      else
        -:  516:	{
    #####:  517:	  players[i] = 0;
    $$$$$:  517-block  0
        -:  518:	}
        -:  519:    }
        -:  520:
    #####:  521:  return 0;
    $$$$$:  521-block  0
        -:  522:}
        -:  523:
function drawCard called 523846 returned 100% blocks executed 100%
   523846:  524:int drawCard(int player, struct gameState *state)
   523846:  524-block  0
        -:  525:{	int count;
        -:  526:  int deckCounter;
   523846:  527:  if (state->deckCount[player] <= 0){//Deck is empty
   523846:  527-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -:  528:    
        -:  529:    //Step 1 Shuffle the discard pile back into a deck
        -:  530:    int i;
        -:  531:    //Move discard to deck
    16432:  532:    for (i = 0; i < state->discardCount[player];i++){
     2454:  532-block  0
    13978:  532-block  1
    16432:  532-block  2
branch  0 taken 85%
branch  1 taken 15% (fallthrough)
    13978:  533:      state->deck[player][i] = state->discard[player][i];
    13978:  534:      state->discard[player][i] = -1;
        -:  535:    }
        -:  536:
     2454:  537:    state->deckCount[player] = state->discardCount[player];
     2454:  538:    state->discardCount[player] = 0;//Reset discard
        -:  539:
        -:  540:    //Shufffle the deck
     2454:  541:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
     2454:  541-block  0
call    0 returned 100%
        -:  542:   
        -:  543:    if (DEBUG){//Debug statements
        -:  544:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  545:    }
        -:  546:    
     2454:  547:    state->discardCount[player] = 0;
        -:  548:
        -:  549:    //Step 2 Draw Card
     2454:  550:    count = state->handCount[player];//Get current player's hand count
        -:  551:    
        -:  552:    if (DEBUG){//Debug statements
        -:  553:      printf("Current hand count: %d\n", count);
        -:  554:    }
        -:  555:    
     2454:  556:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  557:
     2454:  558:    if (deckCounter == 0)
     2454:  558-block  0
branch  0 taken 98% (fallthrough)
branch  1 taken 2%
     2396:  559:      return -1;
     2396:  559-block  0
        -:  560:
       58:  561:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
       58:  562:    state->deckCount[player]--;
       58:  563:    state->handCount[player]++;//Increment hand count
       58:  563-block  0
        -:  564:  }
        -:  565:
        -:  566:  else{
   521392:  567:    int count = state->handCount[player];//Get current hand count for player
   521392:  567-block  0
        -:  568:    int deckCounter;
        -:  569:    if (DEBUG){//Debug statements
        -:  570:      printf("Current hand count: %d\n", count);
        -:  571:    }
        -:  572:
   521392:  573:    deckCounter = state->deckCount[player];//Create holder for the deck count
   521392:  574:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
   521392:  575:    state->deckCount[player]--;
   521392:  576:    state->handCount[player]++;//Increment hand count
   521392:  576-block  0
        -:  577:  }
        -:  578:
   521450:  579:  return 0;
   521450:  579-block  0
        -:  580:}
        -:  581:
function getCost called 6 returned 100% blocks executed 13%
        6:  582:int getCost(int cardNumber)
        6:  582-block  0
        -:  583:{
        6:  584:  switch( cardNumber ) 
        6:  584-block  0
branch  0 taken 0%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 50%
branch  5 taken 0%
branch  6 taken 50%
branch  7 taken 0%
branch  8 taken 0%
branch  9 taken 0%
branch 10 taken 0%
branch 11 taken 0%
branch 12 taken 0%
branch 13 taken 0%
branch 14 taken 0%
branch 15 taken 0%
branch 16 taken 0%
branch 17 taken 0%
branch 18 taken 0%
branch 19 taken 0%
branch 20 taken 0%
branch 21 taken 0%
branch 22 taken 0%
branch 23 taken 0%
branch 24 taken 0%
branch 25 taken 0%
branch 26 taken 0%
branch 27 taken 0%
        -:  585:    {
        -:  586:    case curse:
    #####:  587:      return 0;
    $$$$$:  587-block  0
        -:  588:    case estate:
    #####:  589:      return 2;
    $$$$$:  589-block  0
        -:  590:    case duchy:
    #####:  591:      return 5;
    $$$$$:  591-block  0
        -:  592:    case province:
    #####:  593:      return 8;
    $$$$$:  593-block  0
        -:  594:    case copper:
        3:  595:      return 0;
        3:  595-block  0
        -:  596:    case silver:
    #####:  597:      return 3;
    $$$$$:  597-block  0
        -:  598:    case gold:
        3:  599:      return 6;
        3:  599-block  0
        -:  600:    case adventurer:
    #####:  601:      return 6;
    $$$$$:  601-block  0
        -:  602:    case council_room:
    #####:  603:      return 5;
    $$$$$:  603-block  0
        -:  604:    case feast:
    #####:  605:      return 4;
    $$$$$:  605-block  0
        -:  606:    case gardens:
    #####:  607:      return 4;
    $$$$$:  607-block  0
        -:  608:    case mine:
    #####:  609:      return 5;
    $$$$$:  609-block  0
        -:  610:    case remodel:
    #####:  611:      return 4;
    $$$$$:  611-block  0
        -:  612:    case smithy:
    #####:  613:      return 4;
    $$$$$:  613-block  0
        -:  614:    case village:
    #####:  615:      return 3;
    $$$$$:  615-block  0
        -:  616:    case baron:
    #####:  617:      return 4;
    $$$$$:  617-block  0
        -:  618:    case great_hall:
    #####:  619:      return 3;
    $$$$$:  619-block  0
        -:  620:    case minion:
    #####:  621:      return 5;
    $$$$$:  621-block  0
        -:  622:    case steward:
    #####:  623:      return 3;
    $$$$$:  623-block  0
        -:  624:    case tribute:
    #####:  625:      return 5;
    $$$$$:  625-block  0
        -:  626:    case ambassador:
    #####:  627:      return 3;
    $$$$$:  627-block  0
        -:  628:    case cutpurse:
    #####:  629:      return 4;
    $$$$$:  629-block  0
        -:  630:    case embargo: 
    #####:  631:      return 2;
    $$$$$:  631-block  0
        -:  632:    case outpost:
    #####:  633:      return 5;
    $$$$$:  633-block  0
        -:  634:    case salvager:
    #####:  635:      return 4;
    $$$$$:  635-block  0
        -:  636:    case sea_hag:
    #####:  637:      return 4;
    $$$$$:  637-block  0
        -:  638:    case treasure_map:
    #####:  639:      return 4;
    $$$$$:  639-block  0
        -:  640:    }
        -:  641:	
    #####:  642:  return -1;
    $$$$$:  642-block  0
        -:  643:}
        -:  644:
        -:  645:/****************************************************************************************************
        -:  646:* Start of card functions
        -:  647:*****************************************************************************************************/
        -:  648:
function playSmithy called 5 returned 100% blocks executed 100%
        5:  649:int playSmithy(struct gameState *state, int handPos) {
        5:  649-block  0
        -:  650:	//+3 Cards
        5:  651:	int currentPlayer = whoseTurn(state);
        5:  651-block  0
call    0 returned 100%
        -:  652:	int i;
       20:  653:    for (i = 0; i < 3; i++)
       20:  653-block  0
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  654:	{
       15:  655:		drawCard(currentPlayer, state);
       15:  655-block  0
call    0 returned 100%
        -:  656:	}
        -:  657:			
        -:  658:	//discard card from hand
        5:  659:	discardCard(handPos, currentPlayer, state, 1);
        5:  659-block  0
call    0 returned 100%
        5:  660:	return 0;
        -:  661:}
        -:  662:
function playAdventurer called 2006 returned 100% blocks executed 100%
     2006:  663:int playAdventurer(struct gameState *state) {
     2006:  663-block  0
     2006:  664:	int currentPlayer = whoseTurn(state);
     2006:  664-block  0
call    0 returned 100%
     2006:  665:	int drawntreasure =0;
        -:  666:	int cardDrawn;
        -:  667:	int temphand[MAX_HAND]; 
     2006:  668:	int z = 0;
        -:  669:
   497539:  670:	while(drawntreasure<2){
   497539:  670-block  0
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
   495533:  671:		if (state->deckCount[currentPlayer] <1){//if the deck is empty we need to shuffle discard and add to deck
   495533:  671-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
     2386:  672:		  shuffle(currentPlayer, state);
     2386:  672-block  0
call    0 returned 100%
        -:  673:		}
   495533:  674:		drawCard(currentPlayer, state);
   495533:  674-block  0
call    0 returned 100%
   495533:  675:		cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
   495533:  676:		if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold) {
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
   491539:  676-block  0
branch  2 taken 99% (fallthrough)
branch  3 taken 1%
   491528:  676-block  1
branch  4 taken 1% (fallthrough)
branch  5 taken 99%
     4012:  677:		  drawntreasure++;
     4012:  677-block  0
        -:  678:    }
        -:  679:		else{  
   491521:  680:		  temphand[z]=cardDrawn;
   491521:  681:		  state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
   491521:  682:      z++;
   491521:  682-block  0
        -:  683:    }
        -:  684:  }
   488507:  685:  while(z-1>=0){
     2006:  685-block  0
   488507:  685-block  1
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
   486501:  686:    state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
   486501:  687:    z=z-1;
   486501:  687-block  0
        -:  688:  }
     2006:  689:  return 0;
     2006:  689-block  0
        -:  690:}
        -:  691:
function playMine called 0 returned 0% blocks executed 0%
    #####:  692:int playMine(struct gameState *state, int choice1, int choice2, int handPos) {
    $$$$$:  692-block  0
    #####:  693:	int currentPlayer = whoseTurn(state);
    $$$$$:  693-block  0
call    0 never executed
        -:  694:	int i, j;
    #####:  695:	int z = 0;
    #####:  696:	j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  697:
    #####:  698:	if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold)
branch  0 never executed
branch  1 never executed
    $$$$$:  698-block  0
branch  2 never executed
branch  3 never executed
        -:  699:	{
    #####:  700:	  return -1;
    $$$$$:  700-block  0
        -:  701:	}
        -:  702:
    #####:  703:	if (choice2 > z || choice2 < curse)
    $$$$$:  703-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  703-block  1
branch  2 never executed
branch  3 never executed
        -:  704:	{
    #####:  705:		return -1;
    $$$$$:  705-block  0
        -:  706:	}
        -:  707:
    #####:  708:	if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) )
    $$$$$:  708-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  709:	{
    #####:  710:		return -1;
    $$$$$:  710-block  0
        -:  711:	}
        -:  712:
    #####:  713:	gainCard(choice1, state, 2, currentPlayer);
    $$$$$:  713-block  0
call    0 never executed
        -:  714:
        -:  715:	//discard card from hand
    #####:  716:	discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  717:
        -:  718:	//discard trashed card
    #####:  719:	for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$:  719-block  0
    $$$$$:  719-block  1
branch  0 never executed
branch  1 never executed
        -:  720:	{
    #####:  721:		if (state->hand[currentPlayer][i] == j)
    $$$$$:  721-block  0
branch  0 never executed
branch  1 never executed
        -:  722:		{
    #####:  723:			discardCard(i, currentPlayer, state, 0);			
    $$$$$:  723-block  0
call    0 never executed
    #####:  724:			break;
        -:  725:		}
        -:  726:	}
        -:  727:		
    #####:  728:	return 0;
    $$$$$:  728-block  0
        -:  729:}
        -:  730:
function playVillage called 1007 returned 100% blocks executed 100%
     1007:  731:int playVillage(struct gameState *state, int handPos) {
     1007:  731-block  0
     1007:  732:	int currentPlayer = whoseTurn(state);
     1007:  732-block  0
call    0 returned 100%
        -:  733:
        -:  734:	//+1 Card
     1007:  735:	drawCard(currentPlayer, state);
call    0 returned 100%
        -:  736:
        -:  737:	//+2 Actions
     1007:  738:	state->numActions = state->numActions + 2;
        -:  739:
        -:  740:	//discard played card from hand
     1007:  741:	discardCard(handPos, currentPlayer, state, 0);
call    0 returned 100%
     1007:  742:	return 0;
        -:  743:}
        -:  744:
function playRemodel called 3 returned 100% blocks executed 87%
        3:  745:int playRemodel(struct gameState *state, int choice1, int choice2, int handPos) {
        3:  745-block  0
        -:  746:	int i, j;
        3:  747:	int currentPlayer = whoseTurn(state);
        3:  747-block  0
call    0 returned 100%
        -:  748: 
        -:  749:
        3:  750:	j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  751:
        3:  752:	if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
call    0 returned 100%
call    1 returned 100%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:  753:	{
    #####:  754:		return -1;
    $$$$$:  754-block  0
        -:  755:	}
        -:  756:
        3:  757:	gainCard(choice2, state, 0, currentPlayer);
        3:  757-block  0
call    0 returned 100%
        -:  758:
        -:  759:	//discard card from hand
        3:  760:	discardCard(handPos+1, currentPlayer, state, 0);
call    0 returned 100%
        -:  761:
        -:  762:	//discard trashed card
        3:  763:	for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$:  763-block  0
        3:  763-block  1
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
        -:  764:		{
        3:  765:		if (state->hand[currentPlayer][i] == j)
        3:  765-block  0
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  766:		{
        3:  767:			discardCard(i+1, currentPlayer, state, 0);			
        3:  767-block  0
call    0 returned 100%
        3:  768:			break;
        -:  769:		}
        -:  770:	}
        -:  771:
        3:  772:	return 0;
        3:  772-block  0
        -:  773:}
        -:  774:
function cardEffect called 3019 returned 100% blocks executed 21%
     3019:  775:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
     3019:  775-block  0
        -:  776:{
        -:  777:  int i;
        -:  778:  int j;
        -:  779:  int k;
        -:  780:  int x;
        -:  781:  int index;
     3019:  782:  int currentPlayer = whoseTurn(state);
     3019:  782-block  0
call    0 returned 100%
     3019:  783:  int nextPlayer = currentPlayer + 1;
        -:  784:
     3019:  785:  int tributeRevealedCards[2] = {-1, -1};
        -:  786:  int temphand[MAX_HAND];// moved above the if statement
     3019:  787:  int drawntreasure=0;
        -:  788:  int cardDrawn;
     3019:  789:  int z = 0;// this is the counter for the temp hand
     3019:  790:  if (nextPlayer > (state->numPlayers - 1)){
branch  0 taken 36% (fallthrough)
branch  1 taken 64%
     1079:  791:    nextPlayer = 0;
     1079:  791-block  0
        -:  792:  }
        -:  793:  
        -:  794:	
        -:  795:  //uses switch to select card and perform actions
     3019:  796:  switch( card ) 
     3019:  796-block  0
branch  0 taken 66%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
branch  5 taken 1%
branch  6 taken 1%
branch  7 taken 33%
branch  8 taken 0%
branch  9 taken 0%
branch 10 taken 0%
branch 11 taken 1%
branch 12 taken 0%
branch 13 taken 0%
branch 14 taken 0%
branch 15 taken 0%
branch 16 taken 0%
branch 17 taken 0%
branch 18 taken 0%
branch 19 taken 0%
branch 20 taken 0%
        -:  797:    {
        -:  798:    case adventurer:
     2006:  799:      playAdventurer(state);
     2006:  799-block  0
call    0 returned 100%
        -:  800:			
        -:  801:    case council_room:
        -:  802:      //+4 Cards
    10030:  803:      for (i = 0; i < 4; i++)
     2006:  803-block  0
    10030:  803-block  1
branch  0 taken 80%
branch  1 taken 20% (fallthrough)
        -:  804:	{
     8024:  805:	  drawCard(currentPlayer, state);
     8024:  805-block  0
call    0 returned 100%
        -:  806:	}
        -:  807:			
        -:  808:      //+1 Buy
     2006:  809:      state->numBuys++;
        -:  810:			
        -:  811:      //Each other player draws a card
     8010:  812:      for (i = 0; i < state->numPlayers; i++)
     2006:  812-block  0
     6004:  812-block  1
     8010:  812-block  2
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
        -:  813:	{
     6004:  814:	  if ( i != currentPlayer )
     6004:  814-block  0
branch  0 taken 67% (fallthrough)
branch  1 taken 33%
        -:  815:	    {
     3998:  816:	      drawCard(i, state);
     3998:  816-block  0
call    0 returned 100%
        -:  817:	    }
        -:  818:	}
        -:  819:			
        -:  820:      //put played card in played card pile
     2006:  821:      discardCard(handPos, currentPlayer, state, 0);
     2006:  821-block  0
call    0 returned 100%
        -:  822:			
     2006:  823:      return 0;
        -:  824:			
        -:  825:    case feast:
        -:  826:      //gain card with cost up to 5
        -:  827:      //Backup hand
    #####:  828:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    $$$$$:  828-block  0
    $$$$$:  828-block  1
    $$$$$:  828-block  2
branch  0 never executed
branch  1 never executed
    #####:  829:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  830:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  831:      }
        -:  832:      //Backup hand
        -:  833:
        -:  834:      //Update Coins for Buy
    #####:  835:      updateCoins(currentPlayer, state, 5);
    $$$$$:  835-block  0
call    0 never executed
    #####:  836:      x = 1;//Condition to loop on
    #####:  837:      while( x == 1) {//Buy one card
    $$$$$:  837-block  0
branch  0 never executed
branch  1 never executed
    #####:  838:	if (supplyCount(choice1, state) <= 0){
    $$$$$:  838-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  839:	  if (DEBUG)
        -:  840:	    printf("None of that card left, sorry!\n");
        -:  841:
        -:  842:	  if (DEBUG){
        -:  843:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  844:	  }
        -:  845:	}
    #####:  846:	else if (state->coins < getCost(choice1)){
    $$$$$:  846-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  847:	  printf("That card is too expensive!\n");
    $$$$$:  847-block  0
call    0 never executed
        -:  848:
        -:  849:	  if (DEBUG){
        -:  850:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  851:	  }
        -:  852:	}
        -:  853:	else{
        -:  854:
        -:  855:	  if (DEBUG){
        -:  856:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  857:	  }
        -:  858:
    #####:  859:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    $$$$$:  859-block  0
call    0 never executed
    #####:  860:	  x = 0;//No more buying cards
        -:  861:
        -:  862:	  if (DEBUG){
        -:  863:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  864:	  }
        -:  865:
        -:  866:	}
        -:  867:      }     
        -:  868:
        -:  869:      //Reset Hand
    #####:  870:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    $$$$$:  870-block  0
    $$$$$:  870-block  1
    $$$$$:  870-block  2
branch  0 never executed
branch  1 never executed
    #####:  871:	state->hand[currentPlayer][i] = temphand[i];
    #####:  872:	temphand[i] = -1;
        -:  873:      }
        -:  874:      //Reset Hand
        -:  875:      			
    #####:  876:      return 0;
    $$$$$:  876-block  0
        -:  877:			
        -:  878:    case gardens:
    #####:  879:      return -1;
    $$$$$:  879-block  0
        -:  880:			
        -:  881:    case mine:
    #####:  882:   	  playMine(state, choice1, choice2, handPos);
    $$$$$:  882-block  0
call    0 never executed
        -:  883:			
        -:  884:    case remodel:
        3:  885:      playRemodel(state, choice1, choice2, handPos);
        3:  885-block  0
call    0 returned 100%
        -:  886:		
        -:  887:    case smithy:
        5:  888:      playSmithy(state, handPos);
        5:  888-block  0
call    0 returned 100%
        -:  889:		
        -:  890:    case village:
     1007:  891:      playVillage(state, handPos);
     1007:  891-block  0
call    0 returned 100%
        -:  892:		
        -:  893:    case baron:
     1007:  894:      state->numBuys++;//Increase buys by 1!
     1007:  895:      if (choice1 > 0){//Boolean true or going to discard an estate
     1007:  895-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        1:  896:	int p = 0;//Iterator for hand!
        1:  897:	int card_not_discarded = 1;//Flag for discard set!
        2:  898:	while(card_not_discarded){
        1:  898-block  0
        2:  898-block  1
branch  0 taken 50%
branch  1 taken 50% (fallthrough)
        1:  898-block  2
        1:  899:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
        1:  899-block  0
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:  900:	    state->coins += 4;//Add 4 coins to the amount of coins
        1:  901:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
        1:  902:	    state->discardCount[currentPlayer]++;
        6:  903:	    for (;p < state->handCount[currentPlayer]; p++){
        1:  903-block  0
        5:  903-block  1
        6:  903-block  2
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        5:  904:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  905:	    }
        1:  906:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
        1:  907:	    state->handCount[currentPlayer]--;
        1:  908:	    card_not_discarded = 0;//Exit the loop
        1:  908-block  0
        -:  909:	  }
    #####:  910:	  else if (p > state->handCount[currentPlayer]){
    $$$$$:  910-block  0
branch  0 never executed
branch  1 never executed
        -:  911:	    if(DEBUG) {
        -:  912:	      printf("No estate cards in your hand, invalid choice\n");
        -:  913:	      printf("Must gain an estate if there are any\n");
        -:  914:	    }
    #####:  915:	    if (supplyCount(estate, state) > 0){
    $$$$$:  915-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  916:	      gainCard(estate, state, 0, currentPlayer);
    $$$$$:  916-block  0
call    0 never executed
    #####:  917:	      state->supplyCount[estate]--;//Decrement estates
    #####:  918:	      if (supplyCount(estate, state) == 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  919:		isGameOver(state);
    $$$$$:  919-block  0
call    0 never executed
        -:  920:	      }
        -:  921:	    }
    #####:  922:	    card_not_discarded = 0;//Exit the loop
    $$$$$:  922-block  0
        -:  923:	  }
        -:  924:			    
        -:  925:	  else{
    #####:  926:	    p++;//Next card
    $$$$$:  926-block  0
        -:  927:	  }
        -:  928:	}
        -:  929:      }
        -:  930:			    
        -:  931:      else{
     1006:  932:	if (supplyCount(estate, state) > 0){
     1006:  932-block  0
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
     1006:  933:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
     1006:  933-block  0
call    0 returned 100%
     1006:  934:	  state->supplyCount[estate]--;//Decrement Estates
     1006:  935:	  if (supplyCount(estate, state) == 0){
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:  936:	    isGameOver(state);
    $$$$$:  936-block  0
call    0 never executed
        -:  937:	  }
        -:  938:	}
        -:  939:      }
        -:  940:	    
        -:  941:      
     1007:  942:      return 0;
     1007:  942-block  0
        -:  943:		
        -:  944:    case great_hall:
        -:  945:      //+1 Card
    #####:  946:      drawCard(currentPlayer, state);
    $$$$$:  946-block  0
call    0 never executed
        -:  947:			
        -:  948:      //+1 Actions
    #####:  949:      state->numActions++;
        -:  950:			
        -:  951:      //discard card from hand
    #####:  952:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####:  953:      return 0;
        -:  954:		
        -:  955:    case minion:
        -:  956:      //+1 action
    #####:  957:      state->numActions++;
        -:  958:			
        -:  959:      //discard card from hand
    #####:  960:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$:  960-block  0
call    0 never executed
        -:  961:			
    #####:  962:      if (choice1)		//+2 coins
branch  0 never executed
branch  1 never executed
        -:  963:	{
    #####:  964:	  state->coins = state->coins + 2;
    $$$$$:  964-block  0
        -:  965:	}
        -:  966:			
    #####:  967:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
    $$$$$:  967-block  0
branch  0 never executed
branch  1 never executed
        -:  968:	{
        -:  969:	  //discard hand
    #####:  970:	  while(numHandCards(state) > 0)
    $$$$$:  970-block  0
    $$$$$:  970-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  971:	    {
    #####:  972:	      discardCard(handPos, currentPlayer, state, 0);
    $$$$$:  972-block  0
call    0 never executed
        -:  973:	    }
        -:  974:				
        -:  975:	  //draw 4
    #####:  976:	  for (i = 0; i < 4; i++)
    $$$$$:  976-block  0
    $$$$$:  976-block  1
branch  0 never executed
branch  1 never executed
        -:  977:	    {
    #####:  978:	      drawCard(currentPlayer, state);
    $$$$$:  978-block  0
call    0 never executed
        -:  979:	    }
        -:  980:				
        -:  981:	  //other players discard hand and redraw if hand size > 4
    #####:  982:	  for (i = 0; i < state->numPlayers; i++)
    $$$$$:  982-block  0
    $$$$$:  982-block  1
    $$$$$:  982-block  2
branch  0 never executed
branch  1 never executed
        -:  983:	    {
    #####:  984:	      if (i != currentPlayer)
    $$$$$:  984-block  0
branch  0 never executed
branch  1 never executed
        -:  985:		{
    #####:  986:		  if ( state->handCount[i] > 4 )
    $$$$$:  986-block  0
branch  0 never executed
branch  1 never executed
        -:  987:		    {
        -:  988:		      //discard hand
    #####:  989:		      while( state->handCount[i] > 0 )
    $$$$$:  989-block  0
    $$$$$:  989-block  1
branch  0 never executed
branch  1 never executed
        -:  990:			{
    #####:  991:			  discardCard(handPos, i, state, 0);
    $$$$$:  991-block  0
call    0 never executed
        -:  992:			}
        -:  993:							
        -:  994:		      //draw 4
    #####:  995:		      for (j = 0; j < 4; j++)
    $$$$$:  995-block  0
    $$$$$:  995-block  1
branch  0 never executed
branch  1 never executed
        -:  996:			{
    #####:  997:			  drawCard(i, state);
    $$$$$:  997-block  0
call    0 never executed
        -:  998:			}
        -:  999:		    }
        -: 1000:		}
        -: 1001:	    }
        -: 1002:				
        -: 1003:	}
    #####: 1004:      return 0;
    $$$$$: 1004-block  0
        -: 1005:		
        -: 1006:    case steward:
        6: 1007:      if (choice1 == 1)
        6: 1007-block  0
branch  0 taken 33% (fallthrough)
branch  1 taken 67%
        -: 1008:	{
        -: 1009:	  //+2 cards
        2: 1010:	  drawCard(currentPlayer, state);
        2: 1010-block  0
call    0 returned 100%
        2: 1011:	  drawCard(currentPlayer, state);
call    0 returned 100%
        -: 1012:	}
        4: 1013:      else if (choice1 == 2)
        4: 1013-block  0
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
        -: 1014:	{
        -: 1015:	  //+2 coins
        2: 1016:	  state->coins = state->coins + 2;
        2: 1016-block  0
        -: 1017:	}
        -: 1018:      else
        -: 1019:	{
        -: 1020:	  //trash 2 cards in hand
        2: 1021:	  discardCard(choice2, currentPlayer, state, 1);
        2: 1021-block  0
call    0 returned 100%
        2: 1022:	  discardCard(choice3, currentPlayer, state, 1);
call    0 returned 100%
        -: 1023:	}
        -: 1024:			
        -: 1025:      //discard card from hand
        6: 1026:      discardCard(handPos, currentPlayer, state, 0);
        6: 1026-block  0
call    0 returned 100%
        6: 1027:      return 0;
        -: 1028:		
        -: 1029:    case tribute:
    #####: 1030:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    $$$$$: 1030-block  0
branch  0 never executed
branch  1 never executed
    #####: 1031:	if (state->deckCount[nextPlayer] > 0){
    $$$$$: 1031-block  0
branch  0 never executed
branch  1 never executed
    #####: 1032:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1033:	  state->deckCount[nextPlayer]--;
    $$$$$: 1033-block  0
        -: 1034:	}
    #####: 1035:	else if (state->discardCount[nextPlayer] > 0){
    $$$$$: 1035-block  0
branch  0 never executed
branch  1 never executed
    #####: 1036:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1037:	  state->discardCount[nextPlayer]--;
    $$$$$: 1037-block  0
        -: 1038:	}
        -: 1039:	else{
        -: 1040:	  //No Card to Reveal
        -: 1041:	  if (DEBUG){
        -: 1042:	    printf("No cards to reveal\n");
        -: 1043:	  }
        -: 1044:	}
        -: 1045:      }
        -: 1046:	    
        -: 1047:      else{
    #####: 1048:	if (state->deckCount[nextPlayer] == 0){
    $$$$$: 1048-block  0
branch  0 never executed
branch  1 never executed
    #####: 1049:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    $$$$$: 1049-block  0
    $$$$$: 1049-block  1
    $$$$$: 1049-block  2
branch  0 never executed
branch  1 never executed
    #####: 1050:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1051:	    state->deckCount[nextPlayer]++;
    #####: 1052:	    state->discard[nextPlayer][i] = -1;
    #####: 1053:	    state->discardCount[nextPlayer]--;
        -: 1054:	  }
        -: 1055:			    
    #####: 1056:	  shuffle(nextPlayer,state);//Shuffle the deck
    $$$$$: 1056-block  0
call    0 never executed
        -: 1057:	} 
    #####: 1058:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1059:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1060:	state->deckCount[nextPlayer]--;
    #####: 1061:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1062:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1063:	state->deckCount[nextPlayer]--;
    $$$$$: 1063-block  0
        -: 1064:      }    
        -: 1065:		       
    #####: 1066:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one 
    $$$$$: 1066-block  0
branch  0 never executed
branch  1 never executed
    #####: 1067:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1068:	state->playedCardCount++;
    #####: 1069:	tributeRevealedCards[1] = -1;
    $$$$$: 1069-block  0
        -: 1070:      }
        -: 1071:
    #####: 1072:      for (i = 0; i <= 2; i ++){
    $$$$$: 1072-block  0
    $$$$$: 1072-block  1
    $$$$$: 1072-block  2
branch  0 never executed
branch  1 never executed
    #####: 1073:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    $$$$$: 1073-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1073-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1073-block  2
branch  4 never executed
branch  5 never executed
    #####: 1074:	  state->coins += 2;
    $$$$$: 1074-block  0
        -: 1075:	}
        -: 1076:		    
    #####: 1077:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    $$$$$: 1077-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1077-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1077-block  2
branch  4 never executed
branch  5 never executed
    $$$$$: 1077-block  3
branch  6 never executed
branch  7 never executed
    $$$$$: 1077-block  4
branch  8 never executed
branch  9 never executed
    #####: 1078:	  drawCard(currentPlayer, state);
    $$$$$: 1078-block  0
call    0 never executed
    #####: 1079:	  drawCard(currentPlayer, state);
call    0 never executed
        -: 1080:	}
        -: 1081:	else{//Action Card
    #####: 1082:	  state->numActions = state->numActions + 2;
    $$$$$: 1082-block  0
        -: 1083:	}
        -: 1084:      }
        -: 1085:	    
    #####: 1086:      return 0;
    $$$$$: 1086-block  0
        -: 1087:		
        -: 1088:    case ambassador:
    #####: 1089:      j = 0;		//used to check if player has enough cards to discard
        -: 1090:
    #####: 1091:      if (choice2 > 2 || choice2 < 0)
    $$$$$: 1091-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1091-block  1
branch  2 never executed
branch  3 never executed
        -: 1092:	{
    #####: 1093:	  return -1;				
    $$$$$: 1093-block  0
        -: 1094:	}
        -: 1095:
    #####: 1096:      if (choice1 == handPos)
    $$$$$: 1096-block  0
branch  0 never executed
branch  1 never executed
        -: 1097:	{
    #####: 1098:	  return -1;
    $$$$$: 1098-block  0
        -: 1099:	}
        -: 1100:
    #####: 1101:      for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1101-block  0
    $$$$$: 1101-block  1
    $$$$$: 1101-block  2
branch  0 never executed
branch  1 never executed
        -: 1102:	{
    #####: 1103:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
    $$$$$: 1103-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1103-block  1
branch  2 never executed
branch  3 never executed
    $$$$$: 1103-block  2
branch  4 never executed
branch  5 never executed
        -: 1104:	    {
    #####: 1105:	      j++;
    $$$$$: 1105-block  0
        -: 1106:	    }
        -: 1107:	}
    #####: 1108:      if (j < choice2)
    $$$$$: 1108-block  0
branch  0 never executed
branch  1 never executed
        -: 1109:	{
    #####: 1110:	  return -1;				
    $$$$$: 1110-block  0
        -: 1111:	}
        -: 1112:
        -: 1113:      if (DEBUG) 
        -: 1114:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1115:
        -: 1116:      //increase supply count for choosen card by amount being discarded
    #####: 1117:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1118:			
        -: 1119:      //each other player gains a copy of revealed card
    #####: 1120:      for (i = 0; i < state->numPlayers; i++)
    $$$$$: 1120-block  0
    $$$$$: 1120-block  1
    $$$$$: 1120-block  2
branch  0 never executed
branch  1 never executed
        -: 1121:	{
    #####: 1122:	  if (i != currentPlayer)
    $$$$$: 1122-block  0
branch  0 never executed
branch  1 never executed
        -: 1123:	    {
    #####: 1124:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
    $$$$$: 1124-block  0
call    0 never executed
        -: 1125:	    }
        -: 1126:	}
        -: 1127:
        -: 1128:      //discard played card from hand
    #####: 1129:      discardCard(handPos, currentPlayer, state, 0);			
    $$$$$: 1129-block  0
call    0 never executed
        -: 1130:
        -: 1131:      //trash copies of cards returned to supply
    #####: 1132:      for (j = 0; j < choice2; j++)
    $$$$$: 1132-block  0
    $$$$$: 1132-block  1
branch  0 never executed
branch  1 never executed
        -: 1133:	{
    #####: 1134:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1134-block  0
    $$$$$: 1134-block  1
    $$$$$: 1134-block  2
branch  0 never executed
branch  1 never executed
        -: 1135:	    {
    #####: 1136:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
    $$$$$: 1136-block  0
branch  0 never executed
branch  1 never executed
        -: 1137:		{
    #####: 1138:		  discardCard(i, currentPlayer, state, 1);
    $$$$$: 1138-block  0
call    0 never executed
    #####: 1139:		  break;
        -: 1140:		}
        -: 1141:	    }
        -: 1142:	}			
        -: 1143:
    #####: 1144:      return 0;
    $$$$$: 1144-block  0
        -: 1145:		
        -: 1146:    case cutpurse:
        -: 1147:
    #####: 1148:      updateCoins(currentPlayer, state, 2);
    $$$$$: 1148-block  0
call    0 never executed
    #####: 1149:      for (i = 0; i < state->numPlayers; i++)
    $$$$$: 1149-block  0
    $$$$$: 1149-block  1
branch  0 never executed
branch  1 never executed
        -: 1150:	{
    #####: 1151:	  if (i != currentPlayer)
    $$$$$: 1151-block  0
branch  0 never executed
branch  1 never executed
        -: 1152:	    {
    #####: 1153:	      for (j = 0; j < state->handCount[i]; j++)
    $$$$$: 1153-block  0
    $$$$$: 1153-block  1
    $$$$$: 1153-block  2
branch  0 never executed
branch  1 never executed
        -: 1154:		{
    #####: 1155:		  if (state->hand[i][j] == copper)
    $$$$$: 1155-block  0
branch  0 never executed
branch  1 never executed
        -: 1156:		    {
    #####: 1157:		      discardCard(j, i, state, 0);
    $$$$$: 1157-block  0
call    0 never executed
    #####: 1158:		      break;
        -: 1159:		    }
    #####: 1160:		  if (j == state->handCount[i])
    $$$$$: 1160-block  0
branch  0 never executed
branch  1 never executed
        -: 1161:		    {
    #####: 1162:		      for (k = 0; k < state->handCount[i]; k++)
    $$$$$: 1162-block  0
    $$$$$: 1162-block  1
    $$$$$: 1162-block  2
branch  0 never executed
branch  1 never executed
        -: 1163:			{
        -: 1164:			  if (DEBUG)
        -: 1165:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1166:			}	
    #####: 1167:		      break;
    $$$$$: 1167-block  0
        -: 1168:		    }		
        -: 1169:		}
        -: 1170:					
        -: 1171:	    }
        -: 1172:				
        -: 1173:	}				
        -: 1174:
        -: 1175:      //discard played card from hand
    #####: 1176:      discardCard(handPos, currentPlayer, state, 0);			
    $$$$$: 1176-block  0
call    0 never executed
        -: 1177:
    #####: 1178:      return 0;
        -: 1179:
        -: 1180:		
        -: 1181:    case embargo: 
        -: 1182:      //+2 Coins
    #####: 1183:      state->coins = state->coins + 2;
        -: 1184:			
        -: 1185:      //see if selected pile is in play
    #####: 1186:      if ( state->supplyCount[choice1] == -1 )
    $$$$$: 1186-block  0
branch  0 never executed
branch  1 never executed
        -: 1187:	{
    #####: 1188:	  return -1;
    $$$$$: 1188-block  0
        -: 1189:	}
        -: 1190:			
        -: 1191:      //add embargo token to selected supply pile
    #####: 1192:      state->embargoTokens[choice1]++;
        -: 1193:			
        -: 1194:      //trash card
    #####: 1195:      discardCard(handPos, currentPlayer, state, 1);		
    $$$$$: 1195-block  0
call    0 never executed
    #####: 1196:      return 0;
        -: 1197:		
        -: 1198:    case outpost:
        -: 1199:      //set outpost flag
    #####: 1200:      state->outpostPlayed++;
        -: 1201:			
        -: 1202:      //discard card
    #####: 1203:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$: 1203-block  0
call    0 never executed
    #####: 1204:      return 0;
        -: 1205:		
        -: 1206:    case salvager:
        -: 1207:      //+1 buy
    #####: 1208:      state->numBuys++;
        -: 1209:			
    #####: 1210:      if (choice1)
    $$$$$: 1210-block  0
branch  0 never executed
branch  1 never executed
        -: 1211:	{
        -: 1212:	  //gain coins equal to trashed card
    #####: 1213:	  state->coins = state->coins + getCost( handCard(choice1, state) );
    $$$$$: 1213-block  0
call    0 never executed
call    1 never executed
        -: 1214:	  //trash card
    #####: 1215:	  discardCard(choice1, currentPlayer, state, 1);	
call    0 never executed
        -: 1216:	}
        -: 1217:			
        -: 1218:      //discard card
    #####: 1219:      discardCard(handPos, currentPlayer, state, 0);
    $$$$$: 1219-block  0
call    0 never executed
    #####: 1220:      return 0;
        -: 1221:		
        -: 1222:    case sea_hag:
    #####: 1223:      for (i = 0; i < state->numPlayers; i++){
    $$$$$: 1223-block  0
    $$$$$: 1223-block  1
    $$$$$: 1223-block  2
branch  0 never executed
branch  1 never executed
    #####: 1224:	if (i != currentPlayer){
    $$$$$: 1224-block  0
branch  0 never executed
branch  1 never executed
    #####: 1225:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1226:	  state->discardCount[i]++;
    #####: 1227:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
    $$$$$: 1227-block  0
        -: 1228:	}
        -: 1229:      }
    #####: 1230:      return 0;
    $$$$$: 1230-block  0
        -: 1231:		
        -: 1232:    case treasure_map:
        -: 1233:      //search hand for another treasure_map
    #####: 1234:      index = -1;
    #####: 1235:      for (i = 0; i < state->handCount[currentPlayer]; i++)
    $$$$$: 1235-block  0
    $$$$$: 1235-block  1
    $$$$$: 1235-block  2
branch  0 never executed
branch  1 never executed
        -: 1236:	{
    #####: 1237:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
    $$$$$: 1237-block  0
branch  0 never executed
branch  1 never executed
    $$$$$: 1237-block  1
branch  2 never executed
branch  3 never executed
        -: 1238:	    {
    #####: 1239:	      index = i;
    #####: 1240:	      break;
    $$$$$: 1240-block  0
        -: 1241:	    }
        -: 1242:	}
    #####: 1243:      if (index > -1)
    $$$$$: 1243-block  0
branch  0 never executed
branch  1 never executed
        -: 1244:	{
        -: 1245:	  //trash both treasure cards
    #####: 1246:	  discardCard(handPos, currentPlayer, state, 1);
    $$$$$: 1246-block  0
call    0 never executed
    #####: 1247:	  discardCard(index, currentPlayer, state, 1);
call    0 never executed
        -: 1248:
        -: 1249:	  //gain 4 Gold cards
    #####: 1250:	  for (i = 0; i < 4; i++)
    $$$$$: 1250-block  0
branch  0 never executed
branch  1 never executed
        -: 1251:	    {
    #####: 1252:	      gainCard(gold, state, 1, currentPlayer);
    $$$$$: 1252-block  0
call    0 never executed
        -: 1253:	    }
        -: 1254:				
        -: 1255:	  //return success
    #####: 1256:	  return 1;
    $$$$$: 1256-block  0
        -: 1257:	}
        -: 1258:			
        -: 1259:      //no second treasure_map found in hand
    #####: 1260:      return -1;
    $$$$$: 1260-block  0
        -: 1261:    }
        -: 1262:	
     3019: 1263:  return -1;
    $$$$$: 1263-block  0
     3019: 1263-block  1
        -: 1264:}
        -: 1265:
function discardCard called 3048 returned 100% blocks executed 89%
     3048: 1266:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
     3048: 1266-block  0
        -: 1267:{
        -: 1268:	
        -: 1269:  //if card is not trashed, added to Played pile 
     3048: 1270:  if (trashFlag < 1)
     3048: 1270-block  0
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
        -: 1271:    {
        -: 1272:      //add card to played pile
     3037: 1273:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos]; 
     3037: 1274:      state->playedCardCount++;
     3037: 1274-block  0
        -: 1275:    }
        -: 1276:	
        -: 1277:  //set played card to -1
     3048: 1278:  state->hand[currentPlayer][handPos] = -1;
        -: 1279:	
        -: 1280:  //remove card from player's hand
     3048: 1281:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
     3048: 1281-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1282:    {
        -: 1283:      //reduce number of cards in hand
       11: 1284:      state->handCount[currentPlayer]--;
       11: 1284-block  0
        -: 1285:    }
     3037: 1286:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
     3037: 1286-block  0
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -: 1287:    {
        -: 1288:      //reduce number of cards in hand
    #####: 1289:      state->handCount[currentPlayer]--;
    $$$$$: 1289-block  0
        -: 1290:    }
        -: 1291:  else 	
        -: 1292:    {
        -: 1293:      //replace discarded card with last card in hand
     3037: 1294:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1295:      //set last card to -1
     3037: 1296:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1297:      //reduce number of cards in hand
     3037: 1298:      state->handCount[currentPlayer]--;
     3037: 1298-block  0
        -: 1299:    }
        -: 1300:	
     3048: 1301:  return 0;
     3048: 1301-block  0
        -: 1302:}
        -: 1303:
function gainCard called 1017 returned 100% blocks executed 100%
     1017: 1304:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
     1017: 1304-block  0
        -: 1305:{
        -: 1306:  //Note: supplyPos is enum of choosen card
        -: 1307:	
        -: 1308:  //check if supply pile is empty (0) or card is not used in game (-1)
     1017: 1309:  if ( supplyCount(supplyPos, state) < 1 )
     1017: 1309-block  0
call    0 returned 100%
branch  1 taken 1% (fallthrough)
branch  2 taken 99%
        -: 1310:    {
        2: 1311:      return -1;
        2: 1311-block  0
        -: 1312:    }
        -: 1313:	
        -: 1314:  //added card for [whoseTurn] current player:
        -: 1315:  // toFlag = 0 : add to discard
        -: 1316:  // toFlag = 1 : add to deck
        -: 1317:  // toFlag = 2 : add to hand
        -: 1318:
     1015: 1319:  if (toFlag == 1)
     1015: 1319-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1320:    {
        2: 1321:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
        2: 1322:      state->deckCount[player]++;
        2: 1322-block  0
        -: 1323:    }
     1013: 1324:  else if (toFlag == 2)
     1013: 1324-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1325:    {
        2: 1326:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
        2: 1327:      state->handCount[player]++;
        2: 1327-block  0
        -: 1328:    }
        -: 1329:  else
        -: 1330:    {
     1011: 1331:      state->discard[player][ state->discardCount[player] ] = supplyPos;
     1011: 1332:      state->discardCount[player]++;
     1011: 1332-block  0
        -: 1333:    }
        -: 1334:	
        -: 1335:  //decrease number in supply pile
     1015: 1336:  state->supplyCount[supplyPos]--;
        -: 1337:	 
     1015: 1338:  return 0;
     1015: 1338-block  0
        -: 1339:}
        -: 1340:
function updateCoins called 3061 returned 100% blocks executed 100%
     3061: 1341:int updateCoins(int player, struct gameState *state, int bonus)
     3061: 1341-block  0
        -: 1342:{
        -: 1343:  int i;
        -: 1344:	
        -: 1345:  //reset coin count
     3061: 1346:  state->coins = 0;
        -: 1347:
        -: 1348:  //add coins for each Treasure card in player's hand
    18366: 1349:  for (i = 0; i < state->handCount[player]; i++)
     3061: 1349-block  0
    15305: 1349-block  1
    18366: 1349-block  2
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        -: 1350:    {
    15305: 1351:      if (state->hand[player][i] == copper)
    15305: 1351-block  0
branch  0 taken 70% (fallthrough)
branch  1 taken 30%
        -: 1352:	{
    10665: 1353:	  state->coins += 1;
    10665: 1353-block  0
        -: 1354:	}
     4640: 1355:      else if (state->hand[player][i] == silver)
     4640: 1355-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1356:	{
       10: 1357:	  state->coins += 2;
       10: 1357-block  0
        -: 1358:	}
     4630: 1359:      else if (state->hand[player][i] == gold)
     4630: 1359-block  0
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1360:	{
       10: 1361:	  state->coins += 3;
       10: 1361-block  0
        -: 1362:	}	
        -: 1363:    }	
        -: 1364:
        -: 1365:  //add bonus
     3061: 1366:  state->coins += bonus;
        -: 1367:
     3061: 1368:  return 0;
     3061: 1368-block  0
        -: 1369:}
        -: 1370:
        -: 1371:
        -: 1372:/************************************************
        -: 1373:Start of function unit tests
        -: 1374:*************************************************/
        -: 1375:
function testUpdateCoins called 0 returned 0% blocks executed 0%
    #####: 1376:int testUpdateCoins(int player, struct gameState *state, int bonus) {
    $$$$$: 1376-block  0
        -: 1377:  
    #####: 1378:}
        -: 1379:
        -: 1380:
        -: 1381://end of dominion.c
        -: 1382:
